import{_ as l,o as r,c as a,a as t,b as n,d as e,e as s,r as i}from"./app.e22df933.js";const h={},c=t("h1",{id:"nushell-0-28",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-28","aria-hidden":"true"},"#"),e(" Nushell 0.28")],-1),d=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),u=t("p",null,"Today, we're releasing 0.28 of Nu. In this release we've added new commands for working with tables, paths, and lots of general feature improvements.",-1),_=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),p=e("Nu 0.28 is available as "),m={href:"https://github.com/nushell/nushell/releases/tag/0.28.0",target:"_blank",rel:"noopener noreferrer"},g=e("pre-built binaries"),f=e(" or from "),b={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},w=e("crates.io"),x=e(". If you have Rust installed you can install it using "),k=t("code",null,"cargo install nu",-1),v=e("."),y=s(`<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>If you&#39;d like to try the experimental paging feature in this release, you can install with <code>cargo install nu --features=table-pager</code>.</p><p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="what-s-new" tabindex="-1"><a class="header-anchor" href="#what-s-new" aria-hidden="true">#</a> What&#39;s New</h1><h2 id="new-commands" tabindex="-1"><a class="header-anchor" href="#new-commands" aria-hidden="true">#</a> New commands</h2><h3 id="rotate-andrasio" tabindex="-1"><a class="header-anchor" href="#rotate-andrasio" aria-hidden="true">#</a> Rotate (andrasio)</h3><p>With the new <code>rotate</code> command, we have an easier way to turn rows to columns and columns to rows.</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; echo [[col1, col2, col3]; [cell1, cell2, cell3] [cell4, cell5, cell6]] | rotate
\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
 # \u2502 Column0 \u2502 Column1 \u2502 Column2
\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
 0 \u2502 cell4   \u2502 cell1   \u2502 col1
 1 \u2502 cell5   \u2502 cell2   \u2502 col2
 2 \u2502 cell6   \u2502 cell3   \u2502 col3
\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
</code></pre></div><p>You can also rotate counter-clockwise:</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; echo [[col1, col2, col3]; [cell1, cell2, cell3] [cell4, cell5, cell6]] | rotate counter-clockwise
\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
 # \u2502 Column0 \u2502 Column1 \u2502 Column2
\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
 0 \u2502 col3    \u2502 cell3   \u2502 cell6
 1 \u2502 col2    \u2502 cell2   \u2502 cell5
 2 \u2502 col1    \u2502 cell1   \u2502 cell4
\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
</code></pre></div><h3 id="column-rolling-andrasio" tabindex="-1"><a class="header-anchor" href="#column-rolling-andrasio" aria-hidden="true">#</a> Column rolling (andrasio)</h3><p>You are now able to move columns around in the same way you may do a bitwise-rotate.</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; echo &#39;00000100&#39;
| split chars
| each { str to-int }
| rotate counter-clockwise _
| reject _
| rename bit1 bit2 bit3 bit4 bit5 bit6 bit7 bit8
| roll column 3

\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500
 # \u2502 bit4 \u2502 bit5 \u2502 bit6 \u2502 bit7 \u2502 bit8 \u2502 bit1 \u2502 bit2 \u2502 bit3
\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500
 0 \u2502    0 \u2502    0 \u2502    1 \u2502    0 \u2502    0 \u2502    0 \u2502    0 \u2502    0
\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500
</code></pre></div><h3 id="dropping-columns-andrasio" tabindex="-1"><a class="header-anchor" href="#dropping-columns-andrasio" aria-hidden="true">#</a> Dropping columns (andrasio)</h3><p>The new <code>drop column</code> subcommand also gives you the ability to remove the last column from a table.</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; echo [[lib, extension]; [nu-core, rs] [rake, rb]] | drop column
\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
   lib
\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
 nu-core
 rake
\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500
</code></pre></div><h3 id="ansi-strip-fdncred" tabindex="-1"><a class="header-anchor" href="#ansi-strip-fdncred" aria-hidden="true">#</a> ANSI strip (fdncred)</h3>`,17),N=e("With the new "),C={href:"https://github.com/nushell/nushell/pull/3095",target:"_blank",rel:"noopener noreferrer"},I=t("code",null,"ansi strip",-1),T=e(" command"),W=e(", you can remove ansi sequences from a string of text."),j=s(`<h3 id="path-joining-kubouch" tabindex="-1"><a class="header-anchor" href="#path-joining-kubouch" aria-hidden="true">#</a> Path joining (kubouch)</h3><p>We now have a <code>path join</code> command which allows you to join part of a path to an existing path following the path conventions for your platform.</p><p>For example, on Windows:</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; echo &#39;C:\\Users\\viking&#39; | path join spam.txt
</code></pre></div><p>Or Unix-based systems:</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; echo &#39;/home/viking&#39; | path join spam.txt
</code></pre></div><h2 id="functionality" tabindex="-1"><a class="header-anchor" href="#functionality" aria-hidden="true">#</a> Functionality</h2><h3 id="experimental-built-in-table-paging-rezural" tabindex="-1"><a class="header-anchor" href="#experimental-built-in-table-paging-rezural" aria-hidden="true">#</a> (Experimental) Built-in table paging (rezural)</h3>`,8),S=e("If you build Nushell with the optional "),V=t("code",null,"--features=table-pager",-1),z=e(" you'll see some new capabilities we're working on that will let you "),F={href:"https://github.com/nushell/nushell/pull/3128",target:"_blank",rel:"noopener noreferrer"},L=e("view a table with a built-in pager"),B=e("."),E=s('<p>In the future, we&#39;ll likely move this to its own command so that you can enable paging in much the same way you would use <code>less</code> in other shells.</p><p>Let us know how this works for you.</p><h3 id="timing-your-pipelines-fdncred" tabindex="-1"><a class="header-anchor" href="#timing-your-pipelines-fdncred" aria-hidden="true">#</a> Timing your pipelines (fdncred)</h3><p>You can now see the time spent in the last set of commands you sent to Nushell by checking the new <code>$nu.env.CMD_DURATION</code> environment variable.</p><p>This will let you, for example, add timings to your prompts for all your fancy prompt needs.</p><h3 id="improved-matches-ilius-kubouch" tabindex="-1"><a class="header-anchor" href="#improved-matches-ilius-kubouch" aria-hidden="true">#</a> Improved matches (ilius, kubouch)</h3>',6),A=e("The "),D=t("code",null,"match",-1),O=e(" command has a "),P={href:"https://github.com/nushell/nushell/pull/3111",target:"_blank",rel:"noopener noreferrer"},U=e("few new flags"),Y=e(" to give you more control over how you'd like to match text."),J=e("You're now also able to "),R={href:"https://github.com/nushell/nushell/pull/3114",target:"_blank",rel:"noopener noreferrer"},q=e("invert the match"),$=e("."),K=t("h3",{id:"fetch-now-uses-the-latest-surf-and-rustls-fdncred",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fetch-now-uses-the-latest-surf-and-rustls-fdncred","aria-hidden":"true"},"#"),e(" Fetch now uses the latest surf and rustls (fdncred)")],-1),M=e("We're experimenting with moving away from openssl for some commands. In this release, we've moved "),G={href:"https://github.com/nushell/nushell/pull/3120",target:"_blank",rel:"noopener noreferrer"},H=t("code",null,"fetch",-1),Q=e(" to use the latest surf"),X=e(", which gives us the ability to use rustls instead of openssl. Please try this out and let us know how it works for you."),Z=t("h3",{id:"cleaner-help-output-kubouch",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cleaner-help-output-kubouch","aria-hidden":"true"},"#"),e(" Cleaner help output (kubouch)")],-1),ee=e("We've cleaned up the help, so that there's now a difference between "),te={href:"https://github.com/nushell/nushell/pull/3124",target:"_blank",rel:"noopener noreferrer"},oe=e("the synopsis for a command and its full help text"),ne=e(". This makes "),se=t("code",null,"help commands",-1),le=e(" output a table that's much easier to read."),re=t("h3",{id:"json-order-is-now-preserved-again-andrasio",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#json-order-is-now-preserved-again-andrasio","aria-hidden":"true"},"#"),e(" JSON order is now preserved, again (andrasio)")],-1),ae=t("p",null,"We previously supported preserving the order of fields of JSON when serialized and deserialized, but as we changed and updated dependencies we lost this ability.",-1),ie=e("In this release, it's been re-added so that "),he={href:"https://github.com/nushell/nushell/pull/3126",target:"_blank",rel:"noopener noreferrer"},ce=e("fields will preserve order"),de=e(" once again."),ue=t("h3",{id:"exit-codes-tiffany352",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#exit-codes-tiffany352","aria-hidden":"true"},"#"),e(" Exit codes (tiffany352)")],-1),_e=e("The "),pe=t("code",null,"exit",-1),me=e(" command can now "),ge={href:"https://github.com/nushell/nushell/pull/3132",target:"_blank",rel:"noopener noreferrer"},fe=e("optionally take an exit code"),be=e(", allowing you to quit a nushell with an exit code that can be detect outside of the shell."),we=t("h3",{id:"vscode-extension-is-now-published-fdncred",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#vscode-extension-is-now-published-fdncred","aria-hidden":"true"},"#"),e(" VSCode extension is now published (fdncred)")],-1),xe=e("VSCode users can now use the VSCode extension for Nushell "),ke={href:"https://marketplace.visualstudio.com/items?itemName=TheNuProjectContributors.vscode-nushell-lang",target:"_blank",rel:"noopener noreferrer"},ve=e("right from the VSCode marketplace"),ye=e("!"),Ne=t("h2",{id:"internal",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#internal","aria-hidden":"true"},"#"),e(" Internal")],-1),Ce=e("Improved "),Ie={href:"https://github.com/nushell/nushell/pull/3078",target:"_blank",rel:"noopener noreferrer"},Te=e("tests for nu-env"),We=e(" (andrasio)"),je=e("We now remove the "),Se={href:"https://github.com/nushell/nushell/pull/3084",target:"_blank",rel:"noopener noreferrer"},Ve=e("current directory ("),ze=t("code",null,".",-1),Fe=e(") from paths"),Le=e(" where possible (iCodeSometime)"),Be=e("We've begun a multi-step process of simplifying how tables are rendered. The first step is to "),Ee={href:"https://github.com/nushell/nushell/pull/3088",target:"_blank",rel:"noopener noreferrer"},Ae=e("convert drawing table to return strings"),De=e(" (rezural)."),Oe=e("We've "),Pe={href:"https://github.com/nushell/nushell/pull/3089",target:"_blank",rel:"noopener noreferrer"},Ue=e("vendored an ansi term crate"),Ye=e(" to make it easier to improve. This helped make "),Je={href:"https://github.com/nushell/nushell/pull/3100",target:"_blank",rel:"noopener noreferrer"},Re=e("'Light' colors"),qe=e(" easier to reach. (fdncred)"),$e=e("We've removed some "),Ke={href:"https://github.com/nushell/nushell/pull/3091",target:"_blank",rel:"noopener noreferrer"},Me=e("unnecessary dependencies"),Ge=e(" (stormasm)"),He=e("Some general "),Qe={href:"https://github.com/nushell/nushell/pull/3093",target:"_blank",rel:"noopener noreferrer"},Xe=e("improvements to parser logic"),Ze=e(" (ilius)"),et=e("Some crashes in "),tt={href:"https://github.com/nushell/nushell/pull/3099",target:"_blank",rel:"noopener noreferrer"},ot=t("code",null,"flatten",-1),nt=e(" and docs were fixed"),st=e(" (stormasm)"),lt=e("We're now using the "),rt={href:"https://github.com/nushell/nushell/pull/3112",target:"_blank",rel:"noopener noreferrer"},at=e("host for output"),it=e(" rather than "),ht=t("code",null,"std::err",-1),ct=e(" for better portability. (LhKipp)"),dt=e("Improved ergnomics "),ut={href:"https://github.com/nushell/nushell/pull/3133",target:"_blank",rel:"noopener noreferrer"},_t=e("when working with $nothing"),pt=e(" (fdncred)"),mt=e("Fixed some "),gt={href:"https://github.com/nushell/nushell/pull/3140",target:"_blank",rel:"noopener noreferrer"},ft=e("locking logic when working with output"),bt=e(" (ahkrr)"),wt=e("Bel and backspace are "),xt={href:"https://github.com/nushell/nushell/pull/3144",target:"_blank",rel:"noopener noreferrer"},kt=e("now part of "),vt=t("code",null,"char",-1),yt=e(" (fdncred)"),Nt={href:"https://github.com/nushell/nushell/pull/3146",target:"_blank",rel:"noopener noreferrer"},Ct=e("Trash functionality has been fixed"),It=e(" (tw4452852)"),Tt=e("Today's crates.io release was also "),Wt={href:"https://github.com/nushell/nu_scripts/blob/main/nu_release.nu",target:"_blank",rel:"noopener noreferrer"},jt=e("fully automated, thanks to Nushell"),St=e(" (jonathandturner)"),Vt=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),zt=e("Instructions for building and "),Ft={href:"https://github.com/nushell/nushell.github.io/pull/109",target:"_blank",rel:"noopener noreferrer"},Lt=e("running the website locally"),Bt=e(" (jakevossen5)"),Et=e("Updates to the "),At={href:"https://github.com/nushell/nushell.github.io/pull/108",target:"_blank",rel:"noopener noreferrer"},Dt=e("docker instructions"),Ot=e(" (jakevossen5)"),Pt=e("Improvements to the "),Ut={href:"https://github.com/nushell/nushell.github.io/pull/107",target:"_blank",rel:"noopener noreferrer"},Yt=e("environment documentation"),Jt=e(" (stormasm)"),Rt=e("Fixed typo in the "),qt={href:"https://github.com/nushell/nushell.github.io/pull/106",target:"_blank",rel:"noopener noreferrer"},$t=e("textview docs"),Kt=e(" (davidmalcolm)"),Mt=e("Corrected "),Gt={href:"https://github.com/nushell/nushell.github.io/pull/104",target:"_blank",rel:"noopener noreferrer"},Ht=e("Nushell version in excerpt"),Qt=e(" (iCodeSometime)"),Xt=e("Fixed a typo in the "),Zt={href:"https://github.com/nushell/nushell.github.io/pull/103",target:"_blank",rel:"noopener noreferrer"},eo=e("PowerShell comparison"),to=e(" (JTurtl3)"),oo=t("h1",{id:"looking-ahead",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#looking-ahead","aria-hidden":"true"},"#"),e(" Looking ahead")],-1),no=e("We're continuing our 1.0 planning and hope to publish a proposal soon for your feedback. There are also some on-going experiments, including a new "),so={href:"https://github.com/jonathandturner/reedline",target:"_blank",rel:"noopener noreferrer"},lo=e("line editor"),ro=e(" that are offering good insights into better ways of working with the terminal."),ao=t("p",null,"And, of course, we hear the feedback about improving completions. We're very much interested in beginning experiments here that will lead to a far better experience as we approach 1.0.",-1);function io(ho,co){const o=i("ExternalLinkIcon");return r(),a("div",null,[c,d,u,_,t("p",null,[p,t("a",m,[g,n(o)]),f,t("a",b,[w,n(o)]),x,k,v]),y,t("p",null,[N,t("a",C,[I,T,n(o)]),W]),j,t("p",null,[S,V,z,t("a",F,[L,n(o)]),B]),E,t("p",null,[A,D,O,t("a",P,[U,n(o)]),Y]),t("p",null,[J,t("a",R,[q,n(o)]),$]),K,t("p",null,[M,t("a",G,[H,Q,n(o)]),X]),Z,t("p",null,[ee,t("a",te,[oe,n(o)]),ne,se,le]),re,ae,t("p",null,[ie,t("a",he,[ce,n(o)]),de]),ue,t("p",null,[_e,pe,me,t("a",ge,[fe,n(o)]),be]),we,t("p",null,[xe,t("a",ke,[ve,n(o)]),ye]),Ne,t("ul",null,[t("li",null,[Ce,t("a",Ie,[Te,n(o)]),We]),t("li",null,[je,t("a",Se,[Ve,ze,Fe,n(o)]),Le]),t("li",null,[Be,t("a",Ee,[Ae,n(o)]),De]),t("li",null,[Oe,t("a",Pe,[Ue,n(o)]),Ye,t("a",Je,[Re,n(o)]),qe]),t("li",null,[$e,t("a",Ke,[Me,n(o)]),Ge]),t("li",null,[He,t("a",Qe,[Xe,n(o)]),Ze]),t("li",null,[et,t("a",tt,[ot,nt,n(o)]),st]),t("li",null,[lt,t("a",rt,[at,n(o)]),it,ht,ct]),t("li",null,[dt,t("a",ut,[_t,n(o)]),pt]),t("li",null,[mt,t("a",gt,[ft,n(o)]),bt]),t("li",null,[wt,t("a",xt,[kt,vt,n(o)]),yt]),t("li",null,[t("a",Nt,[Ct,n(o)]),It]),t("li",null,[Tt,t("a",Wt,[jt,n(o)]),St])]),Vt,t("ul",null,[t("li",null,[zt,t("a",Ft,[Lt,n(o)]),Bt]),t("li",null,[Et,t("a",At,[Dt,n(o)]),Ot]),t("li",null,[Pt,t("a",Ut,[Yt,n(o)]),Jt]),t("li",null,[Rt,t("a",qt,[$t,n(o)]),Kt]),t("li",null,[Mt,t("a",Gt,[Ht,n(o)]),Qt]),t("li",null,[Xt,t("a",Zt,[eo,n(o)]),to])]),oo,t("p",null,[no,t("a",so,[lo,n(o)]),ro]),ao])}var _o=l(h,[["render",io],["__file","2021-03-09-nushell_0_28.html.vue"]]);export{_o as default};
