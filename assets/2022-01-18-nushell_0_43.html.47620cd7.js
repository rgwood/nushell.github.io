import{_ as n,o as r,c as i,a as t,b as s,d as e,e as a,r as l}from"./app.79ccc45b.js";const h={},c=t("h1",{id:"nushell-0-43",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-43","aria-hidden":"true"},"#"),e(" Nushell 0.43")],-1),d=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),u=t("p",null,"Today, we're releasing 0.43 of Nu. This release is a bugfix release of 0.42.",-1),_=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),p=e("Nu 0.43 is available as "),f={href:"https://github.com/nushell/nushell/releases/tag/0.43.0",target:"_blank",rel:"noopener noreferrer"},g=e("pre-built binaries"),m=e(" or from "),b={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},y=e("crates.io"),w=e(". If you have Rust installed you can install it using "),k=t("code",null,"cargo install nu",-1),x=e("."),N=a('<p>If you want all the goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="what-s-new" tabindex="-1"><a class="header-anchor" href="#what-s-new" aria-hidden="true">#</a> What&#39;s New</h1><p>You can now learn about some of the upcoming changes in Nushell by reading the <code>tutor e-q</code> page. It will tell you about some of the new features and breaking changes, as well as link you to the full list of changes.</p><h2 id="fixes" tabindex="-1"><a class="header-anchor" href="#fixes" aria-hidden="true">#</a> Fixes</h2>',5),q=e("Fix to the "),v={href:"https://github.com/nushell/nushell/pull/4241",target:"_blank",rel:"noopener noreferrer"},I=e("sample configuration file"),T=e(" (ilius)"),W=e("Fix to a "),E={href:"https://github.com/nushell/nushell/pull/4247",target:"_blank",rel:"noopener noreferrer"},j=e("crate description"),A=e(" (michel-slm)"),B=e("Bump to some "),F={href:"https://github.com/nushell/nushell/pull/4258",target:"_blank",rel:"noopener noreferrer"},L=e("dependencies in wasm support"),V=e(" (dependabot)"),G=e("Update to "),R={href:"https://github.com/nushell/nushell/pull/4261",target:"_blank",rel:"noopener noreferrer"},Y=e("sysinfo support"),z=e(" (GuillaumeGomez)"),C=e("Fix to build "),H={href:"https://github.com/nushell/nushell/pull/4262",target:"_blank",rel:"noopener noreferrer"},M=e("on latest Rust stable + clippy"),O=e(" (jt)"),P=t("h1",{id:"engine-q-progress",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#engine-q-progress","aria-hidden":"true"},"#"),e(" Engine-q progress")],-1),S=t("p",null,[e("Engine-q is now nearly complete. Most of the commands have been ported, as has support for the "),t("code",null,"shells"),e(" feature, many reedline-related improvements, text encoding, and much more. It's now ready for early adopters to pick it up and use it as their shell, reporting any issues they find.")],-1),U=e("To try it out, you can "),D={href:"https://github.com/nushell/engine-q",target:"_blank",rel:"noopener noreferrer"},J=e("build and run engine-q as a standalone application"),K=e(". Also check out the "),Q={href:"https://github.com/nushell/engine-q/issues/459",target:"_blank",rel:"noopener noreferrer"},X=e("list of configuration settings"),Z=e(", "),$={href:"https://github.com/nushell/engine-q/issues/522",target:"_blank",rel:"noopener noreferrer"},ee=e("list of breaking changes"),te=e(", and "),oe={href:"https://github.com/nushell/engine-q/issues/735",target:"_blank",rel:"noopener noreferrer"},se=e("the final checklist before engine-q merges into Nushell"),ne=e("."),re=t("p",null,"We're hoping to merge engine-q into the main Nushell codebase after the the upcoming 0.44 release. We'll number this release 0.60 to show how much progress has been made by switching to the new engine. We've love to get your feedback on engine-q before it becomes the main Nushell, to help us fix any major issues before the merge happens. Let us know what you find!",-1),ie=e("You can check out a "),ae={href:"https://www.youtube.com/watch?v=c18l_HPsOxs",target:"_blank",rel:"noopener noreferrer"},le=e("recent video about engine-q"),he=e(" if you'd like to see it in action."),ce=t("h1",{id:"looking-forward",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#looking-forward","aria-hidden":"true"},"#"),e(" Looking forward")],-1),de=e("There are still "),ue={href:"https://github.com/nushell/engine-q/issues/242",target:"_blank",rel:"noopener noreferrer"},_e=e("some commands left to port"),pe=e(" if you'd like to jump in and give porting a try. If you're interested, you can also help us by testing out engine-q itself as a shell and report your experiences with it. And of course, come join us on the "),fe={href:"https://discord.gg/NtAbbGn",target:"_blank",rel:"noopener noreferrer"},ge=e("discord"),me=e(". We'd be happy to show you around."),be=t("p",null,"Thanks again for all your support.",-1);function ye(we,ke){const o=l("ExternalLinkIcon");return r(),i("div",null,[c,d,u,_,t("p",null,[p,t("a",f,[g,s(o)]),m,t("a",b,[y,s(o)]),w,k,x]),N,t("ul",null,[t("li",null,[q,t("a",v,[I,s(o)]),T]),t("li",null,[W,t("a",E,[j,s(o)]),A]),t("li",null,[B,t("a",F,[L,s(o)]),V]),t("li",null,[G,t("a",R,[Y,s(o)]),z]),t("li",null,[C,t("a",H,[M,s(o)]),O])]),P,S,t("p",null,[U,t("a",D,[J,s(o)]),K,t("a",Q,[X,s(o)]),Z,t("a",$,[ee,s(o)]),te,t("a",oe,[se,s(o)]),ne]),re,t("p",null,[ie,t("a",ae,[le,s(o)]),he]),ce,t("p",null,[de,t("a",ue,[_e,s(o)]),pe,t("a",fe,[ge,s(o)]),me]),be])}var Ne=n(h,[["render",ye],["__file","2022-01-18-nushell_0_43.html.vue"]]);export{Ne as default};
