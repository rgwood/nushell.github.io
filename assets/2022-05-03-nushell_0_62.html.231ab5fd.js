import{_ as l,o as r,c as h,a as t,b as n,d as e,e as s,r as i}from"./app.79ccc45b.js";const a={},_=t("h1",{id:"nushell-0-62",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-62","aria-hidden":"true"},"#"),e(" Nushell 0.62")],-1),d=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),c=t("p",null,"Today, we're releasing version 0.62 of Nu. This release deeper integration with SQLite, new completion logic, and much more.",-1),u=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),p=e("Nu 0.62 is available as "),f={href:"https://github.com/nushell/nushell/releases/tag/0.62.0",target:"_blank",rel:"noopener noreferrer"},g=e("pre-built binaries"),b=e(" or from "),m={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},k=e("crates.io"),w=e(". If you have Rust installed you can install it using "),y=t("code",null,"cargo install nu",-1),v=e("."),x=s(`<p><strong>A note on this release:</strong> The binaries published by the Nu team now include a statically linked copy of the OpenSSL library (previously Nu used a shared library, AKA &#39;dynamic linking&#39;). The goal of this change is to make Nu simpler to deploy with fewer dependencies.</p><p>This feature is enabled by the &quot;static-link-openssl&quot; Cargo feature, so it&#39;s easy to disable if needed when building Nu.</p><p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="database-connectivity-rgwood-elferherrera-fdncred" tabindex="-1"><a class="header-anchor" href="#database-connectivity-rgwood-elferherrera-fdncred" aria-hidden="true">#</a> Database connectivity (rgwood, elferherrera, fdncred)</h1><p>A gap in the &quot;Nushell story&quot; up to this point has been that although Nushell is a language and shell focused on data, there wasn&#39;t yet any ability to query databases and work with their data. With 0.62, we take our first step in that direction.</p><p>New in this release is the <code>db</code> command, which allows you to connect to a SQLite database and create a SQL query to run on it:</p><div class="language-text ext-text"><pre class="language-text"><code>  &gt; db open db.sqlite
    | db from table_a
    | db select a
    | db limit 10
    | db describe
</code></pre></div><p>With the <code>db open</code> command we open a connection to the database, then subsequent <code>db</code> commands build up a query step by step. One new twist with <code>db</code> for Nushell is that the query is built lazily, and will only be run once the data is needed.</p><p>Queries can also be written as raw SQL:</p><div class="language-text ext-text"><pre class="language-text"><code>  &gt; db open db.sqlite | db query &quot;SELECT a FROM table_a LIMIT 10&quot;
</code></pre></div><p>And finally, the <code>open</code> command has been updated to be SQLite-aware:</p><div class="language-text ext-text"><pre class="language-text"><code>  &gt; open db.sqlite
</code></pre></div><p>In all of the queries above, <code>db open db.sqlite</code> could be replaced by <code>open db.sqlite</code>; <code>open</code> is able to detect databases by looking at file contents.</p><h1 id="full-translation-of-the-book-to-chinese-hustcer" tabindex="-1"><a class="header-anchor" href="#full-translation-of-the-book-to-chinese-hustcer" aria-hidden="true">#</a> Full translation of the book to Chinese (hustcer)</h1>`,15),N=e("The book is now fully translated to "),C={href:"https://www.nushell.sh/zh-CN/book/",target:"_blank",rel:"noopener noreferrer"},A=e("Chinese (zh-CN)"),q=e(". Huge shout-out to hustcer for doing all the work on the translation!"),T=t("h1",{id:"more-completions-herlon214-jt",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#more-completions-herlon214-jt","aria-hidden":"true"},"#"),e(" More completions (herlon214, jt)")],-1),S=t("p",null,"Nushell can now complete record fields, cell paths in variables created in previous REPL runs, and more.",-1),F=t("p",null,"Starting with 0.62, Nushell will prefer to wrap filenames with spaces in backticks when completing. This allows for filenames to have single quotes, while also being compatible with upcoming improvements in filename handling.",-1),z=t("h1",{id:"new-commands",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#new-commands","aria-hidden":"true"},"#"),e(" New commands")],-1),I={href:"https://github.com/nushell/nushell/pull/5331",target:"_blank",rel:"noopener noreferrer"},L=t("code",null,"watch",-1),j=e(" can now watch a filepath and run a block if a change occurs (rgwood)"),M=t("h1",{id:"quality-of-life-improvements",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#quality-of-life-improvements","aria-hidden":"true"},"#"),e(" Quality-of-life Improvements")],-1),E=s("<li><p><code>ctrl+o</code> - opens your editor of choice to edit line input (elferherrera)</p><ul><li>Make sure to set <code>buffer_editor</code> in your configuration so Nushell can find your editor</li></ul></li><li><p>You can use <code>()</code> in create filenames. eg) <code>ls ./($dirname)</code> (jt)</p><ul><li>Note: this currently only works if the <code>()</code> isn&#39;t the start of the filepath</li></ul></li><li><p><code>ctrl+c</code> now breaks in more cases (gipsyh)</p></li><li><p><code>$nu.os-info</code> can give you information about the platform Nushell is running on. (fdncred)</p></li><li><p><code>~user</code> is now a known path shorthand (merelymyself)&#39;</p></li><li><p>Errors now have helpful descriptions that will show up in the error docs. (zkat)</p></li>",6),U=e("Nushell now has "),Q={href:"https://github.com/nushell/nushell/pull/5162",target:"_blank",rel:"noopener noreferrer"},R=e("better shell integration"),D=e(" for terminals like kitty. (schrieveslaach)"),$=t("li",null,[t("p",null,[t("strong",null,"Note:"),e(' this is a shortened list. For the full list, see the "Changelog" section below')])],-1),B=s('<h1 id="breaking-changes" tabindex="-1"><a class="header-anchor" href="#breaking-changes" aria-hidden="true">#</a> Breaking changes</h1><ul><li><code>^=</code> is now <code>starts-with</code></li><li>config is now an environment variable <ul><li>To update, move <code>let config = ...</code> to <code>let-env config = ...</code></li><li>This change was done for performance reasons and gives considerable performance improvements in some use cases.</li></ul></li></ul><h1 id="looking-ahead" tabindex="-1"><a class="header-anchor" href="#looking-ahead" aria-hidden="true">#</a> Looking ahead</h1><p>The <code>db</code> command joins the <code>dfr</code> command in a set of experiments we&#39;re working on to better understand how to integrate Nushell with a wider set of data sources. Coming up soon are &quot;lazy dataframes&quot;. These, like the new <code>db</code> command, will allow you to build up a query against a dataframe before you execute it. This allows for much more efficient processing of the request against the data source.</p><p>The Nushell design team is deep in discussions about how to make this more universal, allowing the Nushell language to build up queries lazily against a data source, and allowing the data source to perform the optimal native query. There&#39;s more research to do here, but we&#39;re looking forward to being able to take what we&#39;ve learned and grow the Nushell language. In the end, we hope, you won&#39;t need separate command sets for each data source type. Instead, you&#39;ll be able to connect and build your query all in the base Nushell language.</p><h1 id="changelog" tabindex="-1"><a class="header-anchor" href="#changelog" aria-hidden="true">#</a> Changelog</h1><h2 id="nushell" tabindex="-1"><a class="header-anchor" href="#nushell" aria-hidden="true">#</a> Nushell</h2>',7),O=e("sholderbach created "),W={href:"https://github.com/nushell/nushell/pull/5427",target:"_blank",rel:"noopener noreferrer"},P=e("Pin reedline to v0.5.0 for the next release"),V=e(", and "),H={href:"https://github.com/nushell/nushell/pull/5410",target:"_blank",rel:"noopener noreferrer"},Y=e("Fix CI to run doctests again"),Z=e(", and "),G={href:"https://github.com/nushell/nushell/pull/5404",target:"_blank",rel:"noopener noreferrer"},K=e("Bump reedline"),J=e(", and "),X={href:"https://github.com/nushell/nushell/pull/5249",target:"_blank",rel:"noopener noreferrer"},ee=e("Set to reedline main branch for development cycle"),te=e("elferherrera created "),oe={href:"https://github.com/nushell/nushell/pull/5426",target:"_blank",rel:"noopener noreferrer"},ne=e("added open editor event in config parsing"),se=e(", and "),le={href:"https://github.com/nushell/nushell/pull/5417",target:"_blank",rel:"noopener noreferrer"},re=e("Database commands"),he=e(", and "),ie={href:"https://github.com/nushell/nushell/pull/5390",target:"_blank",rel:"noopener noreferrer"},ae=e("Line buffer keybinding"),_e=e(", and "),de={href:"https://github.com/nushell/nushell/pull/5381",target:"_blank",rel:"noopener noreferrer"},ce=e("Line buffer editor"),ue=e(", and "),pe={href:"https://github.com/nushell/nushell/pull/5343",target:"_blank",rel:"noopener noreferrer"},fe=e("Database commands"),ge=e(", and "),be={href:"https://github.com/nushell/nushell/pull/5307",target:"_blank",rel:"noopener noreferrer"},me=e("Database commands"),ke=e("zhiburt created "),we={href:"https://github.com/nushell/nushell/pull/5425",target:"_blank",rel:"noopener noreferrer"},ye=e("Fix coloring when string has spaces"),ve=e("jt created "),xe={href:"https://github.com/nushell/nushell/pull/5419",target:"_blank",rel:"noopener noreferrer"},Ne=e("Update path completions to handle spaces"),Ce=e(", and "),Ae={href:"https://github.com/nushell/nushell/pull/5407",target:"_blank",rel:"noopener noreferrer"},qe=e("Rename =^ to 'starts-with'"),Te=e(", and "),Se={href:"https://github.com/nushell/nushell/pull/5403",target:"_blank",rel:"noopener noreferrer"},Fe=e("More escaping/unescaping fixes"),ze=e(", and "),Ie={href:"https://github.com/nushell/nushell/pull/5400",target:"_blank",rel:"noopener noreferrer"},Le=e("Adds error printing back in a couple places"),je=e(", and "),Me={href:"https://github.com/nushell/nushell/pull/5399",target:"_blank",rel:"noopener noreferrer"},Ee=e("Add unescaping to external command parsing"),Ue=e(", and "),Qe={href:"https://github.com/nushell/nushell/pull/5398",target:"_blank",rel:"noopener noreferrer"},Re=e("Move uses of trim_quotes to unescape for filenames"),De=e(", and "),$e={href:"https://github.com/nushell/nushell/pull/5386",target:"_blank",rel:"noopener noreferrer"},Be=e("Make if else more lazy"),Oe=e(", and "),We={href:"https://github.com/nushell/nushell/pull/5334",target:"_blank",rel:"noopener noreferrer"},Pe=e("Fix 'range' range exclusive"),Ve=e(", and "),He={href:"https://github.com/nushell/nushell/pull/5327",target:"_blank",rel:"noopener noreferrer"},Ye=e("Allow bare words to interpolate"),Ze=e(", and "),Ge={href:"https://github.com/nushell/nushell/pull/5318",target:"_blank",rel:"noopener noreferrer"},Ke=e("Warn if we see let config = .."),Je=e(", and "),Xe={href:"https://github.com/nushell/nushell/pull/5301",target:"_blank",rel:"noopener noreferrer"},et=e("Fix cd -"),tt=e(", and "),ot={href:"https://github.com/nushell/nushell/pull/5297",target:"_blank",rel:"noopener noreferrer"},nt=e("Add 'and' and 'or' operators"),st=e(", and "),lt={href:"https://github.com/nushell/nushell/pull/5271",target:"_blank",rel:"noopener noreferrer"},rt=e("Use better quoting for commandline args"),ht=e(", and "),it={href:"https://github.com/nushell/nushell/pull/5266",target:"_blank",rel:"noopener noreferrer"},at=e("Some cleanups for clippy"),_t=e(", and "),dt={href:"https://github.com/nushell/nushell/pull/5237",target:"_blank",rel:"noopener noreferrer"},ct=e("move config back to config.nu"),ut=e(", and "),pt={href:"https://github.com/nushell/nushell/pull/5230",target:"_blank",rel:"noopener noreferrer"},ft=e("Move config to be an env var"),gt=e("Tropid created "),bt={href:"https://github.com/nushell/nushell/pull/5416",target:"_blank",rel:"noopener noreferrer"},mt=e('Fix erroneous removal of "./" folder prefix'),kt=e(", and "),wt={href:"https://github.com/nushell/nushell/pull/5401",target:"_blank",rel:"noopener noreferrer"},yt=e("Update reedline to use partial completion changes"),vt=e(", and "),xt={href:"https://github.com/nushell/nushell/pull/5387",target:"_blank",rel:"noopener noreferrer"},Nt=e('Remove "./" prefix for file path completions'),Ct=e(", and "),At={href:"https://github.com/nushell/nushell/pull/5320",target:"_blank",rel:"noopener noreferrer"},qt=e("Fuzzy completion matching"),Tt=e(", and "),St={href:"https://github.com/nushell/nushell/pull/5244",target:"_blank",rel:"noopener noreferrer"},Ft=e("Add MatchAlgorithm for completion suggestions"),zt=e(", and "),It={href:"https://github.com/nushell/nushell/pull/5228",target:"_blank",rel:"noopener noreferrer"},Lt=e("Feature/refactor completion options"),jt=e("stormasm created "),Mt={href:"https://github.com/nushell/nushell/pull/5415",target:"_blank",rel:"noopener noreferrer"},Et=e("remove ctrl-l from config.nu as a way to clear scrollback"),Ut=e(", and "),Qt={href:"https://github.com/nushell/nushell/pull/5405",target:"_blank",rel:"noopener noreferrer"},Rt=e("event ClearScrollback is working in reedline / update config.nu"),Dt=e(", and "),$t={href:"https://github.com/nushell/nushell/pull/5356",target:"_blank",rel:"noopener noreferrer"},Bt=e("cleanup version command and add in database feature"),Ot=e(", and "),Wt={href:"https://github.com/nushell/nushell/pull/5350",target:"_blank",rel:"noopener noreferrer"},Pt=e("mute false import warning for nu-command test where_"),Vt=e(", and "),Ht={href:"https://github.com/nushell/nushell/pull/5256",target:"_blank",rel:"noopener noreferrer"},Yt=e("add newlines to the end of the default config files"),Zt=e("gipsyh created "),Gt={href:"https://github.com/nushell/nushell/pull/5409",target:"_blank",rel:"noopener noreferrer"},Kt=e("Fixed ctrl-c in recursion loop bug #5362"),Jt=e(", and "),Xt={href:"https://github.com/nushell/nushell/pull/5408",target:"_blank",rel:"noopener noreferrer"},eo=e("Fixed interrupting a for-loop over a list bug #5378"),to=e(", and "),oo={href:"https://github.com/nushell/nushell/pull/5369",target:"_blank",rel:"noopener noreferrer"},no=e("Don't resuggest accepted completions"),so=e(", and "),lo={href:"https://github.com/nushell/nushell/pull/5332",target:"_blank",rel:"noopener noreferrer"},ro=e("Fix use of "),ho=t("code",null,"export/alias --help",-1),io=e(" bug"),ao=e("rgwood created "),_o={href:"https://github.com/nushell/nushell/pull/5406",target:"_blank",rel:"noopener noreferrer"},co=e("CI: Add job to build plugins"),uo=e(", and "),po={href:"https://github.com/nushell/nushell/pull/5402",target:"_blank",rel:"noopener noreferrer"},fo=e('Add Miette "fancy" feature to fix plugin builds'),go=e(", and "),bo={href:"https://github.com/nushell/nushell/pull/5396",target:"_blank",rel:"noopener noreferrer"},mo=e("CI: build virtualenv tests in dev profile for speed"),ko=e(", and "),wo={href:"https://github.com/nushell/nushell/pull/5389",target:"_blank",rel:"noopener noreferrer"},yo=e("Error printing changes for "),vo=t("code",null,"watch",-1),xo=e(", and "),No={href:"https://github.com/nushell/nushell/pull/5374",target:"_blank",rel:"noopener noreferrer"},Co=e("Faster CI"),Ao=e(", and "),qo={href:"https://github.com/nushell/nushell/pull/5359",target:"_blank",rel:"noopener noreferrer"},To=e("rust-cache fix"),So=e(", and "),Fo={href:"https://github.com/nushell/nushell/pull/5358",target:"_blank",rel:"noopener noreferrer"},zo=e("CI: remove rust-cache from virtualenv tests"),Io=e(", and "),Lo={href:"https://github.com/nushell/nushell/pull/5357",target:"_blank",rel:"noopener noreferrer"},jo=e("CI: make Clippy reuse build artifacts, other cleanup"),Mo=e(", and "),Eo={href:"https://github.com/nushell/nushell/pull/5354",target:"_blank",rel:"noopener noreferrer"},Uo=e("CI: enable rust-cache, remove minimal"),Qo=e(", and "),Ro={href:"https://github.com/nushell/nushell/pull/5352",target:"_blank",rel:"noopener noreferrer"},Do=e("Openssl feature"),$o=e(", and "),Bo={href:"https://github.com/nushell/nushell/pull/5349",target:"_blank",rel:"noopener noreferrer"},Oo=e("Statically link OpenSSL"),Wo=e(", and "),Po={href:"https://github.com/nushell/nushell/pull/5338",target:"_blank",rel:"noopener noreferrer"},Vo=t("code",null,"db info",-1),Ho=e(" tweaks"),Yo=e(", and "),Zo={href:"https://github.com/nushell/nushell/pull/5331",target:"_blank",rel:"noopener noreferrer"},Go=e("Add watch command"),Ko=e(", and "),Jo={href:"https://github.com/nushell/nushell/pull/5328",target:"_blank",rel:"noopener noreferrer"},Xo=e("Move print_pipeline_data() to nu-protocol"),en=e(", and "),tn={href:"https://github.com/nushell/nushell/pull/5273",target:"_blank",rel:"noopener noreferrer"},on=e("Clean up tests and unused documentation code"),nn=e(", and "),sn={href:"https://github.com/nushell/nushell/pull/5272",target:"_blank",rel:"noopener noreferrer"},ln=e("Clean up unused files in repo root"),rn=e(", and "),hn={href:"https://github.com/nushell/nushell/pull/5248",target:"_blank",rel:"noopener noreferrer"},an=e("Handle custom values in "),_n=t("code",null,"describe",-1),dn=e(", and "),cn={href:"https://github.com/nushell/nushell/pull/5247",target:"_blank",rel:"noopener noreferrer"},un=e("SQLite overhaul: custom value, "),pn=t("code",null,"query db",-1),fn=e(" command"),gn=e("panicbit created "),bn={href:"https://github.com/nushell/nushell/pull/5395",target:"_blank",rel:"noopener noreferrer"},mn=e("Add ends-with operator and fix dataframe operator behavior"),kn=e("fdncred created "),wn={href:"https://github.com/nushell/nushell/pull/5394",target:"_blank",rel:"noopener noreferrer"},yn=e("a little database cleanup"),vn=e(", and "),xn={href:"https://github.com/nushell/nushell/pull/5380",target:"_blank",rel:"noopener noreferrer"},Nn=e("allows for nushell to have tables without the index column"),Cn=e(", and "),An={href:"https://github.com/nushell/nushell/pull/5372",target:"_blank",rel:"noopener noreferrer"},qn=e('Revert "nu-cli/completions: better fix for files with special characters"'),Tn=e(", and "),Sn={href:"https://github.com/nushell/nushell/pull/5345",target:"_blank",rel:"noopener noreferrer"},Fn=e("fixes an issue with an empty selector panic"),zn=e(", and "),In={href:"https://github.com/nushell/nushell/pull/5335",target:"_blank",rel:"noopener noreferrer"},Ln=t("code",null,"db info",-1),jn=e(" command"),Mn=e(", and "),En={href:"https://github.com/nushell/nushell/pull/5322",target:"_blank",rel:"noopener noreferrer"},Un=e("add database feature to extra"),Qn=e(", and "),Rn={href:"https://github.com/nushell/nushell/pull/5321",target:"_blank",rel:"noopener noreferrer"},Dn=e("update build status badge"),$n=e(", and "),Bn={href:"https://github.com/nushell/nushell/pull/5317",target:"_blank",rel:"noopener noreferrer"},On=e("update contrib to max=500"),Wn=e(", and "),Pn={href:"https://github.com/nushell/nushell/pull/5308",target:"_blank",rel:"noopener noreferrer"},Vn=e("update sys with new items, add kernel version to os-info"),Hn=e(", and "),Yn={href:"https://github.com/nushell/nushell/pull/5302",target:"_blank",rel:"noopener noreferrer"},Zn=e("consolidate shell integration behind config setting"),Gn=e(", and "),Kn={href:"https://github.com/nushell/nushell/pull/5280",target:"_blank",rel:"noopener noreferrer"},Jn=e("add virtualenv to integrations"),Xn=e(", and "),es={href:"https://github.com/nushell/nushell/pull/5265",target:"_blank",rel:"noopener noreferrer"},ts=e("update os-info os to name"),os=e(", and "),ns={href:"https://github.com/nushell/nushell/pull/5243",target:"_blank",rel:"noopener noreferrer"},ss=e("add os to $nu based on rust's understanding"),ls=e("kubouch created "),rs={href:"https://github.com/nushell/nushell/pull/5393",target:"_blank",rel:"noopener noreferrer"},hs=e("Fix PATH update example"),is=e("herlon214 created "),as={href:"https://github.com/nushell/nushell/pull/5385",target:"_blank",rel:"noopener noreferrer"},_s=e("nu-cli/completions: complete external args as filepath"),ds=e(", and "),cs={href:"https://github.com/nushell/nushell/pull/5382",target:"_blank",rel:"noopener noreferrer"},us=e("nu-cli/completions: apply correctly nesting for env vars"),ps=e(", and "),fs={href:"https://github.com/nushell/nushell/pull/5310",target:"_blank",rel:"noopener noreferrer"},gs=e("nu-command/filesystem: remove newline from cd path"),bs=e(", and "),ms={href:"https://github.com/nushell/nushell/pull/5303",target:"_blank",rel:"noopener noreferrer"},ks=e("nu-cli/completions: add completion for $nu"),ws=e(", and "),ys={href:"https://github.com/nushell/nushell/pull/5299",target:"_blank",rel:"noopener noreferrer"},vs=e("nu-cli: directory syntax shape + completions"),xs=e(", and "),Ns={href:"https://github.com/nushell/nushell/pull/5298",target:"_blank",rel:"noopener noreferrer"},Cs=e("nu-cli/completions: support record for custom completion"),As=e(", and "),qs={href:"https://github.com/nushell/nushell/pull/5254",target:"_blank",rel:"noopener noreferrer"},Ts=e("nu-cli/completions: better fix for files with special characters"),Ss=e(", and "),Fs={href:"https://github.com/nushell/nushell/pull/5242",target:"_blank",rel:"noopener noreferrer"},zs=e("nu-cli/completions: fix file completions with quotes"),Is=e(", and "),Ls={href:"https://github.com/nushell/nushell/pull/5232",target:"_blank",rel:"noopener noreferrer"},js=e("nu-cli: added tests for file completions"),Ms=e("uasi created "),Es={href:"https://github.com/nushell/nushell/pull/5384",target:"_blank",rel:"noopener noreferrer"},Us=e("Fix quoting for command line args"),Qs=e(", and "),Rs={href:"https://github.com/nushell/nushell/pull/5365",target:"_blank",rel:"noopener noreferrer"},Ds=e("Avoid using time conversion methods that may panic"),$s=e("jmoore34 created "),Bs={href:"https://github.com/nushell/nushell/pull/5355",target:"_blank",rel:"noopener noreferrer"},Os=e("Change description of "),Ws=t("code",null,"sort",-1),Ps=e("efx created "),Vs={href:"https://github.com/nushell/nushell/pull/5346",target:"_blank",rel:"noopener noreferrer"},Hs=e("improve inc plugin docs"),Ys=e("xgillard created "),Zs={href:"https://github.com/nushell/nushell/pull/5326",target:"_blank",rel:"noopener noreferrer"},Gs=e("activates optional trim in 'from csv' and 'from tsv'"),Ks=e("merelymyself created "),Js={href:"https://github.com/nushell/nushell/pull/5323",target:"_blank",rel:"noopener noreferrer"},Xs=e("Allows cd (and other commands that depend on current working directory) to use path of type '~user'"),el=e(", and "),tl={href:"https://github.com/nushell/nushell/pull/5251",target:"_blank",rel:"noopener noreferrer"},ol=e("Adding ~user tilde recognition in file paths"),nl=e(", and "),sl={href:"https://github.com/nushell/nushell/pull/5224",target:"_blank",rel:"noopener noreferrer"},ll=e("Added search terms to math commands"),rl=e("jokeyrhyme created "),hl={href:"https://github.com/nushell/nushell/pull/5311",target:"_blank",rel:"noopener noreferrer"},il=e("fix: remove "),al=t("code",null,"println!()",-1),_l=e(" from "),dl=t("code",null,"exec",-1),cl=e(" builtin"),ul=e("babalolajnr created "),pl={href:"https://github.com/nushell/nushell/pull/5306",target:"_blank",rel:"noopener noreferrer"},fl=e("feat: add search terms to date"),gl=e("raboof created "),bl={href:"https://github.com/nushell/nushell/pull/5264",target:"_blank",rel:"noopener noreferrer"},ml=e("typo: seach -> search"),kl=e(", and "),wl={href:"https://github.com/nushell/nushell/pull/5253",target:"_blank",rel:"noopener noreferrer"},yl=e("git completion: 'git fetch' for remotes"),vl=e("jaeheonji created "),xl={href:"https://github.com/nushell/nushell/pull/5259",target:"_blank",rel:"noopener noreferrer"},Nl=e("feat: add search terms to "),Cl=t("code",null,"conversions",-1),Al=e("pinjeff created "),ql={href:"https://github.com/nushell/nushell/pull/5246",target:"_blank",rel:"noopener noreferrer"},Tl=e("refactor html module"),Sl=e("Yethal created "),Fl={href:"https://github.com/nushell/nushell/pull/5229",target:"_blank",rel:"noopener noreferrer"},zl=e("allow par-each to receive $in"),Il=e("Sygmei created "),Ll={href:"https://github.com/nushell/nushell/pull/5227",target:"_blank",rel:"noopener noreferrer"},jl=e("add custom_completion field to "),Ml=t("code",null,"$nu.scope.commands",-1),El=e(" command"),Ul=e("zkat created "),Ql={href:"https://github.com/nushell/nushell/pull/5222",target:"_blank",rel:"noopener noreferrer"},Rl=e("update miette and switch to GenericErrors"),Dl=e(", and "),$l={href:"https://github.com/nushell/nushell/pull/5172",target:"_blank",rel:"noopener noreferrer"},Bl=e("documented ShellError errors."),Ol=e("filaretov created "),Wl={href:"https://github.com/nushell/nushell/pull/5219",target:"_blank",rel:"noopener noreferrer"},Pl=e("Simplify known external tests"),Vl=e(", and "),Hl={href:"https://github.com/nushell/nushell/pull/5216",target:"_blank",rel:"noopener noreferrer"},Yl=e("Add known external tests"),Zl=e(", and "),Gl={href:"https://github.com/nushell/nushell/pull/5213",target:"_blank",rel:"noopener noreferrer"},Kl=e("Simplify known external name recovery"),Jl=e("homburg created "),Xl={href:"https://github.com/nushell/nushell/pull/5217",target:"_blank",rel:"noopener noreferrer"},er=t("code",null,"nth",-1),tr=e(" -> "),or=t("code",null,"select",-1),nr=e(" command"),sr=e("andrasio created "),lr={href:"https://github.com/nushell/nushell/pull/5214",target:"_blank",rel:"noopener noreferrer"},rr=e("Remove 'empty' block support reminders, for now."),hr=e("strega-nil created "),ir={href:"https://github.com/nushell/nushell/pull/5212",target:"_blank",rel:"noopener noreferrer"},ar=e("[ls, path relative-to] Fix use of "),_r=t("code",null,"ls ~ | path relative-to ~",-1),dr=e(", and "),cr={href:"https://github.com/nushell/nushell/pull/5180",target:"_blank",rel:"noopener noreferrer"},ur=e("don't join paths to cwd ever in calls to external functions"),pr=e("herlon214 created "),fr={href:"https://github.com/nushell/nushell/pull/5210",target:"_blank",rel:"noopener noreferrer"},gr=e("nu-cli/completions: completion for use and source"),br=e(", and "),mr={href:"https://github.com/nushell/nushell/pull/5207",target:"_blank",rel:"noopener noreferrer"},kr=e("nu-cli/completions: removed unnecessary bool"),wr=e(", and "),yr={href:"https://github.com/nushell/nushell/pull/5204",target:"_blank",rel:"noopener noreferrer"},vr=e("Completion for variables of type Record"),xr=e(", and "),Nr={href:"https://github.com/nushell/nushell/pull/5199",target:"_blank",rel:"noopener noreferrer"},Cr=e("nu-cli/completions: add completion for $env."),Ar=e("fdncred created "),qr={href:"https://github.com/nushell/nushell/pull/5209",target:"_blank",rel:"noopener noreferrer"},Tr=e("add hex color parsing to ansi"),Sr=e(", and "),Fr={href:"https://github.com/nushell/nushell/pull/5201",target:"_blank",rel:"noopener noreferrer"},zr=e("updated cargo.lock with cargo update"),Ir=e(", and "),Lr={href:"https://github.com/nushell/nushell/pull/5187",target:"_blank",rel:"noopener noreferrer"},jr=e("tweak ci building badge"),Mr=e(", and "),Er={href:"https://github.com/nushell/nushell/pull/5177",target:"_blank",rel:"noopener noreferrer"},Ur=e("allow default color shortcut names"),Qr=e("stormasm created "),Rr={href:"https://github.com/nushell/nushell/pull/5208",target:"_blank",rel:"noopener noreferrer"},Dr=e("cleanup nu-command, remove redundant code"),$r=e(", and "),Br={href:"https://github.com/nushell/nushell/pull/5184",target:"_blank",rel:"noopener noreferrer"},Or=e("update crate chrono-tz to its latest version"),Wr=e("jt created "),Pr={href:"https://github.com/nushell/nushell/pull/5206",target:"_blank",rel:"noopener noreferrer"},Vr=e("Move to dev version 0.61.1"),Hr=e("uasi created "),Yr={href:"https://github.com/nushell/nushell/pull/5205",target:"_blank",rel:"noopener noreferrer"},Zr=e("Fix env capture"),Gr=e("dantswain created "),Kr={href:"https://github.com/nushell/nushell/pull/5200",target:"_blank",rel:"noopener noreferrer"},Jr=e("Avoid duplicating post headers"),Xr=e("ZetaNumbers created "),eh={href:"https://github.com/nushell/nushell/pull/5193",target:"_blank",rel:"noopener noreferrer"},th=e("fix: reduce command have not redirected block's evaluation output"),oh=e("nibon7 created "),nh={href:"https://github.com/nushell/nushell/pull/5192",target:"_blank",rel:"noopener noreferrer"},sh=e("fix timestamp parsing on 32-bit platforms"),lh=e("hustcer created "),rh={href:"https://github.com/nushell/nushell/pull/5188",target:"_blank",rel:"noopener noreferrer"},hh=e("Fix completions for "),ih=t("code",null,"git push",-1),ah=e(" and "),_h=t("code",null,"git checkout",-1),dh=e(" close: #5021 and #4599"),ch=e(", and "),uh={href:"https://github.com/nushell/nushell/pull/5176",target:"_blank",rel:"noopener noreferrer"},ph=e("Add a dockerfile example based on debian bullseye-slim"),fh=e("tiffany352 created "),gh={href:"https://github.com/nushell/nushell/pull/5183",target:"_blank",rel:"noopener noreferrer"},bh=e("Add "),mh=t("code",null,"char -i",-1),kh=e(" for chars from integers"),wh=e(", and "),yh={href:"https://github.com/nushell/nushell/pull/5174",target:"_blank",rel:"noopener noreferrer"},vh=e("Allow passing an integer to "),xh=t("code",null,"char -u",-1),Nh=e("rgwood created "),Ch={href:"https://github.com/nushell/nushell/pull/5182",target:"_blank",rel:"noopener noreferrer"},Ah=e("Initial SQLite functionality"),qh=e("schrieveslaach created "),Th={href:"https://github.com/nushell/nushell/pull/5162",target:"_blank",rel:"noopener noreferrer"},Sh=e("Shell Integration"),Fh=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),zh=e("hustcer created "),Ih={href:"https://github.com/nushell/nushell.github.io/pull/427",target:"_blank",rel:"noopener noreferrer"},Lh=e("Update zh-CN docs"),jh=e(", and "),Mh={href:"https://github.com/nushell/nushell.github.io/pull/425",target:"_blank",rel:"noopener noreferrer"},Eh=e("feat: Add github action related stuff"),Uh=e(", and "),Qh={href:"https://github.com/nushell/nushell.github.io/pull/422",target:"_blank",rel:"noopener noreferrer"},Rh=e("More proofreading work for the zh-CN translations"),Dh=e(", and "),$h={href:"https://github.com/nushell/nushell.github.io/pull/421",target:"_blank",rel:"noopener noreferrer"},Bh=e("Fix some broken links"),Oh=e(", and "),Wh={href:"https://github.com/nushell/nushell.github.io/pull/420",target:"_blank",rel:"noopener noreferrer"},Ph=e("Some proofreading work for zh-CN translations"),Vh=e(", and "),Hh={href:"https://github.com/nushell/nushell.github.io/pull/419",target:"_blank",rel:"noopener noreferrer"},Yh=e("Update zh-CN translations to the latest english version of commit: b6c91cabfa"),Zh=e(", and "),Gh={href:"https://github.com/nushell/nushell.github.io/pull/417",target:"_blank",rel:"noopener noreferrer"},Kh=e("Update some node modules"),Jh=e(", and "),Xh={href:"https://github.com/nushell/nushell.github.io/pull/415",target:"_blank",rel:"noopener noreferrer"},ei=e("Translate dataframes.md to zh-CN from commit: 92fb0ac2c"),ti=e(", and "),oi={href:"https://github.com/nushell/nushell.github.io/pull/414",target:"_blank",rel:"noopener noreferrer"},ni=e("Add basic config and pages for Turkish"),si=e(", and "),li={href:"https://github.com/nushell/nushell.github.io/pull/413",target:"_blank",rel:"noopener noreferrer"},ri=e("Add translation guide"),hi=e(", and "),ii={href:"https://github.com/nushell/nushell.github.io/pull/412",target:"_blank",rel:"noopener noreferrer"},ai=e("Translate line_editor.md to zh-CN from commit: e0688a346"),_i=e(", and "),di={href:"https://github.com/nushell/nushell.github.io/pull/408",target:"_blank",rel:"noopener noreferrer"},ci=e("Update i18n.nu add "),ui=t("code",null,"outdated",-1),pi=e(" command to check outdated translations"),fi=e(", and "),gi={href:"https://github.com/nushell/nushell.github.io/pull/407",target:"_blank",rel:"noopener noreferrer"},bi=e("Translate coloring_and_theming.md to zh-CN from commit: f3dc86d3d"),mi=e(", and "),ki={href:"https://github.com/nushell/nushell.github.io/pull/403",target:"_blank",rel:"noopener noreferrer"},wi=e("Translate some small docs to zh-CN from commit: f5987a82d"),yi=e(", and "),vi={href:"https://github.com/nushell/nushell.github.io/pull/400",target:"_blank",rel:"noopener noreferrer"},xi=e("Fix some typo and Translate configuration & environment to zh-CN from commit: f5987a82d"),Ni=e(", and "),Ci={href:"https://github.com/nushell/nushell.github.io/pull/396",target:"_blank",rel:"noopener noreferrer"},Ai=e("Translate lots of small docs to zh-CN from commit: ae23eeba3"),qi=e("reillysiemens created "),Ti={href:"https://github.com/nushell/nushell.github.io/pull/426",target:"_blank",rel:"noopener noreferrer"},Si=e("Fix broken nu_scripts repo link"),Fi=e("merelymyself created "),zi={href:"https://github.com/nushell/nushell.github.io/pull/424",target:"_blank",rel:"noopener noreferrer"},Ii=e('Changed the confusing title of "Working With Strings"'),Li=e("Yethal created "),ji={href:"https://github.com/nushell/nushell.github.io/pull/418",target:"_blank",rel:"noopener noreferrer"},Mi=e("Update working_with_tables.md"),Ei=e("morzel85 created "),Ui={href:"https://github.com/nushell/nushell.github.io/pull/416",target:"_blank",rel:"noopener noreferrer"},Qi=e("Update loading_data.md"),Ri=e("stormasm created "),Di={href:"https://github.com/nushell/nushell.github.io/pull/411",target:"_blank",rel:"noopener noreferrer"},$i=e("update section on aliases for adding pipes and persisting"),Bi=e("raboof created "),Oi={href:"https://github.com/nushell/nushell.github.io/pull/410",target:"_blank",rel:"noopener noreferrer"},Wi=e("fix typo required->require"),Pi=e("rgwood created "),Vi={href:"https://github.com/nushell/nushell.github.io/pull/406",target:"_blank",rel:"noopener noreferrer"},Hi=e("Document PATH configuration"),Yi=e("Sygmei created "),Zi={href:"https://github.com/nushell/nushell.github.io/pull/402",target:"_blank",rel:"noopener noreferrer"},Gi=e('Fix "Concatenate tables" section from "Table docs"'),Ki=e("Cyborus04 created "),Ji={href:"https://github.com/nushell/nushell.github.io/pull/399",target:"_blank",rel:"noopener noreferrer"},Xi=e("Fix command-less "),ea=t("code",null,"cd",-1),ta=e(" example"),oa=e("Szune created "),na={href:"https://github.com/nushell/nushell.github.io/pull/398",target:"_blank",rel:"noopener noreferrer"},sa=e("Typo fix in 2022-04-12-nushell_0_61.md"),la=e("fennewald created "),ra={href:"https://github.com/nushell/nushell.github.io/pull/397",target:"_blank",rel:"noopener noreferrer"},ha=e("Update coming_from_bash.md"),ia=t("h2",{id:"nu-scripts",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu scripts")],-1),aa=e("fdncred created "),_a={href:"https://github.com/nushell/nu_scripts/pull/214",target:"_blank",rel:"noopener noreferrer"},da=e("update get_os_icon for wsl"),ca=e(", and "),ua={href:"https://github.com/nushell/nu_scripts/pull/213",target:"_blank",rel:"noopener noreferrer"},pa=e("update type-o for windows"),fa=e(", and "),ga={href:"https://github.com/nushell/nu_scripts/pull/212",target:"_blank",rel:"noopener noreferrer"},ba=e("use $nu.os-info vs (sys).host for speed"),ma=e("raboof created "),ka={href:"https://github.com/nushell/nu_scripts/pull/210",target:"_blank",rel:"noopener noreferrer"},wa=e("custom completions: git: 'git fetch'"),ya=e("Yethal created "),va={href:"https://github.com/nushell/nu_scripts/pull/208",target:"_blank",rel:"noopener noreferrer"},xa=e("Update nuschiit.nu"),Na=e(", and "),Ca={href:"https://github.com/nushell/nu_scripts/pull/206",target:"_blank",rel:"noopener noreferrer"},Aa=e("Add webscraping and gitlab scanning scripts"),qa=e("kubouch created "),Ta={href:"https://github.com/nushell/nu_scripts/pull/205",target:"_blank",rel:"noopener noreferrer"},Sa=e("Change conda activation scripts to be a module"),Fa=e("hustcer created "),za={href:"https://github.com/nushell/nu_scripts/pull/204",target:"_blank",rel:"noopener noreferrer"},Ia=e("Fix completions for "),La=t("code",null,"git push",-1),ja=e(" and "),Ma=t("code",null,"git checkout",-1),Ea=e("ZetaNumbers created "),Ua={href:"https://github.com/nushell/nu_scripts/pull/203",target:"_blank",rel:"noopener noreferrer"},Qa=e('fix: make complitions referred to undefinded "nu-complete files"'),Ra=t("h2",{id:"reedline",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),Da=e("sholderbach created "),$a={href:"https://github.com/nushell/reedline/pull/422",target:"_blank",rel:"noopener noreferrer"},Ba=e("Change keybinding for external editor"),Oa=e(", and "),Wa={href:"https://github.com/nushell/reedline/pull/421",target:"_blank",rel:"noopener noreferrer"},Pa=e("Prepare the 0.5.0 release"),Va=e(", and "),Ha={href:"https://github.com/nushell/reedline/pull/419",target:"_blank",rel:"noopener noreferrer"},Ya=e("Fix README and lib.rs code examples"),Za=e(", and "),Ga={href:"https://github.com/nushell/reedline/pull/418",target:"_blank",rel:"noopener noreferrer"},Ka=e("Add doctests back to the CI"),Ja=e(", and "),Xa={href:"https://github.com/nushell/reedline/pull/417",target:"_blank",rel:"noopener noreferrer"},e_=e("Vi additions and fixes by @zim0369"),t_=e(", and "),o_={href:"https://github.com/nushell/reedline/pull/416",target:"_blank",rel:"noopener noreferrer"},n_=e("Attempt fix of "),s_=t("code",null,"ClearScrollback",-1),l_=e(", and "),r_={href:"https://github.com/nushell/reedline/pull/415",target:"_blank",rel:"noopener noreferrer"},h_=e("Fix the CI badge"),i_=e(", and "),a_={href:"https://github.com/nushell/reedline/pull/414",target:"_blank",rel:"noopener noreferrer"},__=e("Change the CI to use caching"),d_=e(", and "),c_={href:"https://github.com/nushell/reedline/pull/400",target:"_blank",rel:"noopener noreferrer"},u_=e("Add better options for screen clearing"),p_=e(", and "),f_={href:"https://github.com/nushell/reedline/pull/399",target:"_blank",rel:"noopener noreferrer"},g_=e("Add explicit "),b_=t("code",null,"EditCommand::InsertNewline",-1),m_=e("elferherrera created "),k_={href:"https://github.com/nushell/reedline/pull/413",target:"_blank",rel:"noopener noreferrer"},w_=e("Buffer editor keybinding"),y_=e(", and "),v_={href:"https://github.com/nushell/reedline/pull/411",target:"_blank",rel:"noopener noreferrer"},x_=e("line buffer editor"),N_=e("Tropid created "),C_={href:"https://github.com/nushell/reedline/pull/412",target:"_blank",rel:"noopener noreferrer"},A_=e("Only partial complete suggestions when input is a prefix"),q_=e("gipsyh created "),T_={href:"https://github.com/nushell/reedline/pull/410",target:"_blank",rel:"noopener noreferrer"},S_=e("Append whitespace after selecting menu"),F_=e("zim0369 created "),z_={href:"https://github.com/nushell/reedline/pull/405",target:"_blank",rel:"noopener noreferrer"},I_=e("Add vim's "),L_=t("code",null,"C",-1),j_=e(" binding"),M_=e(", and "),E_={href:"https://github.com/nushell/reedline/pull/403",target:"_blank",rel:"noopener noreferrer"},U_=e("Implements vim's prepend to start binding");function Q_(R_,D_){const o=i("ExternalLinkIcon");return r(),h("div",null,[_,d,c,u,t("p",null,[p,t("a",f,[g,n(o)]),b,t("a",m,[k,n(o)]),w,y,v]),x,t("p",null,[N,t("a",C,[A,n(o)]),q]),T,S,F,z,t("ul",null,[t("li",null,[t("a",I,[L,n(o)]),j])]),M,t("ul",null,[E,t("li",null,[t("p",null,[U,t("a",Q,[R,n(o)]),D])]),$]),B,t("ul",null,[t("li",null,[O,t("a",W,[P,n(o)]),V,t("a",H,[Y,n(o)]),Z,t("a",G,[K,n(o)]),J,t("a",X,[ee,n(o)])]),t("li",null,[te,t("a",oe,[ne,n(o)]),se,t("a",le,[re,n(o)]),he,t("a",ie,[ae,n(o)]),_e,t("a",de,[ce,n(o)]),ue,t("a",pe,[fe,n(o)]),ge,t("a",be,[me,n(o)])]),t("li",null,[ke,t("a",we,[ye,n(o)])]),t("li",null,[ve,t("a",xe,[Ne,n(o)]),Ce,t("a",Ae,[qe,n(o)]),Te,t("a",Se,[Fe,n(o)]),ze,t("a",Ie,[Le,n(o)]),je,t("a",Me,[Ee,n(o)]),Ue,t("a",Qe,[Re,n(o)]),De,t("a",$e,[Be,n(o)]),Oe,t("a",We,[Pe,n(o)]),Ve,t("a",He,[Ye,n(o)]),Ze,t("a",Ge,[Ke,n(o)]),Je,t("a",Xe,[et,n(o)]),tt,t("a",ot,[nt,n(o)]),st,t("a",lt,[rt,n(o)]),ht,t("a",it,[at,n(o)]),_t,t("a",dt,[ct,n(o)]),ut,t("a",pt,[ft,n(o)])]),t("li",null,[gt,t("a",bt,[mt,n(o)]),kt,t("a",wt,[yt,n(o)]),vt,t("a",xt,[Nt,n(o)]),Ct,t("a",At,[qt,n(o)]),Tt,t("a",St,[Ft,n(o)]),zt,t("a",It,[Lt,n(o)])]),t("li",null,[jt,t("a",Mt,[Et,n(o)]),Ut,t("a",Qt,[Rt,n(o)]),Dt,t("a",$t,[Bt,n(o)]),Ot,t("a",Wt,[Pt,n(o)]),Vt,t("a",Ht,[Yt,n(o)])]),t("li",null,[Zt,t("a",Gt,[Kt,n(o)]),Jt,t("a",Xt,[eo,n(o)]),to,t("a",oo,[no,n(o)]),so,t("a",lo,[ro,ho,io,n(o)])]),t("li",null,[ao,t("a",_o,[co,n(o)]),uo,t("a",po,[fo,n(o)]),go,t("a",bo,[mo,n(o)]),ko,t("a",wo,[yo,vo,n(o)]),xo,t("a",No,[Co,n(o)]),Ao,t("a",qo,[To,n(o)]),So,t("a",Fo,[zo,n(o)]),Io,t("a",Lo,[jo,n(o)]),Mo,t("a",Eo,[Uo,n(o)]),Qo,t("a",Ro,[Do,n(o)]),$o,t("a",Bo,[Oo,n(o)]),Wo,t("a",Po,[Vo,Ho,n(o)]),Yo,t("a",Zo,[Go,n(o)]),Ko,t("a",Jo,[Xo,n(o)]),en,t("a",tn,[on,n(o)]),nn,t("a",sn,[ln,n(o)]),rn,t("a",hn,[an,_n,n(o)]),dn,t("a",cn,[un,pn,fn,n(o)])]),t("li",null,[gn,t("a",bn,[mn,n(o)])]),t("li",null,[kn,t("a",wn,[yn,n(o)]),vn,t("a",xn,[Nn,n(o)]),Cn,t("a",An,[qn,n(o)]),Tn,t("a",Sn,[Fn,n(o)]),zn,t("a",In,[Ln,jn,n(o)]),Mn,t("a",En,[Un,n(o)]),Qn,t("a",Rn,[Dn,n(o)]),$n,t("a",Bn,[On,n(o)]),Wn,t("a",Pn,[Vn,n(o)]),Hn,t("a",Yn,[Zn,n(o)]),Gn,t("a",Kn,[Jn,n(o)]),Xn,t("a",es,[ts,n(o)]),os,t("a",ns,[ss,n(o)])]),t("li",null,[ls,t("a",rs,[hs,n(o)])]),t("li",null,[is,t("a",as,[_s,n(o)]),ds,t("a",cs,[us,n(o)]),ps,t("a",fs,[gs,n(o)]),bs,t("a",ms,[ks,n(o)]),ws,t("a",ys,[vs,n(o)]),xs,t("a",Ns,[Cs,n(o)]),As,t("a",qs,[Ts,n(o)]),Ss,t("a",Fs,[zs,n(o)]),Is,t("a",Ls,[js,n(o)])]),t("li",null,[Ms,t("a",Es,[Us,n(o)]),Qs,t("a",Rs,[Ds,n(o)])]),t("li",null,[$s,t("a",Bs,[Os,Ws,n(o)])]),t("li",null,[Ps,t("a",Vs,[Hs,n(o)])]),t("li",null,[Ys,t("a",Zs,[Gs,n(o)])]),t("li",null,[Ks,t("a",Js,[Xs,n(o)]),el,t("a",tl,[ol,n(o)]),nl,t("a",sl,[ll,n(o)])]),t("li",null,[rl,t("a",hl,[il,al,_l,dl,cl,n(o)])]),t("li",null,[ul,t("a",pl,[fl,n(o)])]),t("li",null,[gl,t("a",bl,[ml,n(o)]),kl,t("a",wl,[yl,n(o)])]),t("li",null,[vl,t("a",xl,[Nl,Cl,n(o)])]),t("li",null,[Al,t("a",ql,[Tl,n(o)])]),t("li",null,[Sl,t("a",Fl,[zl,n(o)])]),t("li",null,[Il,t("a",Ll,[jl,Ml,El,n(o)])]),t("li",null,[Ul,t("a",Ql,[Rl,n(o)]),Dl,t("a",$l,[Bl,n(o)])]),t("li",null,[Ol,t("a",Wl,[Pl,n(o)]),Vl,t("a",Hl,[Yl,n(o)]),Zl,t("a",Gl,[Kl,n(o)])]),t("li",null,[Jl,t("a",Xl,[er,tr,or,nr,n(o)])]),t("li",null,[sr,t("a",lr,[rr,n(o)])]),t("li",null,[hr,t("a",ir,[ar,_r,n(o)]),dr,t("a",cr,[ur,n(o)])]),t("li",null,[pr,t("a",fr,[gr,n(o)]),br,t("a",mr,[kr,n(o)]),wr,t("a",yr,[vr,n(o)]),xr,t("a",Nr,[Cr,n(o)])]),t("li",null,[Ar,t("a",qr,[Tr,n(o)]),Sr,t("a",Fr,[zr,n(o)]),Ir,t("a",Lr,[jr,n(o)]),Mr,t("a",Er,[Ur,n(o)])]),t("li",null,[Qr,t("a",Rr,[Dr,n(o)]),$r,t("a",Br,[Or,n(o)])]),t("li",null,[Wr,t("a",Pr,[Vr,n(o)])]),t("li",null,[Hr,t("a",Yr,[Zr,n(o)])]),t("li",null,[Gr,t("a",Kr,[Jr,n(o)])]),t("li",null,[Xr,t("a",eh,[th,n(o)])]),t("li",null,[oh,t("a",nh,[sh,n(o)])]),t("li",null,[lh,t("a",rh,[hh,ih,ah,_h,dh,n(o)]),ch,t("a",uh,[ph,n(o)])]),t("li",null,[fh,t("a",gh,[bh,mh,kh,n(o)]),wh,t("a",yh,[vh,xh,n(o)])]),t("li",null,[Nh,t("a",Ch,[Ah,n(o)])]),t("li",null,[qh,t("a",Th,[Sh,n(o)])])]),Fh,t("ul",null,[t("li",null,[zh,t("a",Ih,[Lh,n(o)]),jh,t("a",Mh,[Eh,n(o)]),Uh,t("a",Qh,[Rh,n(o)]),Dh,t("a",$h,[Bh,n(o)]),Oh,t("a",Wh,[Ph,n(o)]),Vh,t("a",Hh,[Yh,n(o)]),Zh,t("a",Gh,[Kh,n(o)]),Jh,t("a",Xh,[ei,n(o)]),ti,t("a",oi,[ni,n(o)]),si,t("a",li,[ri,n(o)]),hi,t("a",ii,[ai,n(o)]),_i,t("a",di,[ci,ui,pi,n(o)]),fi,t("a",gi,[bi,n(o)]),mi,t("a",ki,[wi,n(o)]),yi,t("a",vi,[xi,n(o)]),Ni,t("a",Ci,[Ai,n(o)])]),t("li",null,[qi,t("a",Ti,[Si,n(o)])]),t("li",null,[Fi,t("a",zi,[Ii,n(o)])]),t("li",null,[Li,t("a",ji,[Mi,n(o)])]),t("li",null,[Ei,t("a",Ui,[Qi,n(o)])]),t("li",null,[Ri,t("a",Di,[$i,n(o)])]),t("li",null,[Bi,t("a",Oi,[Wi,n(o)])]),t("li",null,[Pi,t("a",Vi,[Hi,n(o)])]),t("li",null,[Yi,t("a",Zi,[Gi,n(o)])]),t("li",null,[Ki,t("a",Ji,[Xi,ea,ta,n(o)])]),t("li",null,[oa,t("a",na,[sa,n(o)])]),t("li",null,[la,t("a",ra,[ha,n(o)])])]),ia,t("ul",null,[t("li",null,[aa,t("a",_a,[da,n(o)]),ca,t("a",ua,[pa,n(o)]),fa,t("a",ga,[ba,n(o)])]),t("li",null,[ma,t("a",ka,[wa,n(o)])]),t("li",null,[ya,t("a",va,[xa,n(o)]),Na,t("a",Ca,[Aa,n(o)])]),t("li",null,[qa,t("a",Ta,[Sa,n(o)])]),t("li",null,[Fa,t("a",za,[Ia,La,ja,Ma,n(o)])]),t("li",null,[Ea,t("a",Ua,[Qa,n(o)])])]),Ra,t("ul",null,[t("li",null,[Da,t("a",$a,[Ba,n(o)]),Oa,t("a",Wa,[Pa,n(o)]),Va,t("a",Ha,[Ya,n(o)]),Za,t("a",Ga,[Ka,n(o)]),Ja,t("a",Xa,[e_,n(o)]),t_,t("a",o_,[n_,s_,n(o)]),l_,t("a",r_,[h_,n(o)]),i_,t("a",a_,[__,n(o)]),d_,t("a",c_,[u_,n(o)]),p_,t("a",f_,[g_,b_,n(o)])]),t("li",null,[m_,t("a",k_,[w_,n(o)]),y_,t("a",v_,[x_,n(o)])]),t("li",null,[N_,t("a",C_,[A_,n(o)])]),t("li",null,[q_,t("a",T_,[S_,n(o)])]),t("li",null,[F_,t("a",z_,[I_,L_,j_,n(o)]),M_,t("a",E_,[U_,n(o)])])])])}var B_=l(a,[["render",Q_],["__file","2022-05-03-nushell_0_62.html.vue"]]);export{B_ as default};
