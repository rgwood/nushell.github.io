import{_ as r,r as l,o as a,c as i,f as d,a as t,b as n,d as e,e as s}from"./app.d8025251.js";const h={},c=t("h1",{id:"nushell-0-68",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell-0-68","aria-hidden":"true"},"#"),e(" Nushell 0.68")],-1),_=t("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.",-1),u=t("p",null,"Today, we're releasing version 0.68 of Nu. This is release a rework of modules, a new source-env command, overlay changes, and more.",-1),p=t("h1",{id:"where-to-get-it",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),m=e("Nu 0.68 is available as "),g={href:"https://github.com/nushell/nushell/releases/tag/0.68.0",target:"_blank",rel:"noopener noreferrer"},f=e("pre-built binaries"),b=e(" or from "),k={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},v=e("crates.io"),y=e(". If you have Rust installed you can install it using "),w=t("code",null,"cargo install nu",-1),x=e("."),A=s('<p>If you want all the built-in goodies, you can install <code>cargo install nu --features=extra</code>.</p><p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="themes-of-this-release" tabindex="-1"><a class="header-anchor" href="#themes-of-this-release" aria-hidden="true">#</a> Themes of this release</h1><h2 id="major-changes-rework-of-modules-and-environment" tabindex="-1"><a class="header-anchor" href="#major-changes-rework-of-modules-and-environment" aria-hidden="true">#</a> (Major changes!) Rework of modules and environment</h2><p><em>Some of the changes here have far-reaching consequences and it might take a while to get the book up to speed.</em></p>',5),T=e("This release includes a bundle of changes to environment handling and modules. For now, we kept also the old functionality, but in the 0.69, it will be removed. It is therefore recommended to port your scripts and modules to the new style to avoid breakages in the next release. You can read a more complete write-up on the motivation and overall design in "),N={href:"https://hackmd.io/@nucore/r1zilyw6q",target:"_blank",rel:"noopener noreferrer"},j=e("this document"),S=e("."),I={id:"source-becomes-source-env-jt-kubouch",tabindex:"-1"},R=t("a",{class:"header-anchor",href:"#source-becomes-source-env-jt-kubouch","aria-hidden":"true"},"#",-1),F=e(),q=t("code",null,"source",-1),C=e(" becomes "),W=t("code",null,"source-env",-1),$=e(" ("),M={href:"https://github.com/nushell/nushell/pull/6277",target:"_blank",rel:"noopener noreferrer"},O=e("JT, kubouch"),B=e(")"),P=t("p",null,[t("em",null,[t("strong",null,[e("Note: Since the release we found out that "),t("code",null,"source-env"),e(" with a dynamic path is not viable and had to make it require a constant string or path, just like "),t("code",null,"source"),e(". The command still works as described below but as of 0.68.1, "),t("code",null,"source-env"),e(" requires a static path as an argument. This is not where our design was supposed to land and we'll be searching for alternatives. We might also postpone the deprecation of the existing module commands beyond 0.69. Thanks for understanding.")])])],-1),U=e("One of the most common pitfalls of Nushell was trying to "),z=t("code",null,"source",-1),E=e(" a dynamic path, such as "),D=t("code",null,"source ($env.PWD | path join foo.nu)",-1),Y=e('. Since Nushell is a "compiled" language where commands and aliases are analyzed while parsing ("compiling") the code, sourcing dynamic paths is not possible for the same reason you cannot dynamically set '),H=t("code",null,"#include",-1),L=e(" file names in C or "),V=t("code",null,"use",-1),G=e(" modules in Rust. You can read a bit more about this in "),J={href:"https://www.nushell.sh/book/thinking_in_nu.html#think-of-nushell-as-a-compiled-language",target:"_blank",rel:"noopener noreferrer"},X=e("our Thinking in Nu book chapter"),K=e("."),Q=t("p",null,[e("To address this pitfall, we decided to change "),t("code",null,"source"),e(" to "),t("code",null,"source-env"),e(" which can be used to bring in the environment, but not custom commands, aliases and variables anymore. "),t("s",null,[e("A benefit of doing so is that it is now "),t("strong",null,"possible to pass dynamic paths"),e(": "),t("code",null,"source-env ($env.PWD | path join foo.nu)"),e(" would bring in the environment from the "),t("code",null,"foo.nu"),e(" file.")])],-1),Z=t("em",null,[e("How do you bring in commands and aliases without "),t("code",null,"source"),e("?")],-1),ee=e(" You need to use a module and the "),te=t("code",null,"use",-1),oe=e(" keyword. See our book chapter "),ne={href:"https://www.nushell.sh/book/modules.html",target:"_blank",rel:"noopener noreferrer"},se=e("about modules"),re=e(", it's quite simple. Alternatively, you can use "),le={href:"https://www.nushell.sh/book/overlays.html",target:"_blank",rel:"noopener noreferrer"},ae=e("overlays"),ie=e("."),de=t("p",null,[t("em",null,[e("How do you bring in variables without "),t("code",null,"source"),e("?")]),e(" This is not possible anymore. A workaround is to define a command in your module that will return the value you want.")],-1),he=t("p",null,[t("code",null,"source"),e(" still continues to work in this release but will be removed in 0.69. In 0.69, we will also change all config files to be modules, not plain scripts.")],-1),ce={id:"module-envrionment-changes-kubouch-kubouch",tabindex:"-1"},_e=t("a",{class:"header-anchor",href:"#module-envrionment-changes-kubouch-kubouch","aria-hidden":"true"},"#",-1),ue=e(" Module envrionment changes ("),pe={href:"https://github.com/nushell/nushell/pull/6355",target:"_blank",rel:"noopener noreferrer"},me=e("kubouch"),ge=e(", "),fe={href:"https://github.com/nushell/nushell/pull/6382",target:"_blank",rel:"noopener noreferrer"},be=e("kubouch"),ke=e(")"),ve=t("p",null,"The way to define environment variables from modules used to be",-1),ye=t("div",{class:"language-text ext-text"},[t("pre",{class:"language-text"},[t("code",null,`> module spam {
    export env FOO { 'bar' }
}

> use spam
`)])],-1),we=e("This example shows one problem: it is easy to end up with namespaced environment variables, which in this case would be "),xe=t("code",null,"$env.'spam FOO'",-1),Ae=e(". Another problem with the current design is that "),Te=t("code",null,"use",-1),Ne=e(" is a parser keyword (like the removed "),je=t("code",null,"source",-1),Se=e(') but contains both parser ("compiled") and runtime (evaluated) functionality. Since 0.67, it is possible to '),Ie={href:"https://github.com/nushell/nushell/pull/6162",target:"_blank",rel:"noopener noreferrer"},Re=e("use modules within other modules"),Fe=e(" but because environment is 100% handled in runtime, and "),qe=t("code",null,"use",-1),Ce=e(" never evaluates the module itself, it was impossible to bring in environment variables from other modules inside a module."),We=s(`<p>Long story short, <code>use</code> (and <code>hide</code>) now handle <strong>only custom commands and aliases</strong>, not environment variables anymore. If you want to bring both environment and commands/aliases, you need to use the <code>source-env</code> and <code>use</code> commands separately (or use overlays).</p><p>Also, we simplified defining the environment in modules. Instead of defining environment variables with <code>export env</code> individually, there is a single <code>export-env { }</code> block for the whole module (see the example in the next section).</p><p>If you call <code>source-env</code> on that module, the <code>export-env</code> command will get evaluated and its environment kept in the current scope.</p><div class="language-text ext-text"><pre class="language-text"><code># spam.nu

export-env {
    let-env FOO = &#39;foo&#39;
    let-env BAR = &#39;bar&#39;
}
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>&gt; source-env spam.nu

&gt; $env.FOO
foo

&gt; $env.BAR
bar
</code></pre></div><p>This release makes <code>export env</code> deprecated and it will be removed in 0.69.</p>`,6),$e={id:"syntax-unification-kubouch",tabindex:"-1"},Me=t("a",{class:"header-anchor",href:"#syntax-unification-kubouch","aria-hidden":"true"},"#",-1),Oe=e(" Syntax unification ("),Be={href:"https://github.com/nushell/nushell/pull/6357",target:"_blank",rel:"noopener noreferrer"},Pe=e("kubouch"),Ue=e(")"),ze=s("<p>Previously, modules had some reserved syntax that was not valid in scripts: the <code>export</code> keywords. In this release, we allowed <code>export</code> keywords to be used in scripts (they do nothing: <code>export def</code> acts as <code>def</code> etc.) and thus <strong>script syntax is a superset of module syntax</strong>.</p><p>Modules can now be evaluated. This is the reason the above example with <code>source-env</code> works: Thanks to the unified syntax, <code>source-env</code> will evaluate the module which evaluates the <code>export-env</code> command inside the module.</p><p>Another nice thing about the unified syntax is that commands like <code>nu-highlight</code> now do not break or do not need to rely on heuristics if they are asked to parse a module code. Any module code is a valid script code.</p>",3),Ee={id:"overlay-changes-kubouch-windsoilder",tabindex:"-1"},De=t("a",{class:"header-anchor",href:"#overlay-changes-kubouch-windsoilder","aria-hidden":"true"},"#",-1),Ye=e(" Overlay changes ("),He={href:"https://github.com/nushell/nushell/pull/6425",target:"_blank",rel:"noopener noreferrer"},Le=e("kubouch"),Ve=e(", "),Ge={href:"https://github.com/nushell/nushell/pull/6375",target:"_blank",rel:"noopener noreferrer"},Je=e("WindSoilder"),Xe=e(")"),Ke=s(`<p><code>overlay add</code> and <code>overlay remove</code> are now renamed to <code>overlay use</code> and <code>overlay hide</code> (see the breaking changes later).</p><p>The functionality of these commands remains largely the same with one change being that <code>overlay use</code> will now evaluate the <code>export-env { }</code> block. Consider this module:</p><div class="language-text ext-text"><pre class="language-text"><code># spam.nu

export-env {
    load-env {
        FOO: &#39;foo&#39;
        BAR: &#39;bar&#39;
    }
}

export def foo [] { &#39;foo&#39; }
export alias bar = &#39;bar&#39;
</code></pre></div><p>instead of:</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; source-env spam.nu

&gt; use spam.nu *
</code></pre></div><p>you can do just:</p><div class="language-text ext-text"><pre class="language-text"><code>&gt; overlay use spam.nu
</code></pre></div><p>You can think of <code>overlay use</code> as calling <code>source-env</code> and <code>use</code> in one command and putting the result into a new overlay.</p><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h3><p>Here is a table that summarizes the changes:</p><table><thead><tr><th>command</th><th>previous release (0.67)</th><th>this release (0.68)</th><th>next release (0.69)</th></tr></thead><tbody><tr><td><code>source</code></td><td>imports everything into the current scope</td><td>same (deprecated)</td><td>removed</td></tr><tr><td><code>source-env</code></td><td>N/A</td><td>imports environment variables</td><td>same</td></tr><tr><td><code>use</code></td><td>imports environment variables, commands and aliases</td><td>same</td><td>imports only commands and aliases</td></tr><tr><td><code>hide</code></td><td>hides enviornment variables, commands and aliases</td><td>same</td><td>hides only commands and aliases</td></tr><tr><td><code>hide-env</code></td><td>hides environment variables</td><td>same</td><td>same</td></tr><tr><td><code>export env</code></td><td>defines a single environment variable in a module</td><td>same</td><td>removed</td></tr><tr><td><code>export-env</code></td><td>N/A</td><td>(in a module) defines the envrionment for the whole module</td><td>same</td></tr><tr><td><code>export-env</code></td><td>N/A</td><td>(in a script) when evaluated, preserves the environment from the block</td><td>same</td></tr><tr><td><code>export ...</code></td><td>only allowed in a module</td><td>allowed in a script as well</td><td>same</td></tr><tr><td><code>config.nu</code></td><td>plain script</td><td>plain script</td><td>module</td></tr><tr><td><code>env.nu</code></td><td>plain script</td><td>plain script</td><td>module</td></tr><tr><td><code>login.nu</code></td><td>plain script</td><td>plain script</td><td>module</td></tr></tbody></table>`,11),Qe={id:"allow-parentheses-around-command-signatures-jt",tabindex:"-1"},Ze=t("a",{class:"header-anchor",href:"#allow-parentheses-around-command-signatures-jt","aria-hidden":"true"},"#",-1),et=e(" Allow parentheses around command signatures ("),tt={href:"https://github.com/nushell/nushell/pull/6444",target:"_blank",rel:"noopener noreferrer"},ot=e("JT"),nt=e(")"),st=t("p",null,[e("To bring more familiarity with other languages, we added the option to define command signatures with parentheses "),t("code",null,"()"),e(" instad of only braces "),t("code",null,"[]"),e(":")],-1),rt=t("div",{class:"language-text ext-text"},[t("pre",{class:"language-text"},[t("code",null,`def foo (x: int) { $x + 100 }
`)])],-1),lt=t("p",null,[e("The square braces "),t("code",null,"[]"),e(" continue to work as well. This change is intended to test it with a larger audience to decide which one we prefer the most.")],-1),at={id:"we-added-a-new-command-str-distance-which-implements-the-levenshtein-alorithm-fdncred",tabindex:"-1"},it=t("a",{class:"header-anchor",href:"#we-added-a-new-command-str-distance-which-implements-the-levenshtein-alorithm-fdncred","aria-hidden":"true"},"#",-1),dt=e(" We added a new command "),ht=t("code",null,"str distance",-1),ct=e(" which implements the Levenshtein alorithm "),_t={href:"https://github.com/nushell/nushell/pull/6383",target:"_blank",rel:"noopener noreferrer"},ut=e("fdncred"),pt=s(`<p>This example shows that the <code>edit distance</code> is one edit step difference using the Levenshtein algorithm.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;nushell&#39;</span> <span class="token operator">|</span> str distance <span class="token string">&#39;nutshell&#39;</span>
\u256D\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u256E
\u2502 distance \u2502 <span class="token number">1</span> \u2502
\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u256F
</code></pre></div><p>We&#39;d eventually like to add more similarity comparision functionality to nushell.</p>`,3),mt={id:"we-added-string-duration-conversion-to-named-durations-fdncred",tabindex:"-1"},gt=t("a",{class:"header-anchor",href:"#we-added-string-duration-conversion-to-named-durations-fdncred","aria-hidden":"true"},"#",-1),ft=e(" We added string duration conversion to named durations "),bt={href:"https://github.com/nushell/nushell/pull/6406",target:"_blank",rel:"noopener noreferrer"},kt=e("fdncred"),vt=s(`<p>The new parameter on <code>into duration</code> <code>--convert</code> allows you to convert from string durations into named durations.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;7min&#39;</span> <span class="token operator">|</span> into duration <span class="token parameter variable">--convert</span> sec
<span class="token number">420</span> sec
</code></pre></div>`,2),yt={id:"external-completions-experimental-herlon214-rsteube",tabindex:"-1"},wt=t("a",{class:"header-anchor",href:"#external-completions-experimental-herlon214-rsteube","aria-hidden":"true"},"#",-1),xt=e(" External Completions (experimental) ("),At={href:"https://github.com/nushell/nushell/pull/6295",target:"_blank",rel:"noopener noreferrer"},Tt=e("herlon214, rsteube"),Nt=e(")"),jt=e("In this release, we're trying out integrating Nushell with external completers, instead of relying solely on Nushell ones. It is possible to set the "),St=t("code",null,"external_completer",-1),It=e(" field in a config to be a block which will be evaluated if no Nushell completions were found. You can configure the block to run an external completer, such as "),Rt={href:"https://github.com/rsteube/carapace",target:"_blank",rel:"noopener noreferrer"},Ft=e("carapace"),qt=e("."),Ct=t("p",null,"This example should enable carapace external completions:",-1),Wt=t("div",{class:"language-text ext-text"},[t("pre",{class:"language-text"},[t("code",null,`# config.nu
let carapace_completer = {|spans|
    carapace $spans.0 nushell $spans | from json
}

# The default config record. This is where much of your global configuration is setup.
let-env config = {
    # ... your config
    external_completer: $carapace_completer
}
`)])],-1),$t=e("Note that this functionality is not perfectly polished yet and in some cases the external completer is not triggered correctly (see "),Mt={href:"https://github.com/nushell/nushell/issues/6378",target:"_blank",rel:"noopener noreferrer"},Ot=e("this issue"),Bt=e(")."),Pt=t("p",null,"It is also possible to extend the parameters passed to the completer block that are required for other tools than carapace, such as cursor position etc. In theory, this feature could allow you to utilize any existing completions library from any shell, such as bash, as long as you can somehow get a list of completions from them.",-1),Ut=t("h1",{id:"breaking-changes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#breaking-changes","aria-hidden":"true"},"#"),e(" Breaking changes")],-1),zt={id:"renaming-of-all-to-all-any-to-any-and-empty-to-is-empty-adamijak",tabindex:"-1"},Et=s('<a class="header-anchor" href="#renaming-of-all-to-all-any-to-any-and-empty-to-is-empty-adamijak" aria-hidden="true">#</a> Renaming of <code>all?</code> to <code>all</code>, <code>any?</code> to <code>any</code>, and <code>empty?</code> to <code>is-empty</code> (',14),Dt={href:"https://github.com/nushell/nushell/pull/6464",target:"_blank",rel:"noopener noreferrer"},Yt=e("adamijak"),Ht=e(")"),Lt=s("<p>The <code>?</code> suffix on the three commands <code>all?</code>, <code>any?</code>, <code>empty?</code> did not indicate a specific meaning across other commands. Other commands returning a boolean value, like <code>str contains</code> for example, don&#39;t carry the suffix. To remove a potential source of confusion and to free up the <code>?</code> for potential use in a more meaningful semantic context, we decided to remove the suffix and rename <code>empty?</code> to <code>is-empty</code> to clarify its role.</p><p>Please update your scripts accordingly:</p><table><thead><tr><th>old name</th><th>new name</th></tr></thead><tbody><tr><td><code>all?</code></td><td><code>all</code></td></tr><tr><td><code>any?</code></td><td><code>any</code></td></tr><tr><td><code>empty?</code></td><td><code>is-empty</code></td></tr></tbody></table>",3),Vt={id:"renaming-overlay-commands-windsoilder",tabindex:"-1"},Gt=t("a",{class:"header-anchor",href:"#renaming-overlay-commands-windsoilder","aria-hidden":"true"},"#",-1),Jt=e(" Renaming "),Xt=t("code",null,"overlay",-1),Kt=e(" commands ("),Qt={href:"https://github.com/nushell/nushell/pull/6375",target:"_blank",rel:"noopener noreferrer"},Zt=e("WindSoilder"),eo=e(")"),to=s("<table><thead><tr><th>old name</th><th>new name</th></tr></thead><tbody><tr><td><code>overlay add</code></td><td><code>overlay use</code></td></tr><tr><td><code>overlay remove</code></td><td><code>overlay hide</code></td></tr></tbody></table><p>The main reason is that the <code>overlay remove</code> does not <em>really</em> remove the overlay. It deactivates it and it can be resumed again from where you left off. Therefore, we felt like <code>hide</code> is a better word to match this functionality and aligns with our existing <code>use</code> and <code>hide</code> keywords.</p>",2),oo={id:"path-split-behaviour-for-windows-paths-merelymyself",tabindex:"-1"},no=t("a",{class:"header-anchor",href:"#path-split-behaviour-for-windows-paths-merelymyself","aria-hidden":"true"},"#",-1),so=e(),ro=t("code",null,"path split",-1),lo=e(" behaviour for Windows paths ("),ao={href:"https://github.com/nushell/nushell/pull/6485",target:"_blank",rel:"noopener noreferrer"},io=e("merelymyself"),ho=e(")"),co=s('<p><code>path split</code> no longer returns drive letters and the root directory as seperate elements for absolute Windows paths.</p><p>Previously, <code> `C:\\temp` | path split</code> returned <code>C:</code>, <code>\\</code>, and <code>temp</code>. Now it returns <code>C:\\</code> and <code>temp</code>.</p><h1 id="next-steps" tabindex="-1"><a class="header-anchor" href="#next-steps" aria-hidden="true">#</a> Next Steps</h1>',3),_o=e("We've been progressing with our design towards 0.80 as outlined in "),uo={href:"https://kubouch.notion.site/4db276462ba24704919edb4cc4b86be7?v=10506505557f4f7b9a65155128c04250",target:"_blank",rel:"noopener noreferrer"},po=e("this Notion page"),mo=e("."),go=t("p",null,"Some time was spent trying out possible new syntax directions but we were not confident to release them yet. In the next release we'll see a removal of features deprecated in this release and we'll continue to push ahead for the 0.80.",-1),fo=t("h1",{id:"full-changelog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#full-changelog","aria-hidden":"true"},"#"),e(" Full changelog")],-1),bo=t("h2",{id:"nushell",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nushell","aria-hidden":"true"},"#"),e(" Nushell")],-1),ko=e("jt created "),vo={href:"https://github.com/nushell/nushell/pull/6501",target:"_blank",rel:"noopener noreferrer"},yo=e("bump to 0.68"),wo=e(", and "),xo={href:"https://github.com/nushell/nushell/pull/6446",target:"_blank",rel:"noopener noreferrer"},Ao=e('Reverted "Make '),To=t("code",null,"$",-1),No=e(' on variable names optional" (just in case)'),jo=e(", and "),So={href:"https://github.com/nushell/nushell/pull/6444",target:"_blank",rel:"noopener noreferrer"},Io=e("Allow parens around signatures"),Ro=e(", and "),Fo={href:"https://github.com/nushell/nushell/pull/6434",target:"_blank",rel:"noopener noreferrer"},qo=e("Make "),Co=t("code",null,"$",-1),Wo=e(" on variable names optional"),$o=e(", and "),Mo={href:"https://github.com/nushell/nushell/pull/6277",target:"_blank",rel:"noopener noreferrer"},Oo=e("Move from "),Bo=t("code",null,"source",-1),Po=e(" to "),Uo=t("code",null,"source-env",-1),zo=e("sholderbach created "),Eo={href:"https://github.com/nushell/nushell/pull/6497",target:"_blank",rel:"noopener noreferrer"},Do=e("Pin reedline to 0.11.0 release"),Yo=e(", and "),Ho={href:"https://github.com/nushell/nushell/pull/6480",target:"_blank",rel:"noopener noreferrer"},Lo=e("Terminate REPL if not connected to tty input"),Vo=e(", and "),Go={href:"https://github.com/nushell/nushell/pull/6398",target:"_blank",rel:"noopener noreferrer"},Jo=e("Fix search terms for "),Xo=t("code",null,"str distance",-1),Ko=e(", and "),Qo={href:"https://github.com/nushell/nushell/pull/6390",target:"_blank",rel:"noopener noreferrer"},Zo=e("[Experiment] Reenable CI build cache for tests"),en=e(", and "),tn={href:"https://github.com/nushell/nushell/pull/6380",target:"_blank",rel:"noopener noreferrer"},on=e("Test command names and search terms for redundancy"),nn=e("merelymyself created "),sn={href:"https://github.com/nushell/nushell/pull/6485",target:"_blank",rel:"noopener noreferrer"},rn=e("let path split keeps 'C:' together"),ln=e(", and "),an={href:"https://github.com/nushell/nushell/pull/6463",target:"_blank",rel:"noopener noreferrer"},dn=e("Allow for rejecting nested record cells"),hn=e(", and "),cn={href:"https://github.com/nushell/nushell/pull/6391",target:"_blank",rel:"noopener noreferrer"},_n=e("add tests, deal with pipes, newlines, tabs for "),un=t("code",null,"to nuon",-1),pn=e(", and "),mn={href:"https://github.com/nushell/nushell/pull/6379",target:"_blank",rel:"noopener noreferrer"},gn=e("preserve space by letting "),fn=t("code",null,"to nuon",-1),bn=e(" only add quotes when necessary"),kn=e(", and "),vn={href:"https://github.com/nushell/nushell/pull/6376",target:"_blank",rel:"noopener noreferrer"},yn=e("let "),wn=t("code",null,"to nuon",-1),xn=e(" convert column names with spaces"),An=e(", and "),Tn={href:"https://github.com/nushell/nushell/pull/6257",target:"_blank",rel:"noopener noreferrer"},Nn=e("default to file completion after first command, add "),jn=t("code",null,"command",-1),Sn=e(" option for completions"),In=e("unrelentingtech created "),Rn={href:"https://github.com/nushell/nushell/pull/6483",target:"_blank",rel:"noopener noreferrer"},Fn=e('Avoid update_last_command_context "No command run" error'),qn=e(", and "),Cn={href:"https://github.com/nushell/nushell/pull/6456",target:"_blank",rel:"noopener noreferrer"},Wn=e("Fix build on *BSD, illumos, etc."),$n=e("WindSoilder created "),Mn={href:"https://github.com/nushell/nushell/pull/6479",target:"_blank",rel:"noopener noreferrer"},On=e("Restrict plugin name starts with "),Bn=t("code",null,"nu_plugin_",-1),Pn=e(", and "),Un={href:"https://github.com/nushell/nushell/pull/6472",target:"_blank",rel:"noopener noreferrer"},zn=e("remove capnp relative file"),En=e(", and "),Dn={href:"https://github.com/nushell/nushell/pull/6442",target:"_blank",rel:"noopener noreferrer"},Yn=e("shows wrong item when some commands runs to failed."),Hn=e(", and "),Ln={href:"https://github.com/nushell/nushell/pull/6437",target:"_blank",rel:"noopener noreferrer"},Vn=e("shows wrong item when each command runs to failed."),Gn=e(", and "),Jn={href:"https://github.com/nushell/nushell/pull/6426",target:"_blank",rel:"noopener noreferrer"},Xn=e("keep raw for variable inputed argument"),Kn=e(", and "),Qn={href:"https://github.com/nushell/nushell/pull/6421",target:"_blank",rel:"noopener noreferrer"},Zn=e("remove capnp protocol for plugin..."),es=e(", and "),ts={href:"https://github.com/nushell/nushell/pull/6420",target:"_blank",rel:"noopener noreferrer"},os=e("Try to make argument with quotes for external command better"),ns=e(", and "),ss={href:"https://github.com/nushell/nushell/pull/6384",target:"_blank",rel:"noopener noreferrer"},rs=e("Plugin: Add benchmark for different encoding protocol"),ls=e(", and "),as={href:"https://github.com/nushell/nushell/pull/6375",target:"_blank",rel:"noopener noreferrer"},is=e("Rename overlay commands"),ds=e(", and "),hs={href:"https://github.com/nushell/nushell/pull/6273",target:"_blank",rel:"noopener noreferrer"},cs=e("Try again: in unix like system, set foreground process while running external command"),_s=e("kubouch created "),us={href:"https://github.com/nushell/nushell/pull/6477",target:"_blank",rel:"noopener noreferrer"},ps=e("Disable cyclical module imports"),ms=e(", and "),gs={href:"https://github.com/nushell/nushell/pull/6475",target:"_blank",rel:"noopener noreferrer"},fs=e("Fix overlays not preserving hidden env vars"),bs=e(", and "),ks={href:"https://github.com/nushell/nushell/pull/6474",target:"_blank",rel:"noopener noreferrer"},vs=e("Fix scoped "),ys=t("code",null,"overlay use",-1),ws=e(" not finding a module"),xs=e(", and "),As={href:"https://github.com/nushell/nushell/pull/6425",target:"_blank",rel:"noopener noreferrer"},Ts=e("Bring in module's environment when activating overlay"),Ns=e(", and "),js={href:"https://github.com/nushell/nushell/pull/6382",target:"_blank",rel:"noopener noreferrer"},Ss=e('Allow "export-env" parsing in modules'),Is=e(", and "),Rs={href:"https://github.com/nushell/nushell/pull/6357",target:"_blank",rel:"noopener noreferrer"},Fs=e("Allow parsing modules as scripts"),qs=e(", and "),Cs={href:"https://github.com/nushell/nushell/pull/6355",target:"_blank",rel:"noopener noreferrer"},Ws=e("Add "),$s=t("code",null,"export-env",-1),Ms=e(" command"),Os=e("adamijak created "),Bs={href:"https://github.com/nushell/nushell/pull/6464",target:"_blank",rel:"noopener noreferrer"},Ps=e("Rename "),Us=t("code",null,"all?",-1),zs=e(", "),Es=t("code",null,"any?",-1),Ds=e(" and "),Ys=t("code",null,"empty?",-1),Hs=e("dependabot[bot] created "),Ls={href:"https://github.com/nushell/nushell/pull/6462",target:"_blank",rel:"noopener noreferrer"},Vs=e("Bump lz4-sys from 1.9.3 to 1.9.4"),Gs=e(", and "),Js={href:"https://github.com/nushell/nushell/pull/6448",target:"_blank",rel:"noopener noreferrer"},Xs=e("Bump iana-time-zone from 0.1.44 to 0.1.47"),Ks=e("obaudys created "),Qs={href:"https://github.com/nushell/nushell/pull/6457",target:"_blank",rel:"noopener noreferrer"},Zs=e("Fix ps command CPU usage on Apple Silicon M1 macs. #4142"),er=e("fdncred created "),tr={href:"https://github.com/nushell/nushell/pull/6454",target:"_blank",rel:"noopener noreferrer"},or=e('Revert "Add support for optional list stream output formatting"'),nr=e(", and "),sr={href:"https://github.com/nushell/nushell/pull/6449",target:"_blank",rel:"noopener noreferrer"},rr=e("add more color highlighting to help"),lr=e(", and "),ar={href:"https://github.com/nushell/nushell/pull/6423",target:"_blank",rel:"noopener noreferrer"},ir=e("add the ast command to peek at the internals of nushell"),dr=e(", and "),hr={href:"https://github.com/nushell/nushell/pull/6406",target:"_blank",rel:"noopener noreferrer"},cr=e("convert string duration to named duration"),_r=e(", and "),ur={href:"https://github.com/nushell/nushell/pull/6395",target:"_blank",rel:"noopener noreferrer"},pr=e("add a plugin registration script"),mr=e(", and "),gr={href:"https://github.com/nushell/nushell/pull/6394",target:"_blank",rel:"noopener noreferrer"},fr=e("add another split words example"),br=e(", and "),kr={href:"https://github.com/nushell/nushell/pull/6383",target:"_blank",rel:"noopener noreferrer"},vr=e("add edit distance/levenshtein command"),yr=e(", and "),wr={href:"https://github.com/nushell/nushell/pull/6370",target:"_blank",rel:"noopener noreferrer"},xr=e("add MessagePack as a plugin protocol"),Ar=e(", and "),Tr={href:"https://github.com/nushell/nushell/pull/6369",target:"_blank",rel:"noopener noreferrer"},Nr=e("fix the way lists are rendered in markdown"),jr=e(", and "),Sr={href:"https://github.com/nushell/nushell/pull/6363",target:"_blank",rel:"noopener noreferrer"},Ir=e("add a split words command"),Rr=e(", and "),Fr={href:"https://github.com/nushell/nushell/pull/6333",target:"_blank",rel:"noopener noreferrer"},qr=e("create clickable links in ls output if configured"),Cr=e("rgwood created "),Wr={href:"https://github.com/nushell/nushell/pull/6453",target:"_blank",rel:"noopener noreferrer"},$r=e("Upgrade "),Mr=t("code",null,"which",-1),Or=e(" dependency to fix case on Windows"),Br=e(", and "),Pr={href:"https://github.com/nushell/nushell/pull/6439",target:"_blank",rel:"noopener noreferrer"},Ur=e("Disable clickable links in SSH sessions"),zr=e(", and "),Er={href:"https://github.com/nushell/nushell/pull/6404",target:"_blank",rel:"noopener noreferrer"},Dr=e("Always report errors in "),Yr=t("code",null,"cp",-1),Hr=e(", and "),Lr={href:"https://github.com/nushell/nushell/pull/6396",target:"_blank",rel:"noopener noreferrer"},Vr=e("Make "),Gr=t("code",null,"cp",-1),Jr=e(" errors more specific+accurate"),Xr=e(", and "),Kr={href:"https://github.com/nushell/nushell/pull/6371",target:"_blank",rel:"noopener noreferrer"},Qr=e("Add pause and cls to cmd.exe exceptions"),Zr=e("dscottboggs created "),el={href:"https://github.com/nushell/nushell/pull/6430",target:"_blank",rel:"noopener noreferrer"},tl=e("better error handling for nu_command::env::conig::utils::get_editor"),ol=e("nibon7 created "),nl={href:"https://github.com/nushell/nushell/pull/6418",target:"_blank",rel:"noopener noreferrer"},sl=e("Make run_external parameter required"),rl=e(", and "),ll={href:"https://github.com/nushell/nushell/pull/6411",target:"_blank",rel:"noopener noreferrer"},al=e('Fix the span of "invalid time zone"'),il=e(", and "),dl={href:"https://github.com/nushell/nushell/pull/6409",target:"_blank",rel:"noopener noreferrer"},hl=e("register-plugin.nu: refactor register plugin"),cl=e(", and "),_l={href:"https://github.com/nushell/nushell/pull/6400",target:"_blank",rel:"noopener noreferrer"},ul=e("register-plugin.nu: remove "),pl=t("code",null,".exe",-1),ml=e(" extension match to simplify code"),gl=e(", and "),fl={href:"https://github.com/nushell/nushell/pull/6385",target:"_blank",rel:"noopener noreferrer"},bl=e("Add test cases for $nu.config-path change"),kl=e(", and "),vl={href:"https://github.com/nushell/nushell/pull/6366",target:"_blank",rel:"noopener noreferrer"},yl=e("Get "),wl=t("code",null,"$nu.config-path",-1),xl=e(" and "),Al=t("code",null,"$nu.env-path",-1),Tl=e(" from "),Nl=t("code",null,"EngineState",-1),jl=e(", and "),Sl={href:"https://github.com/nushell/nushell/pull/6365",target:"_blank",rel:"noopener noreferrer"},Il=e("Use string interpolation to construct log file path"),Rl=e(", and "),Fl={href:"https://github.com/nushell/nushell/pull/6354",target:"_blank",rel:"noopener noreferrer"},ql=e("Return error when "),Cl=t("code",null,"kill",-1),Wl=e(" didn't terminate successfully "),$l=e("herlon214 created "),Ml={href:"https://github.com/nushell/nushell/pull/6412",target:"_blank",rel:"noopener noreferrer"},Ol=e("nu-command/filters: drop column check positive value"),Bl=e(", and "),Pl={href:"https://github.com/nushell/nushell/pull/6389",target:"_blank",rel:"noopener noreferrer"},Ul=e("nu-cli: merge completions tests into one file"),zl=e(", and "),El={href:"https://github.com/nushell/nushell/pull/6295",target:"_blank",rel:"noopener noreferrer"},Dl=e("feat: external completions for commands/flags"),Yl=e("hustcer created "),Hl={href:"https://github.com/nushell/nushell/pull/6361",target:"_blank",rel:"noopener noreferrer"},Ll=e("Update nu version for release workflow"),Vl=e(", and "),Gl={href:"https://github.com/nushell/nushell/pull/6350",target:"_blank",rel:"noopener noreferrer"},Jl=e("Bump dev version"),Xl=e("volucris1 created "),Kl={href:"https://github.com/nushell/nushell/pull/6332",target:"_blank",rel:"noopener noreferrer"},Ql=e("Fix #6330"),Zl=e("panicbit created "),ea={href:"https://github.com/nushell/nushell/pull/6325",target:"_blank",rel:"noopener noreferrer"},ta=e("Add support for optional list stream output formatting"),oa=e("dbuch created "),na={href:"https://github.com/nushell/nushell/pull/6322",target:"_blank",rel:"noopener noreferrer"},sa=e("Fix slice indexing"),ra=e("CohenAriel created "),la={href:"https://github.com/nushell/nushell/pull/6302",target:"_blank",rel:"noopener noreferrer"},aa=e("Add --execute option"),ia=t("h2",{id:"documentation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),da=e("rgwood created "),ha={href:"https://github.com/nushell/nushell.github.io/pull/592",target:"_blank",rel:"noopener noreferrer"},ca=e("Add Homebrew PATH documentation"),_a=e("sholderbach created "),ua={href:"https://github.com/nushell/nushell.github.io/pull/590",target:"_blank",rel:"noopener noreferrer"},pa=e("Update former question mark commands in docs"),ma=e("chrjen created "),ga={href:"https://github.com/nushell/nushell.github.io/pull/589",target:"_blank",rel:"noopener noreferrer"},fa=e("Update types_of_data.md with missing values"),ba=e("hustcer created "),ka={href:"https://github.com/nushell/nushell.github.io/pull/588",target:"_blank",rel:"noopener noreferrer"},va=e("Upgrade vuepress and all related plugins to improve build performance"),ya=e(", and "),wa={href:"https://github.com/nushell/nushell.github.io/pull/587",target:"_blank",rel:"noopener noreferrer"},xa=e("Upgrade all vuepress plugins and fix doc search navigation by pressing "),Aa=t("code",null,"enter",-1),Ta=e(" key"),Na=e(", and "),ja={href:"https://github.com/nushell/nushell.github.io/pull/586",target:"_blank",rel:"noopener noreferrer"},Sa=e("Upgrade all vuepress plugins and fix doc search navigation by pressing "),Ia=t("code",null,"enter",-1),Ra=e(" key"),Fa=e(", and "),qa={href:"https://github.com/nushell/nushell.github.io/pull/585",target:"_blank",rel:"noopener noreferrer"},Ca=e("Try to fix deploy of docs by downgrade some plugins"),Wa=e(", and "),$a={href:"https://github.com/nushell/nushell.github.io/pull/582",target:"_blank",rel:"noopener noreferrer"},Ma=e("lock vuepress and plugins version to fix ci"),Oa=e("fdncred created "),Ba={href:"https://github.com/nushell/nushell.github.io/pull/584",target:"_blank",rel:"noopener noreferrer"},Pa=e("update to ubuntu-latest"),Ua=e(", and "),za={href:"https://github.com/nushell/nushell.github.io/pull/583",target:"_blank",rel:"noopener noreferrer"},Ea=e("change from deprecated version of ubuntu"),Da=e("pedromfedricci created "),Ya={href:"https://github.com/nushell/nushell.github.io/pull/580",target:"_blank",rel:"noopener noreferrer"},Ha=e("Update accepted types for signatures"),La=e("Yethal created "),Va={href:"https://github.com/nushell/nushell.github.io/pull/579",target:"_blank",rel:"noopener noreferrer"},Ga=e("Add wrap-around merge"),Ja=e("merelymyself created "),Xa={href:"https://github.com/nushell/nushell.github.io/pull/577",target:"_blank",rel:"noopener noreferrer"},Ka=e("Remove ambiguity about command quotes"),Qa=e("CAD97 created "),Za={href:"https://github.com/nushell/nushell.github.io/pull/573",target:"_blank",rel:"noopener noreferrer"},ei=e("Note status of calling CMD builtins from Nushell"),ti=e(", and "),oi={href:"https://github.com/nushell/nushell.github.io/pull/572",target:"_blank",rel:"noopener noreferrer"},ni=e("Note Windows caveat in Escaping to the System"),si=e(", and "),ri={href:"https://github.com/nushell/nushell.github.io/pull/571",target:"_blank",rel:"noopener noreferrer"},li=e("Mention coming_from_cmd in coming_to_nu"),ai=e(", and "),ii={href:"https://github.com/nushell/nushell.github.io/pull/570",target:"_blank",rel:"noopener noreferrer"},di=e("Update coming_from_cmd.md for nu 0.77"),hi=e(", and "),ci={href:"https://github.com/nushell/nushell.github.io/pull/567",target:"_blank",rel:"noopener noreferrer"},_i=e("Create coming_from_cmd.md"),ui=e("1submarine created "),pi={href:"https://github.com/nushell/nushell.github.io/pull/569",target:"_blank",rel:"noopener noreferrer"},mi=e("correct escapes in coming_from_bash.md"),gi=e(", and "),fi={href:"https://github.com/nushell/nushell.github.io/pull/568",target:"_blank",rel:"noopener noreferrer"},bi=e("deduplicate `**' in operators.md"),ki=e("amtoine created "),vi={href:"https://github.com/nushell/nushell.github.io/pull/565",target:"_blank",rel:"noopener noreferrer"},yi=e("FIX: "),wi=t("code",null,"overlay remove",-1),xi=e(" flags"),Ai=t("h2",{id:"nu-scripts",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu Scripts")],-1),Ti=e("dandavison created "),Ni={href:"https://github.com/nushell/nu_scripts/pull/288",target:"_blank",rel:"noopener noreferrer"},ji=e("Async git prompt"),Si=e("sholderbach created "),Ii={href:"https://github.com/nushell/nu_scripts/pull/287",target:"_blank",rel:"noopener noreferrer"},Ri=e("Update old question mark commands "),Fi=t("code",null,"any?",-1),qi=e("/"),Ci=t("code",null,"all?",-1),Wi=e("/"),$i=t("code",null,"empty?",-1),Mi=e(" to "),Oi=t("code",null,"any",-1),Bi=e("/"),Pi=t("code",null,"all",-1),Ui=e("/"),zi=t("code",null,"is-empty",-1),Ei=e("skelly37 created "),Di={href:"https://github.com/nushell/nu_scripts/pull/284",target:"_blank",rel:"noopener noreferrer"},Yi=e("Added German diacritics"),Hi=e("Yethal created "),Li={href:"https://github.com/nushell/nu_scripts/pull/283",target:"_blank",rel:"noopener noreferrer"},Vi=e("Add function to remove diacritics from string"),Gi=e("fdncred created "),Ji={href:"https://github.com/nushell/nu_scripts/pull/282",target:"_blank",rel:"noopener noreferrer"},Xi=e("remove engine-q references"),Ki=e("e2dk4r created "),Qi={href:"https://github.com/nushell/nu_scripts/pull/281",target:"_blank",rel:"noopener noreferrer"},Zi=e("custom completions: scoop: add some missing command completions"),ed=e(", and "),td={href:"https://github.com/nushell/nu_scripts/pull/280",target:"_blank",rel:"noopener noreferrer"},od=e("custom completions: scoop: add some missing command completions"),nd=e("mk00pl created "),sd={href:"https://github.com/nushell/nu_scripts/pull/279",target:"_blank",rel:"noopener noreferrer"},rd=e("added webscrapping script for twitter"),ld=e("azzamsa created "),ad={href:"https://github.com/nushell/nu_scripts/pull/278",target:"_blank",rel:"noopener noreferrer"},id=e("fix: zoxide support Nushell out of the box"),dd=t("h2",{id:"reedline",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),hd=e("sholderbach created "),cd={href:"https://github.com/nushell/reedline/pull/471",target:"_blank",rel:"noopener noreferrer"},_d=e("Prepare 0.11.0 release"),ud=e("unrelentingtech created "),pd={href:"https://github.com/nushell/reedline/pull/470",target:"_blank",rel:"noopener noreferrer"},md=e("Add Reedline::has_last_command_context to allow checking if update_last_command_context will fail"),gd=e("nibon7 created "),fd={href:"https://github.com/nushell/reedline/pull/469",target:"_blank",rel:"noopener noreferrer"},bd=e("Fix panic when using sqlite as history backend"),kd=e("morzel85 created "),vd={href:"https://github.com/nushell/reedline/pull/466",target:"_blank",rel:"noopener noreferrer"},yd=e("README.md outline cleanup");function wd(xd,Ad){const o=l("ExternalLinkIcon");return a(),i("div",null,[c,_,u,d(" more "),p,t("p",null,[m,t("a",g,[f,n(o)]),b,t("a",k,[v,n(o)]),y,w,x]),A,t("p",null,[T,t("a",N,[j,n(o)]),S]),t("h3",I,[R,F,q,C,W,$,t("a",M,[O,n(o)]),B]),P,t("p",null,[U,z,E,D,Y,H,L,V,G,t("a",J,[X,n(o)]),K]),Q,t("p",null,[Z,ee,te,oe,t("a",ne,[se,n(o)]),re,t("a",le,[ae,n(o)]),ie]),de,he,t("h3",ce,[_e,ue,t("a",pe,[me,n(o)]),ge,t("a",fe,[be,n(o)]),ke]),ve,ye,t("p",null,[we,xe,Ae,Te,Ne,je,Se,t("a",Ie,[Re,n(o)]),Fe,qe,Ce]),We,t("h3",$e,[Me,Oe,t("a",Be,[Pe,n(o)]),Ue]),ze,t("h3",Ee,[De,Ye,t("a",He,[Le,n(o)]),Ve,t("a",Ge,[Je,n(o)]),Xe]),Ke,t("h2",Qe,[Ze,et,t("a",tt,[ot,n(o)]),nt]),st,rt,lt,t("h2",at,[it,dt,ht,ct,t("a",_t,[ut,n(o)])]),pt,t("h2",mt,[gt,ft,t("a",bt,[kt,n(o)])]),vt,t("h2",yt,[wt,xt,t("a",At,[Tt,n(o)]),Nt]),t("p",null,[jt,St,It,t("a",Rt,[Ft,n(o)]),qt]),Ct,Wt,t("p",null,[$t,t("a",Mt,[Ot,n(o)]),Bt]),Pt,Ut,t("h2",zt,[Et,t("a",Dt,[Yt,n(o)]),Ht]),Lt,t("h2",Vt,[Gt,Jt,Xt,Kt,t("a",Qt,[Zt,n(o)]),eo]),to,t("h2",oo,[no,so,ro,lo,t("a",ao,[io,n(o)]),ho]),co,t("p",null,[_o,t("a",uo,[po,n(o)]),mo]),go,fo,bo,t("ul",null,[t("li",null,[ko,t("a",vo,[yo,n(o)]),wo,t("a",xo,[Ao,To,No,n(o)]),jo,t("a",So,[Io,n(o)]),Ro,t("a",Fo,[qo,Co,Wo,n(o)]),$o,t("a",Mo,[Oo,Bo,Po,Uo,n(o)])]),t("li",null,[zo,t("a",Eo,[Do,n(o)]),Yo,t("a",Ho,[Lo,n(o)]),Vo,t("a",Go,[Jo,Xo,n(o)]),Ko,t("a",Qo,[Zo,n(o)]),en,t("a",tn,[on,n(o)])]),t("li",null,[nn,t("a",sn,[rn,n(o)]),ln,t("a",an,[dn,n(o)]),hn,t("a",cn,[_n,un,n(o)]),pn,t("a",mn,[gn,fn,bn,n(o)]),kn,t("a",vn,[yn,wn,xn,n(o)]),An,t("a",Tn,[Nn,jn,Sn,n(o)])]),t("li",null,[In,t("a",Rn,[Fn,n(o)]),qn,t("a",Cn,[Wn,n(o)])]),t("li",null,[$n,t("a",Mn,[On,Bn,n(o)]),Pn,t("a",Un,[zn,n(o)]),En,t("a",Dn,[Yn,n(o)]),Hn,t("a",Ln,[Vn,n(o)]),Gn,t("a",Jn,[Xn,n(o)]),Kn,t("a",Qn,[Zn,n(o)]),es,t("a",ts,[os,n(o)]),ns,t("a",ss,[rs,n(o)]),ls,t("a",as,[is,n(o)]),ds,t("a",hs,[cs,n(o)])]),t("li",null,[_s,t("a",us,[ps,n(o)]),ms,t("a",gs,[fs,n(o)]),bs,t("a",ks,[vs,ys,ws,n(o)]),xs,t("a",As,[Ts,n(o)]),Ns,t("a",js,[Ss,n(o)]),Is,t("a",Rs,[Fs,n(o)]),qs,t("a",Cs,[Ws,$s,Ms,n(o)])]),t("li",null,[Os,t("a",Bs,[Ps,Us,zs,Es,Ds,Ys,n(o)])]),t("li",null,[Hs,t("a",Ls,[Vs,n(o)]),Gs,t("a",Js,[Xs,n(o)])]),t("li",null,[Ks,t("a",Qs,[Zs,n(o)])]),t("li",null,[er,t("a",tr,[or,n(o)]),nr,t("a",sr,[rr,n(o)]),lr,t("a",ar,[ir,n(o)]),dr,t("a",hr,[cr,n(o)]),_r,t("a",ur,[pr,n(o)]),mr,t("a",gr,[fr,n(o)]),br,t("a",kr,[vr,n(o)]),yr,t("a",wr,[xr,n(o)]),Ar,t("a",Tr,[Nr,n(o)]),jr,t("a",Sr,[Ir,n(o)]),Rr,t("a",Fr,[qr,n(o)])]),t("li",null,[Cr,t("a",Wr,[$r,Mr,Or,n(o)]),Br,t("a",Pr,[Ur,n(o)]),zr,t("a",Er,[Dr,Yr,n(o)]),Hr,t("a",Lr,[Vr,Gr,Jr,n(o)]),Xr,t("a",Kr,[Qr,n(o)])]),t("li",null,[Zr,t("a",el,[tl,n(o)])]),t("li",null,[ol,t("a",nl,[sl,n(o)]),rl,t("a",ll,[al,n(o)]),il,t("a",dl,[hl,n(o)]),cl,t("a",_l,[ul,pl,ml,n(o)]),gl,t("a",fl,[bl,n(o)]),kl,t("a",vl,[yl,wl,xl,Al,Tl,Nl,n(o)]),jl,t("a",Sl,[Il,n(o)]),Rl,t("a",Fl,[ql,Cl,Wl,n(o)])]),t("li",null,[$l,t("a",Ml,[Ol,n(o)]),Bl,t("a",Pl,[Ul,n(o)]),zl,t("a",El,[Dl,n(o)])]),t("li",null,[Yl,t("a",Hl,[Ll,n(o)]),Vl,t("a",Gl,[Jl,n(o)])]),t("li",null,[Xl,t("a",Kl,[Ql,n(o)])]),t("li",null,[Zl,t("a",ea,[ta,n(o)])]),t("li",null,[oa,t("a",na,[sa,n(o)])]),t("li",null,[ra,t("a",la,[aa,n(o)])])]),ia,t("ul",null,[t("li",null,[da,t("a",ha,[ca,n(o)])]),t("li",null,[_a,t("a",ua,[pa,n(o)])]),t("li",null,[ma,t("a",ga,[fa,n(o)])]),t("li",null,[ba,t("a",ka,[va,n(o)]),ya,t("a",wa,[xa,Aa,Ta,n(o)]),Na,t("a",ja,[Sa,Ia,Ra,n(o)]),Fa,t("a",qa,[Ca,n(o)]),Wa,t("a",$a,[Ma,n(o)])]),t("li",null,[Oa,t("a",Ba,[Pa,n(o)]),Ua,t("a",za,[Ea,n(o)])]),t("li",null,[Da,t("a",Ya,[Ha,n(o)])]),t("li",null,[La,t("a",Va,[Ga,n(o)])]),t("li",null,[Ja,t("a",Xa,[Ka,n(o)])]),t("li",null,[Qa,t("a",Za,[ei,n(o)]),ti,t("a",oi,[ni,n(o)]),si,t("a",ri,[li,n(o)]),ai,t("a",ii,[di,n(o)]),hi,t("a",ci,[_i,n(o)])]),t("li",null,[ui,t("a",pi,[mi,n(o)]),gi,t("a",fi,[bi,n(o)])]),t("li",null,[ki,t("a",vi,[yi,wi,xi,n(o)])])]),Ai,t("ul",null,[t("li",null,[Ti,t("a",Ni,[ji,n(o)])]),t("li",null,[Si,t("a",Ii,[Ri,Fi,qi,Ci,Wi,$i,Mi,Oi,Bi,Pi,Ui,zi,n(o)])]),t("li",null,[Ei,t("a",Di,[Yi,n(o)])]),t("li",null,[Hi,t("a",Li,[Vi,n(o)])]),t("li",null,[Gi,t("a",Ji,[Xi,n(o)])]),t("li",null,[Ki,t("a",Qi,[Zi,n(o)]),ed,t("a",td,[od,n(o)])]),t("li",null,[nd,t("a",sd,[rd,n(o)])]),t("li",null,[ld,t("a",ad,[id,n(o)])])]),dd,t("ul",null,[t("li",null,[hd,t("a",cd,[_d,n(o)])]),t("li",null,[ud,t("a",pd,[md,n(o)])]),t("li",null,[gd,t("a",fd,[bd,n(o)])]),t("li",null,[kd,t("a",vd,[yd,n(o)])])])])}const Nd=r(h,[["render",wd],["__file","2022-09-06-nushell-0_68.html.vue"]]);export{Nd as default};
