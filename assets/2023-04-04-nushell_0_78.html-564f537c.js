import{_ as s,M as r,p as a,q as h,R as i,Q as n,t as e,N as o,a1 as l}from"./framework-344bb0e4.js";const u={},c=n("h1",{id:"nushell-0-78",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nushell-0-78","aria-hidden":"true"},"#"),e(" Nushell 0.78")],-1),p=n("p",null,"Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your command line. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful command line pipelines.",-1),d=n("p",null,"Today, we're releasing version 0.78 of Nu. This release adds pattern matching, speed improvements, easier cell paths when columns may be missing, better error handling, and much more.",-1),_=n("h1",{id:"where-to-get-it",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#where-to-get-it","aria-hidden":"true"},"#"),e(" Where to get it")],-1),m={href:"https://github.com/nushell/nushell/releases/tag/0.78.0",target:"_blank",rel:"noopener noreferrer"},b={href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"cargo install nu",-1),g=l(`<p>NOTE: The optional dataframe functionality is available by <code>cargo install nu --features=dataframe</code>.</p><p>As part of this release, we also publish a set of optional plugins you can install and use with Nu. To install, use <code>cargo install nu_plugin_&lt;plugin name&gt;</code>.</p><h1 id="themes-of-this-release-new-features" tabindex="-1"><a class="header-anchor" href="#themes-of-this-release-new-features" aria-hidden="true">#</a> Themes of this release / New features</h1><h2 id="pattern-matching-jt" tabindex="-1"><a class="header-anchor" href="#pattern-matching-jt" aria-hidden="true">#</a> Pattern matching (jt)</h2><p>With 0.78, Nushell now comes with the <code>match</code> expression, which allows you to do pattern matching on a value. It supports a variety of different kinds of patterns, which can be mixed and matched to create more complicated patterns.</p><p>A simple example matching against a constant or a range:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>match 3 {
  1 =&gt; { print &quot;it&#39;s a 1&quot; }
  1..10 =&gt; { print &quot;it&#39;s between 1 and 10&quot; }
}
</code></pre></div><p>Another example, this time matching against a record value, with a fall-through if it doesn&#39;t match:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>match $a {
  {x: $x, y: 10} =&gt; { print $&quot;y is: 10 and x is: ($x)&quot; }
  _ =&gt; { print &quot;the above didn&#39;t match, so we print this instead&quot; }
}
</code></pre></div><p>You can also match on the elements of a list:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>match $list {
  [$one] =&gt; { print &quot;one element list&quot; }
  [$one, $two] =&gt; { print &quot;two element list&quot; }
  [$head, ..$tail] =&gt; { print $&quot;the tail of the list is ($tail)&quot; }
}
</code></pre></div>`,11),k={id:"alias-changes-kubouch",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#alias-changes-kubouch","aria-hidden":"true"},"#",-1),x={href:"https://github.com/nushell/nushell/pull/8557",target:"_blank",rel:"noopener noreferrer"},v=l(`<h3 id="aliases-now-can-shadow" tabindex="-1"><a class="header-anchor" href="#aliases-now-can-shadow" aria-hidden="true">#</a> Aliases now can shadow</h3><p>We&#39;ve updated the new <code>alias</code> command we introduced in 0.77 to work more closely to the previous one. For example:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">alias</span> l <span class="token operator">=</span> <span class="token function">ls</span> <span class="token parameter variable">-a</span>
<span class="token operator">&gt;</span> <span class="token builtin class-name">alias</span> l <span class="token operator">=</span> <span class="token function">ls</span> <span class="token parameter variable">-l</span>
</code></pre></div><p>Will now create the <code>l</code> alias that points to <code>ls -l</code>, with most recent line getting precedence during alias expansion.</p><h3 id="alias-can-be-named-the-same-as-the-aliased-command" tabindex="-1"><a class="header-anchor" href="#alias-can-be-named-the-same-as-the-aliased-command" aria-hidden="true">#</a> Alias can be named the same as the aliased command</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">alias</span> <span class="token function">ls</span> <span class="token operator">=</span> <span class="token function">ls</span> <span class="token parameter variable">-a</span>
</code></pre></div><p>Now correctly displays all files when calling <code>ls</code>, instead of throwing an unhelpful error.</p><h3 id="old-alias-still-keeps-working" tabindex="-1"><a class="header-anchor" href="#old-alias-still-keeps-working" aria-hidden="true">#</a> Old alias still keeps working</h3><p>Since there are still some remaining issues to fix with the new alias implementation, we still keep <code>old-alias</code> around for this release.</p>`,9),y={id:"speed-improvements-jt",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#speed-improvements-jt","aria-hidden":"true"},"#",-1),q={href:"https://github.com/nushell/nushell/pull/8609",target:"_blank",rel:"noopener noreferrer"},N=l("<p>We&#39;ve sped up the performance of tight loops like <code>for</code> and <code>while</code> considerably in this release. For example, on our test machine:</p><p>Example 1: <code>timeit { for x in 1..1000000 {} }</code></p><ul><li>0.77.1: 908ms</li><li>0.78.0: 52ms</li></ul><p>Example 2: <code>timeit { mut x = 1; while $x &lt; 1000000 { $x += 1 } }</code></p><ul><li>0.77.1: 1082ms</li><li>0.78.0: 170ms</li></ul>",5),R={id:"optional-cell-path-members-rgwood",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#optional-cell-path-members-rgwood","aria-hidden":"true"},"#",-1),S={href:"https://github.com/nushell/nushell/pull/8379",target:"_blank",rel:"noopener noreferrer"},E=l(`<p>In Nu 0.78, you can use <code>?</code> in cell paths to suppress errors from missing data. <code>?</code> is a more convenient+powerful version of the <code>-i</code>/<code>--ignore-errors</code> flag on <code>get</code> and <code>select</code>. Here are some examples:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span>.bar <span class="token comment"># errors because \`bar\` is not present on the record</span>
<span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span>.bar? <span class="token comment"># returns null</span>

<span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span> <span class="token operator">|</span> get bar <span class="token comment"># errors</span>
<span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span> <span class="token operator">|</span> get bar? <span class="token comment"># returns null</span>

<span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span>.bar.baz <span class="token comment"># errors</span>
<span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span>.bar.baz? <span class="token comment"># errors because \`bar\` is not present</span>
<span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span>.bar?.baz <span class="token comment"># returns null even though \`baz\` is not present; \`?\` short-circuits</span>
<span class="token punctuation">{</span> foo: <span class="token number">123</span> <span class="token punctuation">}</span>.bar?.baz? <span class="token comment"># returns null</span>

<span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>.8 <span class="token comment"># errors because there is no 8th item in the list</span>
<span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>.8? <span class="token comment"># returns null</span>

<span class="token punctuation">[</span><span class="token punctuation">{</span>foo: <span class="token number">123</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>.foo <span class="token comment"># errors because \`foo\` is not present on every item in the table</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span>foo: <span class="token number">123</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>.foo? <span class="token comment"># returns a list [123, null]</span>
</code></pre></div><p><code>?</code> works anywhere that cell paths work, including <code>where</code>:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>&gt; [{foo: 123}, {}] | where foo? == 123
╭───┬─────╮
│ # │ foo │
├───┼─────┤
│ 0 │ 123 │
╰───┴─────╯
</code></pre></div>`,4),F={id:"better-error-handling-in-error-make-amtoine-in-8511-and-8570",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#better-error-handling-in-error-make-amtoine-in-8511-and-8570","aria-hidden":"true"},"#",-1),$=n("code",null,"error make",-1),j=n("code",null,"amtoine",-1),B={href:"https://github.com/nushell/nushell/pull/8511",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/nushell/nushell/pull/8570",target:"_blank",rel:"noopener noreferrer"},O=l("<p>The <code>error make</code> command now gives better hints about why the format is not a valid <code>error make</code> format:</p><ul><li>with an empty format, <code>error make {}</code> will say that there is a &quot;<em>missing required member <code>$.msg</code></em>&quot;</li><li>with an empty <code>$.label</code>, <code>error make {msg: &quot;message&quot;, label: {}}</code> will say there is a &quot;<em>missing required member <code>$.label.text</code></em>&quot;</li><li>finally, when <code>$.label.start</code> / <code>$.label.end</code> is not defined while the other is, <code>error make</code> will give a hint as to add the missing one to the format!</li></ul><p>The second change disallow the use of a <code>$.label.start</code> greater than <code>$.label.end</code> as a span.</p>",3),W={id:"support-for-pretty-output-format-in-to-nuon-amtoine",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#support-for-pretty-output-format-in-to-nuon-amtoine","aria-hidden":"true"},"#",-1),U=n("code",null,"to nuon",-1),M={href:"https://github.com/nushell/nushell/pull/8366",target:"_blank",rel:"noopener noreferrer"},z=l(`<p>The <code>to nuon</code> command can now output <em>pretty</em> NUON data with whitespaces for better readability.</p><p>The default behaviour still is to output everything on a single line, encouraging users to leverage the compactness of the NUON data format.</p><p>However, we can now output formatted NUON data with the <code>--indent</code> and <code>--tabs</code> options:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">|</span> to nuon <span class="token parameter variable">--indent</span> <span class="token number">4</span>
<span class="token punctuation">[</span>
    <span class="token number">1</span>,
    <span class="token number">2</span>,
    <span class="token number">3</span>
<span class="token punctuation">]</span>
</code></pre></div><p>or</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span>date: <span class="token number">2000</span>-01-01, data: <span class="token punctuation">[</span><span class="token number">1</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token number">4.56</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token operator">|</span> to nuon <span class="token parameter variable">--indent</span> <span class="token number">4</span>
<span class="token punctuation">{</span>
    date: <span class="token number">2000</span>-01-01T00:00:00+00:00,
    data: <span class="token punctuation">[</span>
        <span class="token number">1</span>,
        <span class="token punctuation">[</span>
            <span class="token number">2</span>,
            <span class="token number">3</span>
        <span class="token punctuation">]</span>,
        <span class="token number">4.56</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>The default <em>single-line</em> behaviour still can be enforced with the <code>--raw</code> option, e.g.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span>date: <span class="token number">2000</span>-01-01, data: <span class="token punctuation">[</span><span class="token number">1</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token number">4.56</span><span class="token punctuation">]</span><span class="token punctuation">}</span> <span class="token operator">|</span> to nuon <span class="token parameter variable">--indent</span> <span class="token number">4</span> <span class="token parameter variable">--raw</span>
<span class="token punctuation">{</span>date: <span class="token number">2000</span>-01-01T00:00:00+00:00, data: <span class="token punctuation">[</span><span class="token number">1</span>, <span class="token punctuation">[</span><span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>, <span class="token number">4.56</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
</code></pre></div>`,8),L={id:"new-math-exp-command-lesves",tabindex:"-1"},P=n("a",{class:"header-anchor",href:"#new-math-exp-command-lesves","aria-hidden":"true"},"#",-1),V=n("code",null,"math exp",-1),H={href:"https://github.com/nushell/nushell/pull/8700",target:"_blank",rel:"noopener noreferrer"},J=l('<p>To complement the <code>math ln</code> command, we now include a <code>math exp</code> command for exponentiation with the base e.</p><h1 id="breaking-changes" tabindex="-1"><a class="header-anchor" href="#breaking-changes" aria-hidden="true">#</a> Breaking changes</h1><h2 id="let-requires-surrounding-parentheses-for-saving-command-output" tabindex="-1"><a class="header-anchor" href="#let-requires-surrounding-parentheses-for-saving-command-output" aria-hidden="true">#</a> <code>let</code> requires surrounding parentheses for saving command output</h2><p><code>let x = ls</code> will not run the <code>ls</code> command anymore. If you need to save the output of a command, you need to wrap it in parentheses: <code>let x = (ls)</code>.</p><h2 id="now-required-in-closures" tabindex="-1"><a class="header-anchor" href="#now-required-in-closures" aria-hidden="true">#</a> <code>||</code> now required in closures</h2><p>To help differentiate between blocks (which can mutate variables) and closures (which can be used in a pipeline), we&#39;ve changed the syntax of closures to require <code>||</code>. This means the simplest closure now looks like <code>{|| }</code></p><h2 id="we-no-longer-automatically-print-values-as-part-of-a-script" tabindex="-1"><a class="header-anchor" href="#we-no-longer-automatically-print-values-as-part-of-a-script" aria-hidden="true">#</a> We no longer automatically print values as part of a script</h2><p>We&#39;ve changed the automatic-printing rules for scripts and the REPL to now only automatically print the last value. This means two major breaking changes:</p>',8),X={href:"https://github.com/nushell/nushell/pull/8618",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://github.com/nushell/nushell/pull/8292",target:"_blank",rel:"noopener noreferrer"},Q=n("h2",{id:"bare-words-can-t-start-with-a-number",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#bare-words-can-t-start-with-a-number","aria-hidden":"true"},"#"),e(" Bare words can't start with a number")],-1),G={href:"https://github.com/nushell/nushell/pull/8635",target:"_blank",rel:"noopener noreferrer"},K=n("h2",{id:"fields-can-only-be-defined-once",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fields-can-only-be-defined-once","aria-hidden":"true"},"#"),e(" Fields can only be defined once")],-1),Z={href:"https://github.com/nushell/nushell/pull/8705",target:"_blank",rel:"noopener noreferrer"},ee=n("h2",{id:"thread-configuration-moves-to-par-each",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#thread-configuration-moves-to-par-each","aria-hidden":"true"},"#"),e(" Thread configuration moves to "),n("code",null,"par-each")],-1),ne={href:"https://github.com/nushell/nushell/pull/8686",target:"_blank",rel:"noopener noreferrer"},te=n("code",null,"par-each",-1),oe=n("h2",{id:"ranges-become-the-standard-range-specifier",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ranges-become-the-standard-range-specifier","aria-hidden":"true"},"#"),e(" Ranges become the standard range specifier")],-1),le=n("code",null,"str substring",-1),se={href:"https://github.com/nushell/nushell/pull/8660",target:"_blank",rel:"noopener noreferrer"},re={href:"https://github.com/nushell/nushell/pull/8710",target:"_blank",rel:"noopener noreferrer"},ae=n("code",null,"bytes at",-1),he=n("h2",{id:"alias-recursion-has-been-disabled",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#alias-recursion-has-been-disabled","aria-hidden":"true"},"#"),e(" Alias recursion has been disabled")],-1),ie={href:"https://github.com/nushell/nushell/pull/8557",target:"_blank",rel:"noopener noreferrer"},ue=n("h2",{id:"empty-lists-handled-more-consistently",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#empty-lists-handled-more-consistently","aria-hidden":"true"},"#"),e(" Empty lists handled more consistently")],-1),ce=n("code",null,"[] | select foo",-1),pe={href:"https://github.com/nushell/nushell/pull/8651",target:"_blank",rel:"noopener noreferrer"},de=n("code",null,"null",-1),_e=n("code",null,"sort",-1),me=n("code",null,"uniq",-1),be=n("code",null,"sort-by",-1),fe=n("code",null,"uniq-by",-1),ge={href:"https://github.com/nushell/nushell/pull/8669",target:"_blank",rel:"noopener noreferrer"},ke=n("p",null,"These changes make it easier to work with lists of unknown size.",-1),we=n("h2",{id:"comparison-operators-now-allow-null",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#comparison-operators-now-allow-null","aria-hidden":"true"},"#"),e(" Comparison operators now allow null")],-1),xe=n("code",null,"1 < null",-1),ve={href:"https://github.com/nushell/nushell/pull/8617",target:"_blank",rel:"noopener noreferrer"},ye=n("code",null,"null",-1),Ae=n("h1",{id:"full-changelog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#full-changelog","aria-hidden":"true"},"#"),e(" Full changelog")],-1),qe=n("h2",{id:"nushell",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nushell","aria-hidden":"true"},"#"),e(" Nushell")],-1),Ne={href:"https://github.com/nushell/nushell/pull/8728",target:"_blank",rel:"noopener noreferrer"},Re=n("code",null,"reedline",-1),Te=n("code",null,"0.18.0",-1),Se={href:"https://github.com/nushell/nushell/pull/8727",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/nushell/nushell/pull/8716",target:"_blank",rel:"noopener noreferrer"},Fe=n("code",null,"atty",-1),Ie=n("code",null,"nu-table",-1),$e={href:"https://github.com/nushell/nushell/pull/8715",target:"_blank",rel:"noopener noreferrer"},je=n("code",null,"0.78.0",-1),Be={href:"https://github.com/nushell/nushell/pull/8712",target:"_blank",rel:"noopener noreferrer"},Ce=n("code",null,"clippy",-1),Oe={href:"https://github.com/nushell/nushell/pull/8688",target:"_blank",rel:"noopener noreferrer"},We=n("code",null,"proptest",-1),De={href:"https://github.com/nushell/nushell/pull/8521",target:"_blank",rel:"noopener noreferrer"},Ue=n("code",null,"CONTRIBUTING",-1),Me={href:"https://github.com/nushell/nushell/pull/8717",target:"_blank",rel:"noopener noreferrer"},ze={href:"https://github.com/nushell/nushell/pull/8690",target:"_blank",rel:"noopener noreferrer"},Le={href:"https://github.com/nushell/nushell/pull/8680",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://github.com/nushell/nushell/pull/8679",target:"_blank",rel:"noopener noreferrer"},Ve=n("code",null,"threads",-1),He=n("code",null,"par_each",-1),Je={href:"https://github.com/nushell/nushell/pull/8673",target:"_blank",rel:"noopener noreferrer"},Xe=n("code",null,"inspect",-1),Ye={href:"https://github.com/nushell/nushell/pull/8653",target:"_blank",rel:"noopener noreferrer"},Qe=n("code",null,"$nu",-1),Ge={href:"https://github.com/nushell/nushell/pull/8599",target:"_blank",rel:"noopener noreferrer"},Ke=n("code",null,"nu -c",-1),Ze={href:"https://github.com/nushell/nushell/pull/8588",target:"_blank",rel:"noopener noreferrer"},en={href:"https://github.com/nushell/nushell/pull/8583",target:"_blank",rel:"noopener noreferrer"},nn=n("code",null,"register",-1),tn={href:"https://github.com/nushell/nushell/pull/8580",target:"_blank",rel:"noopener noreferrer"},on={href:"https://github.com/nushell/nushell/pull/8579",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://github.com/nushell/nushell/pull/8576",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://github.com/nushell/nushell/pull/8501",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://github.com/nushell/nushell/pull/8711",target:"_blank",rel:"noopener noreferrer"},an={href:"https://github.com/nushell/nushell/pull/8710",target:"_blank",rel:"noopener noreferrer"},hn=n("code",null,"bytes at",-1),un={href:"https://github.com/nushell/nushell/pull/8620",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://github.com/nushell/nushell/pull/8619",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://github.com/nushell/nushell/pull/8600",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://github.com/nushell/nushell/pull/8578",target:"_blank",rel:"noopener noreferrer"},_n=n("code",null,"run",-1),mn=n("code",null,"all",-1),bn=n("code",null,"any",-1),fn={href:"https://github.com/nushell/nushell/pull/8550",target:"_blank",rel:"noopener noreferrer"},gn=n("code",null,"bytes length",-1),kn={href:"https://github.com/nushell/nushell/pull/8529",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://github.com/nushell/nushell/pull/8706",target:"_blank",rel:"noopener noreferrer"},xn={href:"https://github.com/nushell/nushell/pull/8705",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://github.com/nushell/nushell/pull/8681",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://github.com/nushell/nushell/pull/8677",target:"_blank",rel:"noopener noreferrer"},An={href:"https://github.com/nushell/nushell/pull/8660",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://github.com/nushell/nushell/pull/8649",target:"_blank",rel:"noopener noreferrer"},Nn={href:"https://github.com/nushell/nushell/pull/8645",target:"_blank",rel:"noopener noreferrer"},Rn={href:"https://github.com/nushell/nushell/pull/8635",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://github.com/nushell/nushell/pull/8633",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://github.com/nushell/nushell/pull/8618",target:"_blank",rel:"noopener noreferrer"},En={href:"https://github.com/nushell/nushell/pull/8609",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://github.com/nushell/nushell/pull/8605",target:"_blank",rel:"noopener noreferrer"},In={href:"https://github.com/nushell/nushell/pull/8604",target:"_blank",rel:"noopener noreferrer"},$n={href:"https://github.com/nushell/nushell/pull/8596",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://github.com/nushell/nushell/pull/8594",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://github.com/nushell/nushell/pull/8592",target:"_blank",rel:"noopener noreferrer"},Cn={href:"https://github.com/nushell/nushell/pull/8590",target:"_blank",rel:"noopener noreferrer"},On={href:"https://github.com/nushell/nushell/pull/8545",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://github.com/nushell/nushell/pull/8540",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://github.com/nushell/nushell/pull/8506",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://github.com/nushell/nushell/pull/8496",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://github.com/nushell/nushell/pull/8702",target:"_blank",rel:"noopener noreferrer"},zn=n("code",null,"show_banner",-1),Ln={href:"https://github.com/nushell/nushell/pull/8666",target:"_blank",rel:"noopener noreferrer"},Pn=n("code",null,"path expand",-1),Vn={href:"https://github.com/nushell/nushell/pull/8650",target:"_blank",rel:"noopener noreferrer"},Hn=n("code",null,"assert equal",-1),Jn={href:"https://github.com/nushell/nushell/pull/8629",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://github.com/nushell/nushell/pull/8626",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://github.com/nushell/nushell/pull/8625",target:"_blank",rel:"noopener noreferrer"},Qn=n("code",null,"match",-1),Gn={href:"https://github.com/nushell/nushell/pull/8570",target:"_blank",rel:"noopener noreferrer"},Kn=n("em",null,"start > end",-1),Zn=n("code",null,"error make",-1),et={href:"https://github.com/nushell/nushell/pull/8552",target:"_blank",rel:"noopener noreferrer"},nt=n("code",null,"base_path",-1),tt=n("code",null,"std::test_dirs",-1),ot={href:"https://github.com/nushell/nushell/pull/8526",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://github.com/nushell/nushell/pull/8525",target:"_blank",rel:"noopener noreferrer"},st={href:"https://github.com/nushell/nushell/pull/8511",target:"_blank",rel:"noopener noreferrer"},rt=n("code",null,"error make",-1),at={href:"https://github.com/nushell/nushell/pull/8509",target:"_blank",rel:"noopener noreferrer"},ht={href:"https://github.com/nushell/nushell/pull/8504",target:"_blank",rel:"noopener noreferrer"},it=n("code",null,"0.77.2",-1),ut={href:"https://github.com/nushell/nushell/pull/8700",target:"_blank",rel:"noopener noreferrer"},ct=n("code",null,"math exp",-1),pt={href:"https://github.com/nushell/nushell/pull/8697",target:"_blank",rel:"noopener noreferrer"},dt=n("code",null,"reject",-1),_t={href:"https://github.com/nushell/nushell/pull/8686",target:"_blank",rel:"noopener noreferrer"},mt=n("code",null,"-t",-1),bt=n("code",null,"--threads",-1),ft={href:"https://github.com/nushell/nushell/pull/8663",target:"_blank",rel:"noopener noreferrer"},gt={href:"https://github.com/nushell/nushell/pull/8651",target:"_blank",rel:"noopener noreferrer"},kt=n("code",null,"select",-1),wt={href:"https://github.com/nushell/nushell/pull/8617",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://github.com/nushell/nushell/pull/8607",target:"_blank",rel:"noopener noreferrer"},vt={href:"https://github.com/nushell/nushell/pull/8591",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://github.com/nushell/nushell/pull/8586",target:"_blank",rel:"noopener noreferrer"},At=n("code",null,"mv",-1),qt={href:"https://github.com/nushell/nushell/pull/8554",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://github.com/nushell/nushell/pull/8691",target:"_blank",rel:"noopener noreferrer"},Rt=n("code",null,"us",-1),Tt=n("code",null,"µs",-1),St=n("code",null,"into duration",-1),Et={href:"https://github.com/nushell/nushell/pull/8647",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://github.com/nushell/nushell/pull/8675",target:"_blank",rel:"noopener noreferrer"},It={href:"https://github.com/nushell/nushell/pull/8669",target:"_blank",rel:"noopener noreferrer"},$t={href:"https://github.com/nushell/nushell/pull/8659",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://github.com/nushell/nushell/pull/8658",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://github.com/nushell/nushell/pull/8514",target:"_blank",rel:"noopener noreferrer"},Ct=n("code",null,"Deserialize",-1),Ot=n("code",null,"Serialize",-1),Wt={href:"https://github.com/nushell/nushell/pull/8632",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://github.com/nushell/nushell/pull/8515",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://github.com/nushell/nushell/pull/8499",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://github.com/nushell/nushell/pull/8606",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://github.com/nushell/nushell/pull/8536",target:"_blank",rel:"noopener noreferrer"},Lt={href:"https://github.com/nushell/nushell/pull/8535",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://github.com/nushell/nushell/pull/8534",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://github.com/nushell/nushell/pull/8533",target:"_blank",rel:"noopener noreferrer"},Ht={href:"https://github.com/nushell/nushell/pull/8532",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://github.com/nushell/nushell/pull/8531",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://github.com/nushell/nushell/pull/8601",target:"_blank",rel:"noopener noreferrer"},Yt={href:"https://github.com/nushell/nushell/pull/8571",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://github.com/nushell/nushell/pull/8568",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://github.com/nushell/nushell/pull/8562",target:"_blank",rel:"noopener noreferrer"},Kt=n("code",null,"nu_plugin_",-1),Zt={href:"https://github.com/nushell/nushell/pull/8561",target:"_blank",rel:"noopener noreferrer"},eo={href:"https://github.com/nushell/nushell/pull/8560",target:"_blank",rel:"noopener noreferrer"},no={href:"https://github.com/nushell/nushell/pull/8559",target:"_blank",rel:"noopener noreferrer"},to={href:"https://github.com/nushell/nushell/pull/8558",target:"_blank",rel:"noopener noreferrer"},oo={href:"https://github.com/nushell/nushell/pull/8557",target:"_blank",rel:"noopener noreferrer"},lo={href:"https://github.com/nushell/nushell/pull/8503",target:"_blank",rel:"noopener noreferrer"},so={href:"https://github.com/nushell/nushell/pull/8500",target:"_blank",rel:"noopener noreferrer"},ro={href:"https://github.com/nushell/nushell/pull/8493",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://github.com/nushell/nushell/pull/8492",target:"_blank",rel:"noopener noreferrer"},ho=n("code",null,"{",-1),io={href:"https://github.com/nushell/nushell/pull/8491",target:"_blank",rel:"noopener noreferrer"},uo={href:"https://github.com/nushell/nushell/pull/8490",target:"_blank",rel:"noopener noreferrer"},co={href:"https://github.com/nushell/nushell/pull/8485",target:"_blank",rel:"noopener noreferrer"},po={href:"https://github.com/nushell/nushell/pull/8470",target:"_blank",rel:"noopener noreferrer"},_o={href:"https://github.com/nushell/nushell/pull/8489",target:"_blank",rel:"noopener noreferrer"},mo=n("code",null,"std.nu",-1),bo={href:"https://github.com/nushell/nushell/pull/8465",target:"_blank",rel:"noopener noreferrer"},fo={href:"https://github.com/nushell/nushell/pull/8416",target:"_blank",rel:"noopener noreferrer"},go=n("code",null,"toolkit check pr",-1),ko={href:"https://github.com/nushell/nushell/pull/8366",target:"_blank",rel:"noopener noreferrer"},wo=n("code",null,"--raw",-1),xo=n("code",null,"--tabs",-1),vo=n("code",null,"--indent",-1),yo=n("code",null,"to nuon",-1),Ao=n("code",null,"to json",-1),qo={href:"https://github.com/nushell/nushell/pull/8488",target:"_blank",rel:"noopener noreferrer"},No=n("code",null,"-i",-1),Ro=n("code",null,"get",-1),To=n("code",null,"select",-1),So={href:"https://github.com/nushell/nushell/pull/8379",target:"_blank",rel:"noopener noreferrer"},Eo={href:"https://github.com/nushell/nushell/pull/8478",target:"_blank",rel:"noopener noreferrer"},Fo=n("code",null,"nu --help",-1),Io={href:"https://github.com/nushell/nushell/pull/8477",target:"_blank",rel:"noopener noreferrer"},$o={href:"https://github.com/nushell/nushell/pull/8475",target:"_blank",rel:"noopener noreferrer"},jo={href:"https://github.com/nushell/nushell/pull/8460",target:"_blank",rel:"noopener noreferrer"},Bo=n("code",null,"catch",-1),Co={href:"https://github.com/nushell/nushell/pull/8290",target:"_blank",rel:"noopener noreferrer"},Oo=n("code",null,"{|| ...}",-1),Wo={href:"https://github.com/nushell/nushell/pull/8274",target:"_blank",rel:"noopener noreferrer"},Do=n("code",null,"else if",-1),Uo={href:"https://github.com/nushell/nushell/pull/8474",target:"_blank",rel:"noopener noreferrer"},Mo={href:"https://github.com/nushell/nushell/pull/8473",target:"_blank",rel:"noopener noreferrer"},zo={href:"https://github.com/nushell/nushell/pull/8448",target:"_blank",rel:"noopener noreferrer"},Lo={href:"https://github.com/nushell/nushell/pull/8443",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://github.com/nushell/nushell/pull/8459",target:"_blank",rel:"noopener noreferrer"},Vo={href:"https://github.com/nushell/nushell/pull/8426",target:"_blank",rel:"noopener noreferrer"},Ho={href:"https://github.com/nushell/nushell/pull/8424",target:"_blank",rel:"noopener noreferrer"},Jo={href:"https://github.com/nushell/nushell/pull/8398",target:"_blank",rel:"noopener noreferrer"},Xo=n("code",null,"from csv",-1),Yo=n("code",null,"from tsv",-1),Qo={href:"https://github.com/nushell/nushell/pull/8396",target:"_blank",rel:"noopener noreferrer"},Go={href:"https://github.com/nushell/nushell/pull/8392",target:"_blank",rel:"noopener noreferrer"},Ko={href:"https://github.com/nushell/nushell/pull/8373",target:"_blank",rel:"noopener noreferrer"},Zo={href:"https://github.com/nushell/nushell/pull/8354",target:"_blank",rel:"noopener noreferrer"},el={href:"https://github.com/nushell/nushell/pull/8324",target:"_blank",rel:"noopener noreferrer"},nl={href:"https://github.com/nushell/nushell/pull/8314",target:"_blank",rel:"noopener noreferrer"},tl=n("code",null,"command_not_found",-1),ol={href:"https://github.com/nushell/nushell/pull/8207",target:"_blank",rel:"noopener noreferrer"},ll=n("code",null,"commandline",-1),sl={href:"https://github.com/nushell/nushell/pull/8310",target:"_blank",rel:"noopener noreferrer"},rl={href:"https://github.com/nushell/nushell/pull/8292",target:"_blank",rel:"noopener noreferrer"},al={href:"https://github.com/nushell/nushell/pull/8276",target:"_blank",rel:"noopener noreferrer"},hl=n("h2",{id:"extension",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#extension","aria-hidden":"true"},"#"),e(" Extension")],-1),il={href:"https://github.com/nushell/vscode-nushell-lang/pull/86",target:"_blank",rel:"noopener noreferrer"},ul=n("code",null,"use",-1),cl=n("h2",{id:"documentation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#documentation","aria-hidden":"true"},"#"),e(" Documentation")],-1),pl={href:"https://github.com/nushell/nushell.github.io/pull/854",target:"_blank",rel:"noopener noreferrer"},dl={href:"https://github.com/nushell/nushell.github.io/pull/853",target:"_blank",rel:"noopener noreferrer"},_l={href:"https://github.com/nushell/nushell.github.io/pull/851",target:"_blank",rel:"noopener noreferrer"},ml=n("code",null,"make_docs.nu",-1),bl={href:"https://github.com/nushell/nushell.github.io/pull/831",target:"_blank",rel:"noopener noreferrer"},fl={href:"https://github.com/nushell/nushell.github.io/pull/849",target:"_blank",rel:"noopener noreferrer"},gl=n("code",null,"error make",-1),kl={href:"https://github.com/nushell/nushell.github.io/pull/848",target:"_blank",rel:"noopener noreferrer"},wl={href:"https://github.com/nushell/nushell.github.io/pull/838",target:"_blank",rel:"noopener noreferrer"},xl={href:"https://github.com/nushell/nushell.github.io/pull/844",target:"_blank",rel:"noopener noreferrer"},vl=n("code",null,"let config",-1),yl=n("code",null,"let-env config",-1),Al={href:"https://github.com/nushell/nushell.github.io/pull/840",target:"_blank",rel:"noopener noreferrer"},ql={href:"https://github.com/nushell/nushell.github.io/pull/843",target:"_blank",rel:"noopener noreferrer"},Nl=n("code",null,"command_not_found",-1),Rl={href:"https://github.com/nushell/nushell.github.io/pull/839",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://github.com/nushell/nushell.github.io/pull/837",target:"_blank",rel:"noopener noreferrer"},Sl={href:"https://github.com/nushell/nushell.github.io/pull/832",target:"_blank",rel:"noopener noreferrer"},El={href:"https://github.com/nushell/nushell.github.io/pull/836",target:"_blank",rel:"noopener noreferrer"},Fl={href:"https://github.com/nushell/nushell.github.io/pull/835",target:"_blank",rel:"noopener noreferrer"},Il={href:"https://github.com/nushell/nushell.github.io/pull/834",target:"_blank",rel:"noopener noreferrer"},$l=n("h2",{id:"nu-scripts",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nu-scripts","aria-hidden":"true"},"#"),e(" Nu_Scripts")],-1),jl={href:"https://github.com/nushell/nu_scripts/pull/436",target:"_blank",rel:"noopener noreferrer"},Bl=n("code",null,"str collect",-1),Cl=n("code",null,"str join",-1),Ol={href:"https://github.com/nushell/nu_scripts/pull/430",target:"_blank",rel:"noopener noreferrer"},Wl={href:"https://github.com/nushell/nu_scripts/pull/429",target:"_blank",rel:"noopener noreferrer"},Dl={href:"https://github.com/nushell/nu_scripts/pull/428",target:"_blank",rel:"noopener noreferrer"},Ul={href:"https://github.com/nushell/nu_scripts/pull/416",target:"_blank",rel:"noopener noreferrer"},Ml={href:"https://github.com/nushell/nu_scripts/pull/435",target:"_blank",rel:"noopener noreferrer"},zl=n("code",null,"j",-1),Ll={href:"https://github.com/nushell/nu_scripts/pull/421",target:"_blank",rel:"noopener noreferrer"},Pl=n("code",null,"docker ps",-1),Vl={href:"https://github.com/nushell/nu_scripts/pull/434",target:"_blank",rel:"noopener noreferrer"},Hl=n("code",null,"str collect",-1),Jl=n("code",null,"str join",-1),Xl={href:"https://github.com/nushell/nu_scripts/pull/424",target:"_blank",rel:"noopener noreferrer"},Yl={href:"https://github.com/nushell/nu_scripts/pull/433",target:"_blank",rel:"noopener noreferrer"},Ql={href:"https://github.com/nushell/nu_scripts/pull/432",target:"_blank",rel:"noopener noreferrer"},Gl=n("code",null,"math exp",-1),Kl={href:"https://github.com/nushell/nu_scripts/pull/431",target:"_blank",rel:"noopener noreferrer"},Zl={href:"https://github.com/nushell/nu_scripts/pull/426",target:"_blank",rel:"noopener noreferrer"},es={href:"https://github.com/nushell/nu_scripts/pull/425",target:"_blank",rel:"noopener noreferrer"},ns=n("code",null,"gmom",-1),ts=n("code",null,"git_main_branch",-1),os={href:"https://github.com/nushell/nu_scripts/pull/420",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://github.com/nushell/nu_scripts/pull/419",target:"_blank",rel:"noopener noreferrer"},ss={href:"https://github.com/nushell/nu_scripts/pull/417",target:"_blank",rel:"noopener noreferrer"},rs={href:"https://github.com/nushell/nu_scripts/pull/407",target:"_blank",rel:"noopener noreferrer"},as={href:"https://github.com/nushell/nu_scripts/pull/402",target:"_blank",rel:"noopener noreferrer"},hs=n("code",null,"main",-1),is=n("code",null,"use",-1),us={href:"https://github.com/nushell/nu_scripts/pull/385",target:"_blank",rel:"noopener noreferrer"},cs=n("code",null,"since_last_release.nu",-1),ps=n("h2",{id:"reedline",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reedline","aria-hidden":"true"},"#"),e(" reedline")],-1),ds={href:"https://github.com/nushell/reedline/pull/564",target:"_blank",rel:"noopener noreferrer"},_s=n("code",null,"0.18.0",-1),ms={href:"https://github.com/nushell/reedline/pull/559",target:"_blank",rel:"noopener noreferrer"},bs={href:"https://github.com/nushell/reedline/pull/557",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://github.com/nushell/reedline/pull/555",target:"_blank",rel:"noopener noreferrer"},gs={href:"https://github.com/nushell/reedline/pull/554",target:"_blank",rel:"noopener noreferrer"},ks={href:"https://github.com/nushell/reedline/pull/553",target:"_blank",rel:"noopener noreferrer"};function ws(xs,vs){const t=r("ExternalLinkIcon");return a(),h("div",null,[c,p,d,i(" more "),_,n("p",null,[e("Nu 0.78 is available as "),n("a",m,[e("pre-built binaries"),o(t)]),e(" or from "),n("a",b,[e("crates.io"),o(t)]),e(". If you have Rust installed you can install it using "),f,e(".")]),g,n("h2",k,[w,e(" Alias changes ("),n("a",x,[e("kubouch"),o(t)]),e(")")]),v,n("h2",y,[A,e(" Speed improvements ("),n("a",q,[e("jt"),o(t)]),e(")")]),N,n("h2",R,[T,e(" Optional cell path members ("),n("a",S,[e("rgwood"),o(t)]),e(")")]),E,n("h2",F,[I,e(" better error handling in "),$,e(" ("),j,e(" in "),n("a",B,[e("#8511"),o(t)]),e(" and "),n("a",C,[e("#8570"),o(t)]),e(")")]),O,n("h2",W,[D,e(" Support for pretty output format in "),U,e(" ("),n("a",M,[e("amtoine"),o(t)]),e(")")]),z,n("h2",L,[P,e(" New "),V,e(" command ("),n("a",H,[e("lesves"),o(t)]),e(")")]),J,n("ul",null,[n("li",null,[e("We no longer "),n("a",X,[e("automatically print loop values"),o(t)])]),n("li",null,[e("We no longer "),n("a",Y,[e("print the results of every line automatically, requiring you to do it manually"),o(t)])])]),Q,n("p",null,[e("Words that start with a number or are in some way number-like must "),n("a",G,[e("now must be wrapped in backticks to be treated at a bare word or wrapped in quotes to be a string"),o(t)]),e(".")]),K,n("p",null,[e("You can no longer "),n("a",Z,[e("redefine a field in a record during initialization"),o(t)])]),ee,n("p",null,[e("Nushell no longer accepts the "),n("a",ne,[e("-t/--threads flag to the binary as it's now part of "),te,o(t)])]),oe,n("p",null,[le,e(" now "),n("a",se,[e("only accepts ranges"),o(t)]),e(" as does "),n("a",re,[ae,o(t)]),e(".")]),he,n("p",null,[e("Alias recursion is "),n("a",ie,[e("now disabled"),o(t)])]),ue,n("p",null,[ce,e(),n("a",pe,[e("now returns an empty list instead of "),de,o(t)]),e(" and "),_e,e(", "),me,e(", "),be,e(", and "),fe,e(),n("a",ge,[e("now return empty lists when given an empty list"),o(t)]),e(" (previously they would throw an error)")]),ke,we,n("p",null,[e("Previously expressions like "),xe,e(" would error; "),n("a",ve,[e("now they return "),ye,o(t)]),e(".")]),Ae,qe,n("ul",null,[n("li",null,[e("sholderbach created "),n("a",Ne,[e("Pin "),Re,e(" to "),Te,e(" release"),o(t)]),e(", and "),n("a",Se,[e("Fix rest of license year ranges"),o(t)]),e(", and "),n("a",Ee,[e("Remove unused "),Fe,e(" dep in "),Ie,o(t)]),e(", and "),n("a",$e,[e("Bump version to "),je,o(t)]),e(", and "),n("a",Be,[e("Fix two stable "),Ce,e(" lints"),o(t)]),e(", and "),n("a",Oe,[e("Remove "),We,e("s for nuon writing/parsing"),o(t)]),e(", and "),n("a",De,[e("Add "),Ue,e(" section on PRs and git"),o(t)])]),n("li",null,[e("fdncred created "),n("a",Me,[e("Update .gitignore"),o(t)]),e(", and "),n("a",ze,[e("fix test_default_config_path test after pr 8653"),o(t)]),e(", and "),n("a",Le,[e("fully deprecate str collect"),o(t)]),e(", and "),n("a",Pe,[e("add a "),Ve,e(" parameter to "),He,o(t)]),e(", and "),n("a",Je,[e("fix "),Xe,e(" panic with large tables"),o(t)]),e(", and "),n("a",Ye,[e("auto-expand paths in the "),Qe,e(" variable"),o(t)]),e(", and "),n("a",Ge,[e("allow startup-time to be captured when starting nushell with "),Ke,o(t)]),e(", and "),n("a",Ze,[e("tweak logging format"),o(t)]),e(", and "),n("a",en,[e("Clarify how "),nn,e(" works"),o(t)]),e(", and "),n("a",tn,[e("use reedline main branch"),o(t)]),e(", and "),n("a",on,[e("fixes the ability to have multiple modifiers on keybindings"),o(t)]),e(", and "),n("a",ln,[e("make std.nu tests work on mac"),o(t)]),e(", and "),n("a",sn,[e('Revert "Allow NU_LIBS_DIR and friends to be const"'),o(t)])]),n("li",null,[e("harshalchaudhari35 created "),n("a",rn,[e("Fix(tests/nu-command): remove unnecessary cwd() and pipeline(), etc"),o(t)])]),n("li",null,[e("1Kinoti created "),n("a",an,[e("make "),hn,e(" use ranges"),o(t)]),e(", and "),n("a",un,[e("fix unhelpful error message with '@' custom completion"),o(t)]),e(", and "),n("a",cn,[e("fix unhelpful error message with extra characters in list annotations"),o(t)]),e(", and "),n("a",pn,[e("type-check default values of list annotations"),o(t)]),e(", and "),n("a",dn,[e("unify the "),_n,e(" functions of "),mn,e(" and "),bn,o(t)]),e(", and "),n("a",fn,[e("fix: "),gn,e(" example description typo"),o(t)]),e(", and "),n("a",kn,[e("allow lists to have type annotations"),o(t)])]),n("li",null,[e("jntrnr created "),n("a",wn,[e("give better error when a numberlike is used for strings"),o(t)]),e(", and "),n("a",xn,[e("prevent redefining fields in a record"),o(t)]),e(", and "),n("a",vn,[e("Add rest and ignore-rest patterns"),o(t)]),e(", and "),n("a",yn,[e("Remove CI coverage until we can figure out why it's broken"),o(t)]),e(", and "),n("a",An,[e("move 'str substring' to only use ranges"),o(t)]),e(", and "),n("a",qn,[e("Improve inferred record types and type compat"),o(t)]),e(", and "),n("a",Nn,[e("Improve number-like error if expecting a string"),o(t)]),e(", and "),n("a",Rn,[e("Require that values that look like numbers parse as numberlike"),o(t)]),e(", and "),n("a",Tn,[e("Add or-patterns, fix var binding scope"),o(t)]),e(", and "),n("a",Sn,[e("Remove autoprinting of loop block values"),o(t)]),e(", and "),n("a",En,[e("Speed up tight loop benchmarks"),o(t)]),e(", and "),n("a",Fn,[e("Add more pattern types to matcher"),o(t)]),e(", and "),n("a",In,[e("Move variables to var stack"),o(t)]),e(", and "),n("a",$n,[e("Fix closures that use matches. Move 'collect' to core."),o(t)]),e(", and "),n("a",jn,[e("Make timeit work with command calls"),o(t)]),e(", and "),n("a",Bn,[e("Move timeit to use blocks. Make match vars immutable"),o(t)]),e(", and "),n("a",Cn,[e("Add pattern matching"),o(t)]),e(", and "),n("a",On,[e("Switch let/let-env family to init with math expressions"),o(t)]),e(", and "),n("a",Wn,[e("Fix command missing hook default config"),o(t)]),e(", and "),n("a",Dn,[e("Add rest and glob support to 'open'"),o(t)]),e(", and "),n("a",Un,[e("bump to 0.77.2"),o(t)])]),n("li",null,[e("amtoine created "),n("a",Mn,[e("move the "),zn,e(" config field to the top"),o(t)]),e(", and "),n("a",Ln,[e("REFACTOR: remove the redundant "),Pn,e(" from the tests of the standard library"),o(t)]),e(", and "),n("a",Vn,[e("stdlib: fix the "),Hn,e(" tests"),o(t)]),e(", and "),n("a",Jn,[e("feature: add the standard library tests to the PR template and the toolkit"),o(t)]),e(", and "),n("a",Xn,[e("stdlib: optimize test search and add better errors"),o(t)]),e(", and "),n("a",Yn,[e("remove "),Qn,e(" from the standard library"),o(t)]),e(", and "),n("a",Gn,[e("FIX: do not allow "),Kn,e(" in "),Zn,e(" spans"),o(t)]),e(", and "),n("a",et,[e("FIX: expand all the "),nt,e("s in "),tt,o(t)]),e(", and "),n("a",ot,[e("standard library: fix the readme"),o(t)]),e(", and "),n("a",lt,[e("standard library: bring the tests into the main CI"),o(t)]),e(", and "),n("a",st,[e("FEATURE: write better errors for "),rt,e(" and complete the doc"),o(t)]),e(", and "),n("a",at,[e("standard library: use the standard assert and fix test output"),o(t)]),e(", and "),n("a",ht,[e("standard library: fix the tests for the new closure parsing of "),it,o(t)])]),n("li",null,[e("lesves created "),n("a",ut,[e("Add "),ct,e(" command (issue #8661)"),o(t)])]),n("li",null,[e("rgwood created "),n("a",pt,[e("Make optional cell paths work with "),dt,o(t)]),e(", and "),n("a",_t,[e("Remove "),mt,e("/"),bt,e(" flag from nu"),o(t)]),e(", and "),n("a",ft,[e("Fix record-to-JSON conversion for HTTP commands"),o(t)]),e(", and "),n("a",gt,[e("Fix "),kt,e(" on empty lists"),o(t)]),e(", and "),n("a",wt,[e("Change comparison operators to allow nulls"),o(t)]),e(", and "),n("a",xt,[e("Clean up unnecessary macro use"),o(t)]),e(", and "),n("a",vt,[e("Make HTTP requests cancellable when trying to connect"),o(t)]),e(", and "),n("a",yt,[e("Better error message for "),At,e(" when file not found"),o(t)]),e(", and "),n("a",qt,[e("Cell paths: make optional path members short-circuit"),o(t)])]),n("li",null,[e("kks110 created "),n("a",Nt,[e("Fix a bug with "),Rt,e(" not outputting as "),Tt,e(" with the "),St,e(" command"),o(t)]),e(", and "),n("a",Et,[e("Allow parsing of mu (µ) character for durations (issue #8614)"),o(t)])]),n("li",null,[e("zhiburt created "),n("a",Ft,[e("Fix of a fix of #8671"),o(t)])]),n("li",null,[e("Benjamin-L created "),n("a",It,[e("Support passing an empty list to sort, uniq, sort-by, and uniq-by (issue #5957)"),o(t)])]),n("li",null,[e("stormasm created "),n("a",$t,[e("one more try on readme"),o(t)]),e(", and "),n("a",jt,[e("Add the showcase repo to Readme.md to give it more exposure to our developers"),o(t)]),e(", and "),n("a",Bt,[e("remove unused imports: "),Ct,e(", "),Ot,e(" compiler warning for nu-protocol/src/example.rs"),o(t)])]),n("li",null,[e("presidento created "),n("a",Wt,[e("stdlib: Add back recursive lookup for tests"),o(t)]),e(", and "),n("a",Dt,[e("stdlib: Implement common assert commands"),o(t)]),e(", and "),n("a",Ut,[e("std lib: extend test runner capabilities"),o(t)])]),n("li",null,[e("dependabot[bot] created "),n("a",Mt,[e("Bump openssl from 0.10.45 to 0.10.48"),o(t)]),e(", and "),n("a",zt,[e("Bump actions-rust-lang/setup-rust-toolchain from 1.4.3 to 1.4.4"),o(t)]),e(", and "),n("a",Lt,[e("Bump windows from 0.44.0 to 0.46.0"),o(t)]),e(", and "),n("a",Pt,[e("Bump rstest from 0.16.0 to 0.17.0"),o(t)]),e(", and "),n("a",Vt,[e("Bump quick-xml from 0.27.1 to 0.28.1"),o(t)]),e(", and "),n("a",Ht,[e("Bump alphanumeric-sort from 1.4.4 to 1.5.0"),o(t)]),e(", and "),n("a",Jt,[e("Bump miette from 5.5.0 to 5.6.0"),o(t)])]),n("li",null,[e("StevenDoesStuffs created "),n("a",Xt,[e("Fix mode tests which use sh to not run on windows"),o(t)])]),n("li",null,[e("Sygmei created "),n("a",Yt,[e("feat: added multiple options to http commands"),o(t)])]),n("li",null,[e("jaudiger created "),n("a",Qt,[e("Remove once_cell dependency from nu-test-support create."),o(t)])]),n("li",null,[e("WindSoilder created "),n("a",Gt,[e("better error message if plugin name doesn't starts with "),Kt,o(t)]),e(", and "),n("a",Zt,[e("When running external command, expand tilde when pass back-quoted word"),o(t)])]),n("li",null,[e("stevenxxiu created "),n("a",eo,[e("fix: set `repl_buffer_state` to the REPL buffer after the `pre_execut…"),o(t)])]),n("li",null,[e("hyiltiz created "),n("a",no,[e("Fix nu build script since for loops are stateful now"),o(t)])]),n("li",null,[e("friedow created "),n("a",to,[e("from ssv --aligned-columns should separate lines by character index instead of byte index"),o(t)])]),n("li",null,[e("kubouch created "),n("a",oo,[e("Disable alias recursion (for real)"),o(t)])]),n("li",null,[e("dandavison created "),n("a",lo,[e("Short redirection syntax"),o(t)])]),n("li",null,[e("NotLebedev created "),n("a",so,[e('Revert "Hide 7925"'),o(t)])]),n("li",null,[e("jntrnr created "),n("a",ro,[e("parser: Add cell path literal syntax"),o(t)]),e(", and "),n("a",ao,[e("parser: Fix panic that happens when you type a single "),ho,o(t)]),e(", and "),n("a",io,[e("Fix CI tests that landed after no-implicit-echo"),o(t)]),e(", and "),n("a",uo,[e("Fix parse of def with paren params"),o(t)]),e(", and "),n("a",co,[e("Escape will now escape paths with '=' in them"),o(t)]),e(", and "),n("a",po,[e("Start grouping parsing of values better"),o(t)])]),n("li",null,[e("amtoine created "),n("a",_o,[e("REFACTOR: put all the standard library in "),mo,o(t)]),e(", and "),n("a",bo,[e("DOC: make the README of the standard library clearer"),o(t)]),e(", and "),n("a",fo,[e("FEATURE: add a pretty output to "),go,o(t)]),e(", and "),n("a",ko,[e("FEATURE: add "),wo,e(". "),xo,e(" and "),vo,e(" to "),yo,e(" as in "),Ao,o(t)])]),n("li",null,[e("rgwood created "),n("a",qo,[e("Add "),No,e(" flag back to "),Ro,e(" and "),To,o(t)]),e(", and "),n("a",So,[e("Optional members in cell paths: Attempt 2"),o(t)])]),n("li",null,[e("bgeron created "),n("a",Eo,[e("Exit successfully from "),Fo,e(" for compatibility with halp"),o(t)])]),n("li",null,[e("hustcer created "),n("a",Io,[e("Fix docs building error caused by missing end tag"),o(t)])]),n("li",null,[e("WindSoilder created "),n("a",$o,[e('Revert "Throw out error if external command in subexpression is failed to run (#8204)"'),o(t)]),e(", and "),n("a",jo,[e("make better usage of error value in "),Bo,e(" block"),o(t)]),e(", and "),n("a",Co,[e("Restrict closure expression to be something like "),Oo,o(t)]),e(", and "),n("a",Wo,[e("make "),Do,e(" generate helpful error when condition have an issue"),o(t)])]),n("li",null,[e("lucperkins created "),n("a",Uo,[e("Add char --list example to char command docs"),o(t)])]),n("li",null,[e("presidento created "),n("a",Mo,[e("Make assert eq, assert ne consistent with ==, != operators"),o(t)]),e(", and "),n("a",zo,[e("standard library: add log commands"),o(t)]),e(", and "),n("a",Lo,[e("stdlib: add test discovery, extract test files"),o(t)])]),n("li",null,[e("nicokosi created "),n("a",Po,[e("docs: Use capital letters for CSV and JSON acronyms"),o(t)])]),n("li",null,[e("dependabot[bot] created "),n("a",Vo,[e("Bump mockito from 0.32.5 to 1.0.0"),o(t)])]),n("li",null,[e("dandavison created "),n("a",Ho,[e("SQL-style join command for Nushell tables"),o(t)])]),n("li",null,[e("mdeville created "),n("a",Jo,[e("Additional flags for commands "),Xo,e(" and "),Yo,o(t)])]),n("li",null,[e("kubouch created "),n("a",Qo,[e("Add proptest regression"),o(t)])]),n("li",null,[e("uaeio created "),n("a",Go,[e("Decode and Encode hex"),o(t)])]),n("li",null,[e("fdncred created "),n("a",Ko,[e("enable error reporting from enable_vt_processing"),o(t)])]),n("li",null,[e("initinll created "),n("a",Zo,[e("Added fix for bug #8278 to read tag values from YAML files"),o(t)])]),n("li",null,[e("Sygmei created "),n("a",el,[e("fix: fixed typo and improved Value TypeMismatch exceptions"),o(t)])]),n("li",null,[e("stevenxxiu created "),n("a",nl,[e("feat: add a "),tl,e(" hook"),o(t)]),e(", and "),n("a",ol,[e("fix: fix "),ll,e(" when called with no arguments"),o(t)])]),n("li",null,[e("StevenDoesStuffs created "),n("a",sl,[e("Allow NU_LIBS_DIR and friends to be const"),o(t)])]),n("li",null,[e("NotLebedev created "),n("a",rl,[e("Disable pipeline echo"),o(t)])]),n("li",null,[e("alesito85 created "),n("a",al,[e("Ls symlink fix"),o(t)])])]),hl,n("ul",null,[n("li",null,[e("fdncred created "),n("a",il,[e("fix "),ul,e(" when it's used in variable name"),o(t)])])]),cl,n("ul",null,[n("li",null,[e("pingiun created "),n("a",pl,[e("Remove mention of 'env' command in environment.md"),o(t)]),e(", and "),n("a",dl,[e("Remove old 'env' command from configuration section"),o(t)])]),n("li",null,[e("hustcer created "),n("a",_l,[e("fix #850, make "),ml,e(" work for nu v0.77.2+"),o(t)]),e(", and "),n("a",bl,[e("Update plugin docs for v0.77"),o(t)])]),n("li",null,[e("amtoine created "),n("a",fl,[e("add a note about better "),gl,o(t)]),e(", and "),n("a",kl,[e("add #8366 to the release notes"),o(t)]),e(", and "),n("a",wl,[e('add a note about "value / description" completion'),o(t)])]),n("li",null,[e("fdncred created "),n("a",xl,[e("change "),vl,e(" to "),yl,o(t)]),e(", and "),n("a",Al,[e("show the list of combined keybinding modifiers"),o(t)])]),n("li",null,[e("stevenxxiu created "),n("a",ql,[e("feat: docs on the "),Nl,e(" hook"),o(t)])]),n("li",null,[e("presidento created "),n("a",Rl,[e("Add chapter about testing in Nushell"),o(t)])]),n("li",null,[e("petrisch created "),n("a",Tl,[e("DE translation for command_signature"),o(t)]),e(", and "),n("a",Sl,[e("DE translation for overlays"),o(t)])]),n("li",null,[e("thomasgoulet created "),n("a",El,[e("Add context aware custom completions to the book"),o(t)])]),n("li",null,[e("alurm created "),n("a",Fl,[e("Fix typos in book/stdout_stderr_exit_codes.md"),o(t)])]),n("li",null,[e("aidalgol created "),n("a",Il,[e('Add "Coming from Bash" entries for discarding command output'),o(t)])])]),$l,n("ul",null,[n("li",null,[e("fdncred created "),n("a",jl,[e("replace occurences of "),Bl,e(" with "),Cl,o(t)]),e(", and "),n("a",Ol,[e("update to new nushell syntax"),o(t)]),e(", and "),n("a",Wl,[e("update script syntax to match the latest nushell"),o(t)]),e(", and "),n("a",Dl,[e("Update CODEOWNERS"),o(t)]),e(", and "),n("a",Ul,[e("updated some scripts to support the latest changes in 0.77.1"),o(t)])]),n("li",null,[e("fj0r created "),n("a",Ml,[e("add parameters default value to just's completion and "),zl,e(" for shortcut"),o(t)]),e(", and "),n("a",Ll,[e("dp for "),Pl,e(" support docker and podman"),o(t)])]),n("li",null,[e("WindSoilder created "),n("a",Vl,[e("Replace "),Hl,e(" with "),Jl,o(t)]),e(", and "),n("a",Xl,[e("fix conda script"),o(t)])]),n("li",null,[e("jntrnr created "),n("a",Yl,[e("Update TWiN and since last release to 0.78"),o(t)])]),n("li",null,[e("lesves created "),n("a",Ql,[e("Removed "),Gl,e(", it is now built-in"),o(t)])]),n("li",null,[e("ankitgahlyan created "),n("a",Kl,[e("typo"),o(t)])]),n("li",null,[e("spitfire05 created "),n("a",Zl,[e("Add gpsup, glo, git_current_branch"),o(t)]),e(", and "),n("a",es,[e("Add "),ns,e(" alias; add missing "),ts,e(" function"),o(t)])]),n("li",null,[e("davidlattimore created "),n("a",os,[e("git-completions: Add completions for more subcommands"),o(t)])]),n("li",null,[e("Hofer-Julian created "),n("a",ls,[e("Add CODEOWNERS file"),o(t)]),e(", and "),n("a",ss,[e("conda: Disable prompt via env var instead of flag"),o(t)])]),n("li",null,[e("sgasse created "),n("a",rs,[e("custom-completions: git: Include remote branches"),o(t)])]),n("li",null,[e("amtoine created "),n("a",as,[e("FIX: define a "),hs,e(" function to "),is,e(" the themes modules"),o(t)])]),n("li",null,[e("sholderbach created "),n("a",us,[e("Fix "),cs,e(" script"),o(t)])])]),ps,n("ul",null,[n("li",null,[e("sholderbach created "),n("a",ds,[e("Bump version for "),_s,e(" release"),o(t)])]),n("li",null,[e("fdncred created "),n("a",ms,[e("show the ability to have multiple modifiers"),o(t)])]),n("li",null,[e("Hofer-Julian created "),n("a",bs,[e("Check typos in CI"),o(t)])]),n("li",null,[e("jaudiger created "),n("a",fs,[e("Add const to some new functions."),o(t)]),e(", and "),n("a",gs,[e("Set MSRV to 1.62.1"),o(t)])]),n("li",null,[e("ryanwhitehouse created "),n("a",ks,[e("Allow multi byte characters as the marker without panicking"),o(t)])])])])}const As=s(u,[["render",ws],["__file","2023-04-04-nushell_0_78.html.vue"]]);export{As as default};
