import{_ as s,u as n,o as r,c as o,a as e,t,d as c,e as i}from"./app.43db386a.js";const l={computed:{frontmatter(){return n().value}}},p={id:"frontmatter-title",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=c(),h={style:{"white-space":"pre-wrap"}},m=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; cumulative (type) --reverse</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>type</code>: rolling operation</li><li><code>--reverse</code>: Reverse cumulative calculation</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Cumulative sum for a series</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">|</span> to-df <span class="token operator">|</span> cumulative <span class="token function">sum</span>
</code></pre></div>`,7);function _(f,v,g,k,x,a){return r(),o("div",null,[e("h1",p,[u,d,e("code",null,t(a.frontmatter.title),1)]),e("div",h,t(a.frontmatter.usage),1),m])}var y=s(l,[["render",_],["__file","_cumulative.html.vue"]]);export{y as default};
