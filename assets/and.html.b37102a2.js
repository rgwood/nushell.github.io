import{_ as o,z as p,A as r,X as a,C as n,D as e,a6 as t}from"./framework.3d018c9f.js";const c={},l={id:"frontmatter-title-for-database",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-database","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=t(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; and (where)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>where</code>: Where expression on the table</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Selects a column from a database with an AND clause</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> db.sqlite
    <span class="token operator">|</span> from table table_1
    <span class="token operator">|</span> <span class="token keyword">select</span> a
    <span class="token operator">|</span> where <span class="token punctuation">((</span>field a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> and <span class="token punctuation">((</span>field b<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> describe
</code></pre></div><p>Creates a AND clause combined with an expression AND</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> db.sqlite
    <span class="token operator">|</span> from table table_1
    <span class="token operator">|</span> <span class="token keyword">select</span> a
    <span class="token operator">|</span> where <span class="token variable"><span class="token punctuation">((</span>field a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">|</span> and <span class="token punctuation">((</span>field a<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">))</span></span>
    <span class="token operator">|</span> and <span class="token punctuation">((</span>field b<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> describe
</code></pre></div>`,9),h={id:"frontmatter-title-for-db-expression",tabindex:"-1"},k=a("a",{class:"header-anchor",href:"#frontmatter-title-for-db-expression","aria-hidden":"true"},"#",-1),b={class:"command-title"},m=t(`<h2 id="signature-1" tabindex="-1"><a class="header-anchor" href="#signature-1" aria-hidden="true">#</a> Signature</h2><p><code>&gt; and (and)</code></p><h2 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h2><ul><li><code>and</code>: AND expression</li></ul><h2 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h2><p>Creates an AND expression</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">(</span>field a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">|</span> and <span class="token punctuation">((</span>field a<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">|</span> into nu
</code></pre></div>`,7);function f(s,g){return p(),r("div",null,[a("h1",l,[i,n(),a("code",null,e(s.$frontmatter.title),1),n(" for database")]),a("div",d,e(s.$frontmatter.database),1),u,a("h1",h,[k,n(),a("code",null,e(s.$frontmatter.title),1),n(" for db-expression")]),a("div",b,e(s.$frontmatter.db_expression),1),m])}const x=o(c,[["render",f],["__file","and.html.vue"]]);export{x as default};
