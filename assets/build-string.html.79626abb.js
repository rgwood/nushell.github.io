import{_ as r,z as n,A as i,X as a,C as s,D as t,a6 as o}from"./framework.3d018c9f.js";const d={},l={id:"frontmatter-title-for-strings",tabindex:"-1"},c=a("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),p={class:"command-title"},h=o(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; build-string ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: list of string</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Builds a string from letters a b c</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> build-string a b c
</code></pre></div><p>Builds a string from subexpression separating words with spaces</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> build-string $<span class="token string">&quot;(1 + 2)&quot;</span> <span class="token operator">=</span> one <span class="token string">&#39; &#39;</span> plus <span class="token string">&#39; &#39;</span> two
</code></pre></div>`,9);function g(e,u){return n(),i("div",null,[a("h1",l,[c,s(),a("code",null,t(e.$frontmatter.title),1),s(" for strings")]),a("div",p,t(e.$frontmatter.strings),1),h])}const m=r(d,[["render",g],["__file","build-string.html.vue"]]);export{m as default};
