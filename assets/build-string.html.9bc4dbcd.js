import{_ as r,o as n,c as i,a as e,t as a,d as t,e as o}from"./app.b798d81c.js";const d={},c={id:"frontmatter-title-for-strings",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),h=t(),p=t(" for strings"),g={class:"command-title"},u=o(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; build-string ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: list of string</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Builds a string from letters a b c</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> build-string a b c
</code></pre></div><p>Builds a string from subexpression separating words with spaces</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> build-string $<span class="token string">&quot;(1 + 2)&quot;</span> <span class="token operator">=</span> one <span class="token string">&#39; &#39;</span> plus <span class="token string">&#39; &#39;</span> two
</code></pre></div>`,9);function _(s,f){return n(),i("div",null,[e("h1",c,[l,h,e("code",null,a(s.$frontmatter.title),1),p]),e("div",g,a(s.$frontmatter.strings),1),u])}const b=r(d,[["render",_],["__file","build-string.html.vue"]]);export{b as default};
