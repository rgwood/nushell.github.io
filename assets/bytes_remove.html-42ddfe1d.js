import{_ as t,p,q as o,Q as n,t as s,v as e,a1 as c}from"./framework-344bb0e4.js";const r={},l={id:"frontmatter-title-for-bytes",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#frontmatter-title-for-bytes","aria-hidden":"true"},"#",-1),i={class:"command-title"},k=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; bytes remove (pattern) ...rest --end --all</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>pattern</code>: the pattern to find</li><li><code>...rest</code>: for a data structure input, remove bytes from data at the given cell paths</li><li><code>--end</code> <code>(-e)</code>: remove from end of binary</li><li><code>--all</code> <code>(-a)</code>: remove occurrences of finding binary</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Remove contents</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 0x<span class="token punctuation">[</span><span class="token number">10</span> AA FF AA FF<span class="token punctuation">]</span> <span class="token operator">|</span> bytes remove 0x<span class="token punctuation">[</span><span class="token number">10</span> AA<span class="token punctuation">]</span>
Length: <span class="token number">3</span> <span class="token punctuation">(</span>0x3<span class="token punctuation">)</span> bytes <span class="token operator">|</span> printable whitespace ascii_other non_ascii
00000000:   ff aa ff                                             ×××

</code></pre></div><p>Remove all occurrences of find binary</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 0x<span class="token punctuation">[</span><span class="token number">10</span> AA <span class="token number">10</span> BB <span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">|</span> bytes remove <span class="token parameter variable">-a</span> 0x<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
Length: <span class="token number">2</span> <span class="token punctuation">(</span>0x2<span class="token punctuation">)</span> bytes <span class="token operator">|</span> printable whitespace ascii_other non_ascii
00000000:   aa bb                                                ××

</code></pre></div><p>Remove occurrences of find binary from end</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 0x<span class="token punctuation">[</span><span class="token number">10</span> AA <span class="token number">10</span> BB CC AA <span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">|</span> bytes remove <span class="token parameter variable">-e</span> 0x<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>
Length: <span class="token number">6</span> <span class="token punctuation">(</span>0x6<span class="token punctuation">)</span> bytes <span class="token operator">|</span> printable whitespace ascii_other non_ascii
00000000:   <span class="token number">10</span> aa <span class="token number">10</span> bb  cc aa                                   •×•×××

</code></pre></div><p>Remove all occurrences of find binary in table</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>ColA ColB ColC<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>0x<span class="token punctuation">[</span><span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span><span class="token punctuation">]</span> 0x<span class="token punctuation">[</span><span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span><span class="token punctuation">]</span> 0x<span class="token punctuation">[</span><span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> bytes remove 0x<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> ColA ColC
╭───┬──────────┬──────────────┬──────────────╮
│ <span class="token comment"># │   ColA   │     ColB     │     ColC     │</span>
├───┼──────────┼──────────────┼──────────────┤
│ <span class="token number">0</span> │ <span class="token punctuation">[</span><span class="token number">18</span>, <span class="token number">19</span><span class="token punctuation">]</span> │ <span class="token punctuation">[</span><span class="token number">20</span>, <span class="token number">21</span>, <span class="token number">22</span><span class="token punctuation">]</span> │ <span class="token punctuation">[</span><span class="token number">23</span>, <span class="token number">24</span>, <span class="token number">25</span><span class="token punctuation">]</span> │
╰───┴──────────┴──────────────┴──────────────╯

</code></pre></div>`,13);function d(a,b){return p(),o("div",null,[n("h1",l,[u,s(),n("code",null,e(a.$frontmatter.title),1),s(" for bytes")]),n("div",i,e(a.$frontmatter.bytes),1),k])}const h=t(r,[["render",d],["__file","bytes_remove.html.vue"]]);export{h as default};
