import{_ as s,u as n,o as r,c as o,a as e,t,d as c,e as l}from"./app.43db386a.js";const p={computed:{frontmatter(){return n().value}}},i={id:"frontmatter-title",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),h=c(),u={style:{"white-space":"pre-wrap"}},m=l(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; collect (block)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>block</code>: the block to run once the stream is collected</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Use the second value in the stream</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token operator">|</span> collect <span class="token punctuation">{</span> <span class="token operator">|</span>x<span class="token operator">|</span> <span class="token builtin class-name">echo</span> <span class="token variable">$x</span>.1 <span class="token punctuation">}</span>
</code></pre></div>`,7);function _(k,f,b,x,g,a){return r(),o("div",null,[e("h1",i,[d,h,e("code",null,t(a.frontmatter.title),1)]),e("div",u,t(a.frontmatter.usage),1),m])}var B=s(p,[["render",_],["__file","collect.html.vue"]]);export{B as default};
