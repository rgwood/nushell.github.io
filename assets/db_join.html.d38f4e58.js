import{_ as o,u as r,o as s,c as i,a as e,t as a,d,e as n}from"./app.43db386a.js";const c={computed:{frontmatter(){return r().value}}},l={id:"frontmatter-title",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),u=d(),p={style:{"white-space":"pre-wrap"}},_=n(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; db join (table) (on) --as --left --right --outer --cross</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>table</code>: table or derived table to join on</li><li><code>on</code>: expression to join tables</li><li><code>--as {string}</code>: Alias for the selected join</li><li><code>--left</code>: left outer join</li><li><code>--right</code>: right outer join</li><li><code>--outer</code>: full outer join</li><li><code>--cross</code>: cross join</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span>
</code></pre></div>`,6);function f(m,g,b,x,j,t){return s(),i("div",null,[e("h1",l,[h,u,e("code",null,a(t.frontmatter.title),1)]),e("div",p,a(t.frontmatter.usage),1),_])}var k=o(c,[["render",f],["__file","db_join.html.vue"]]);export{k as default};
