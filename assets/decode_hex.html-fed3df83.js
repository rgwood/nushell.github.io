import{_ as n,p as o,q as r,Q as a,t as s,v as t,a1 as c}from"./framework-344bb0e4.js";const d={},p={id:"frontmatter-title-for-formats",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-formats","aria-hidden":"true"},"#",-1),l={class:"command-title"},h=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; decode hex ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: For a data structure input, decode data at the given cell paths</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Hex decode a value and output as binary</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;0102030A0a0B&#39;</span> <span class="token operator">|</span> decode hex
Length: <span class="token number">6</span> <span class="token punctuation">(</span>0x6<span class="token punctuation">)</span> bytes <span class="token operator">|</span> printable whitespace ascii_other non_ascii
00000000:   01 02 03 0a  0a 0b                                   •••__•

</code></pre></div><p>Whitespaces are allowed to be between hex digits</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;01 02  03 0A 0a 0B&#39;</span> <span class="token operator">|</span> decode hex
Length: <span class="token number">6</span> <span class="token punctuation">(</span>0x6<span class="token punctuation">)</span> bytes <span class="token operator">|</span> printable whitespace ascii_other non_ascii
00000000:   01 02 03 0a  0a 0b                                   •••__•

</code></pre></div>`,9);function u(e,_){return o(),r("div",null,[a("h1",p,[i,s(),a("code",null,t(e.$frontmatter.title),1),s(" for formats")]),a("div",l,t(e.$frontmatter.formats),1),h])}const f=n(d,[["render",u],["__file","decode_hex.html.vue"]]);export{f as default};
