import{_ as r,z as o,A as c,X as a,C as s,D as t,a6 as n}from"./framework.3d018c9f.js";const d={},i={id:"frontmatter-title-for-core",tabindex:"-1"},p=a("a",{class:"header-anchor",href:"#frontmatter-title-for-core","aria-hidden":"true"},"#",-1),l={class:"command-title"},h=n(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; describe </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Describe the type of a string</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;hello&#39;</span> <span class="token operator">|</span> describe
</code></pre></div>`,5),u={id:"frontmatter-title-for-database",tabindex:"-1"},f=a("a",{class:"header-anchor",href:"#frontmatter-title-for-database","aria-hidden":"true"},"#",-1),m={class:"command-title"},b=n(`<h2 id="signature-1" tabindex="-1"><a class="header-anchor" href="#signature-1" aria-hidden="true">#</a> Signature</h2><p><code>&gt; describe </code></p><h2 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h2><p>Describe SQLite database constructed query</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> foo.db <span class="token operator">|</span> from table table_1 <span class="token operator">|</span> <span class="token keyword">select</span> col_1 <span class="token operator">|</span> describe
</code></pre></div>`,5),_={id:"frontmatter-title-for-dataframe",tabindex:"-1"},g=a("a",{class:"header-anchor",href:"#frontmatter-title-for-dataframe","aria-hidden":"true"},"#",-1),k={class:"command-title"},x=n(`<h2 id="signature-2" tabindex="-1"><a class="header-anchor" href="#signature-2" aria-hidden="true">#</a> Signature</h2><p><code>&gt; describe --quantiles</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>--quantiles {table}</code>: optional quantiles for describe</li></ul><h2 id="examples-2" tabindex="-1"><a class="header-anchor" href="#examples-2" aria-hidden="true">#</a> Examples</h2><p>dataframe description</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span> <span class="token operator">|</span> describe
</code></pre></div>`,7);function v(e,S){return o(),c("div",null,[a("h1",i,[p,s(),a("code",null,t(e.$frontmatter.title),1),s(" for core")]),a("div",l,t(e.$frontmatter.core),1),h,a("h1",u,[f,s(),a("code",null,t(e.$frontmatter.title),1),s(" for database")]),a("div",m,t(e.$frontmatter.database),1),b,a("h1",_,[g,s(),a("code",null,t(e.$frontmatter.title),1),s(" for dataframe")]),a("div",k,t(e.$frontmatter.dataframe),1),x])}const q=r(d,[["render",v],["__file","describe.html.vue"]]);export{q as default};
