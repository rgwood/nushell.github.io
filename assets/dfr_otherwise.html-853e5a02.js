import{_ as t,p,q as o,Q as n,t as a,v as e,a1 as c}from"./framework-344bb0e4.js";const r={},l={id:"frontmatter-title-for-expression",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#frontmatter-title-for-expression","aria-hidden":"true"},"#",-1),k={class:"command-title"},i=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; dfr otherwise </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Create a when conditions</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> dfr when <span class="token punctuation">((</span>dfr col a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">4</span> <span class="token operator">|</span> dfr otherwise <span class="token number">5</span>

</code></pre></div><p>Create a when conditions</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> dfr when <span class="token punctuation">((</span>dfr col a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">4</span> <span class="token operator">|</span> dfr when <span class="token punctuation">((</span>dfr col a<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">6</span> <span class="token operator">|</span> dfr otherwise <span class="token number">0</span>

</code></pre></div><p>Create a new column for the dataframe</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
   <span class="token operator">|</span> dfr into-lazy
   <span class="token operator">|</span> dfr with-column <span class="token punctuation">(</span>
    dfr when <span class="token punctuation">((</span>dfr col a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">4</span> <span class="token operator">|</span> dfr otherwise <span class="token number">5</span> <span class="token operator">|</span> dfr as c
     <span class="token punctuation">)</span>
   <span class="token operator">|</span> dfr with-column <span class="token punctuation">(</span>
    dfr when <span class="token punctuation">((</span>dfr col a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token number">10</span> <span class="token operator">|</span> dfr when <span class="token punctuation">((</span>dfr col a<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">6</span> <span class="token operator">|</span> dfr otherwise <span class="token number">0</span> <span class="token operator">|</span> dfr as d
     <span class="token punctuation">)</span>
   <span class="token operator">|</span> dfr collect
╭───┬───┬───┬───┬────╮
│ <span class="token comment"># │ a │ b │ c │ d  │</span>
├───┼───┼───┼───┼────┤
│ <span class="token number">0</span> │ <span class="token number">6</span> │ <span class="token number">2</span> │ <span class="token number">4</span> │ <span class="token number">10</span> │
│ <span class="token number">1</span> │ <span class="token number">1</span> │ <span class="token number">4</span> │ <span class="token number">5</span> │  <span class="token number">6</span> │
│ <span class="token number">2</span> │ <span class="token number">4</span> │ <span class="token number">1</span> │ <span class="token number">4</span> │  <span class="token number">0</span> │
╰───┴───┴───┴───┴────╯

</code></pre></div>`,9);function d(s,m){return p(),o("div",null,[n("h1",l,[u,a(),n("code",null,e(s.$frontmatter.title),1),a(" for expression")]),n("div",k,e(s.$frontmatter.expression),1),i])}const b=t(r,[["render",d],["__file","dfr_otherwise.html.vue"]]);export{b as default};
