import{_ as e,M as t,p as o,q as p,Q as a,t as n,N as r,a1 as i}from"./framework-344bb0e4.js";const c={},l=a("h1",{id:"direnv",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#direnv","aria-hidden":"true"},"#"),n(" Direnv")],-1),u={href:"https://direnv.net",target:"_blank",rel:"noopener noreferrer"},d=i(`<hr><h3 id="configuring-direnv" tabindex="-1"><a class="header-anchor" href="#configuring-direnv" aria-hidden="true">#</a> Configuring direnv</h3><p>To make direnv work with nushell the way it does with other shells, we can use the &quot;hooks&quot; functionality:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>let-env config <span class="token operator">=</span> <span class="token punctuation">{</span>
  hooks: <span class="token punctuation">{</span>
    pre_prompt: <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token operator">||</span>
      <span class="token builtin class-name">let</span> direnv <span class="token operator">=</span> <span class="token punctuation">(</span>direnv <span class="token builtin class-name">export</span> json <span class="token operator">|</span> from json<span class="token punctuation">)</span>
      <span class="token builtin class-name">let</span> direnv <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$direnv</span> <span class="token operator">|</span> length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> <span class="token variable">$direnv</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span>
      <span class="token variable">$direnv</span> <span class="token operator">|</span> load-env
    <span class="token punctuation">}</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>With that configuration in place, direnv should now work with nushell.</p>`,5);function k(h,v){const s=t("ExternalLinkIcon");return o(),p("div",null,[l,a("p",null,[n("Many people use "),a("a",u,[n("direnv"),r(s)]),n(" to load an environment upon entering a directory as well as unloading it when exiting the directory. Configuring direnv to work with nushell requires nushell version 0.66 or later.")]),d])}const f=e(c,[["render",k],["__file","direnv.html.vue"]]);export{f as default};
