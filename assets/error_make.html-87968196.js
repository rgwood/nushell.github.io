import{_ as e,p as o,q as p,Q as n,t as a,v as t,a1 as c}from"./framework-344bb0e4.js";const r={},u={id:"frontmatter-title-for-core",tabindex:"-1"},l=n("a",{class:"header-anchor",href:"#frontmatter-title-for-core","aria-hidden":"true"},"#",-1),i={class:"command-title"},m=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; error make (error_struct) --unspanned</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>error_struct</code>: the error to create</li><li><code>--unspanned</code> <code>(-u)</code>: remove the origin label from the error</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Create a simple custom error</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> error <span class="token function">make</span> <span class="token punctuation">{</span>msg: <span class="token string">&quot;my custom error message&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span>msg: my custom error message, debug: GenericError<span class="token punctuation">(</span><span class="token string">&quot;my custom error message&quot;</span>, <span class="token string">&quot;&quot;</span>, None, None, <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>, raw: GenericError<span class="token punctuation">(</span><span class="token string">&quot;my custom error message&quot;</span>, <span class="token string">&quot;&quot;</span>, None, None, <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre></div><p>Create a more complex custom error</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> error <span class="token function">make</span> <span class="token punctuation">{</span>
        msg: <span class="token string">&quot;my custom error message&quot;</span>
        label: <span class="token punctuation">{</span>
            text: <span class="token string">&quot;my custom label text&quot;</span>  <span class="token comment"># not mandatory unless $.label exists</span>
            start: <span class="token number">123</span>  <span class="token comment"># not mandatory unless $.label.end is set</span>
            end: <span class="token number">456</span>  <span class="token comment"># not mandatory unless $.label.start is set</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">{</span>msg: my custom error message, debug: GenericError<span class="token punctuation">(</span><span class="token string">&quot;my custom error message&quot;</span>, <span class="token string">&quot;my custom label text&quot;</span>, Some<span class="token punctuation">(</span>Span <span class="token punctuation">{</span> start: <span class="token number">123</span>, end: <span class="token number">456</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>, None, <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>, raw: GenericError<span class="token punctuation">(</span><span class="token string">&quot;my custom error message&quot;</span>, <span class="token string">&quot;my custom label text&quot;</span>, Some<span class="token punctuation">(</span>Span <span class="token punctuation">{</span> start: <span class="token number">123</span>, end: <span class="token number">456</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>, None, <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre></div><p>Create a custom error for a custom command that shows the span of the argument</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> def foo <span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token builtin class-name">let</span> span <span class="token operator">=</span> <span class="token punctuation">(</span>metadata <span class="token variable">$x</span><span class="token punctuation">)</span>.span<span class="token punctuation">;</span>
        error <span class="token function">make</span> <span class="token punctuation">{</span>
            msg: <span class="token string">&quot;this is fishy&quot;</span>
            label: <span class="token punctuation">{</span>
                text: <span class="token string">&quot;fish right here&quot;</span>
                start: <span class="token variable">$span</span>.start
                end: <span class="token variable">$span</span>.end
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre></div>`,11);function k(s,d){return o(),p("div",null,[n("h1",u,[l,a(),n("code",null,t(s.$frontmatter.title),1),a(" for core")]),n("div",i,t(s.$frontmatter.core),1),m])}const h=e(r,[["render",k],["__file","error_make.html.vue"]]);export{h as default};
