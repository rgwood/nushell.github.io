import{_ as n,z as o,A as r,X as a,C as t,D as s,a6 as c}from"./framework.3d018c9f.js";const i={},p={id:"frontmatter-title-for-core",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#frontmatter-title-for-core","aria-hidden":"true"},"#",-1),l={class:"command-title"},u=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; export use (pattern)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>pattern</code>: import pattern</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><div class="language-text" data-ext="text"><pre class="language-text"><code>This command is a parser keyword. For details, check:
  https://www.nushell.sh/book/thinking_in_nu.html
</code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Re-export a command from another module</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> module spam <span class="token punctuation">{</span> <span class="token builtin class-name">export</span> def foo <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token string">&quot;foo&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    module eggs <span class="token punctuation">{</span> <span class="token builtin class-name">export</span> use spam foo <span class="token punctuation">}</span>
    use eggs foo
    foo

</code></pre></div>`,9);function h(e,m){return o(),r("div",null,[a("h1",p,[d,t(),a("code",null,s(e.$frontmatter.title),1),t(" for core")]),a("div",l,s(e.$frontmatter.core),1),u])}const _=n(i,[["render",h],["__file","export_use.html.vue"]]);export{_ as default};
