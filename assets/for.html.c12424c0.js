import{_ as t,o,c as r,a,t as s,d as n,e as c}from"./app.d8025251.js";const p={},l={id:"frontmatter-title-for-core",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-core","aria-hidden":"true"},"#",-1),d=n(),h=n(" for core"),u={class:"command-title"},k=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; for (var_name) (range) (block) --numbered</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>var_name</code>: name of the looping variable</li><li><code>range</code>: range of the loop</li><li><code>block</code>: the block to run</li><li><code>--numbered</code>: returned a numbered item ($it.index and $it.item)</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><div class="language-text ext-text"><pre class="language-text"><code>This command is a parser keyword. For details, check:
  https://www.nushell.sh/book/thinking_in_nu.html
</code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Echo the square of each integer</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token for-or-select variable">x</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token variable">$x</span> * <span class="token variable">$x</span> <span class="token punctuation">}</span>
</code></pre></div><p>Work with elements of a range</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token variable">$x</span> <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span> <span class="token punctuation">{</span> <span class="token variable">$x</span> <span class="token punctuation">}</span>
</code></pre></div><p>Number each item and echo a message</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token variable">$it</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;bob&#39;</span> <span class="token string">&#39;fred&#39;</span><span class="token punctuation">]</span> <span class="token parameter variable">--numbered</span> <span class="token punctuation">{</span> $<span class="token string">&quot;(<span class="token variable">$it</span>.index) is (<span class="token variable">$it</span>.item)&quot;</span> <span class="token punctuation">}</span>
</code></pre></div>`,13);function m(e,b){return o(),r("div",null,[a("h1",l,[i,d,a("code",null,s(e.$frontmatter.title),1),h]),a("div",u,s(e.$frontmatter.core),1),k])}const f=t(p,[["render",m],["__file","for.html.vue"]]);export{f as default};
