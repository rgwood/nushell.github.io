import{_ as n,p as r,q as o,Q as a,t as s,v as t,a1 as i}from"./framework-344bb0e4.js";const c={},l={id:"frontmatter-title-for-strings",tabindex:"-1"},p=a("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; format filesize (format value) ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>format value</code>: the format into which convert the file sizes</li><li><code>...rest</code>: For a data structure input, format filesizes at the given cell paths</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Convert the size column to KB</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">format</span> filesize KB size

</code></pre></div><p>Convert the apparent column to B</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">du</span> <span class="token operator">|</span> <span class="token function">format</span> filesize B apparent

</code></pre></div><p>Convert the size data to MB</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> 4Gb <span class="token operator">|</span> <span class="token function">format</span> filesize MB
<span class="token number">4000.0</span> MB
</code></pre></div>`,11);function f(e,u){return r(),o("div",null,[a("h1",l,[p,s(),a("code",null,t(e.$frontmatter.title),1),s(" for strings")]),a("div",d,t(e.$frontmatter.strings),1),h])}const g=n(c,[["render",f],["__file","format_filesize.html.vue"]]);export{g as default};
