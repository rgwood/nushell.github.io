import{_ as o,o as p,c,a,t as n,d as t,e}from"./app.b798d81c.js";const r={},l={id:"frontmatter-title-for-database",tabindex:"-1"},u=a("a",{class:"header-anchor",href:"#frontmatter-title-for-database","aria-hidden":"true"},"#",-1),i=t(),d=t(" for database"),k={class:"command-title"},h=e(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; group-by ...select</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...select</code>: Select expression(s) on the table</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>groups by column a and calculates the max</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> db.sqlite
    <span class="token operator">|</span> from table table_a
    <span class="token operator">|</span> <span class="token keyword">select</span> <span class="token punctuation">(</span>fn max a<span class="token punctuation">)</span>
    <span class="token operator">|</span> group-by a
    <span class="token operator">|</span> describe
</code></pre></div><p>groups by column column a and counts records</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> db.sqlite
    <span class="token operator">|</span> from table table_a
    <span class="token operator">|</span> <span class="token keyword">select</span> <span class="token punctuation">(</span>fn count *<span class="token punctuation">)</span>
    <span class="token operator">|</span> group-by a
    <span class="token operator">|</span> describe
</code></pre></div>`,9),b={id:"frontmatter-title-for-default",tabindex:"-1"},m=a("a",{class:"header-anchor",href:"#frontmatter-title-for-default","aria-hidden":"true"},"#",-1),g=t(),f=t(" for default"),_={class:"command-title"},x=e(`<h2 id="signature-1" tabindex="-1"><a class="header-anchor" href="#signature-1" aria-hidden="true">#</a> Signature</h2><p><code>&gt; group-by (grouper)</code></p><h2 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h2><ul><li><code>grouper</code>: the grouper value to use</li></ul><h2 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h2><p>Group items by the &quot;type&quot; column&#39;s values</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> group-by <span class="token builtin class-name">type</span>
</code></pre></div><p>You can also group by raw values by leaving out the argument</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token punctuation">[</span><span class="token string">&#39;1&#39;</span> <span class="token string">&#39;3&#39;</span> <span class="token string">&#39;1&#39;</span> <span class="token string">&#39;3&#39;</span> <span class="token string">&#39;2&#39;</span> <span class="token string">&#39;1&#39;</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> group-by
</code></pre></div>`,9),y={id:"frontmatter-title-for-lazyframe",tabindex:"-1"},v=a("a",{class:"header-anchor",href:"#frontmatter-title-for-lazyframe","aria-hidden":"true"},"#",-1),q=t(),z=t(" for lazyframe"),S={class:"command-title"},$=e(`<h2 id="signature-2" tabindex="-1"><a class="header-anchor" href="#signature-2" aria-hidden="true">#</a> Signature</h2><p><code>&gt; group-by ...Group-by expressions</code></p><h2 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...Group-by expressions</code>: Expression(s) that define the lazy group-by</li></ul><h2 id="examples-2" tabindex="-1"><a class="header-anchor" href="#examples-2" aria-hidden="true">#</a> Examples</h2><p>Group by and perform an aggregation</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token operator">|</span> into <span class="token function">df</span>
    <span class="token operator">|</span> group-by a
    <span class="token operator">|</span> agg <span class="token punctuation">[</span>
        <span class="token punctuation">(</span>col b <span class="token operator">|</span> min <span class="token operator">|</span> as <span class="token string">&quot;b_min&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>col b <span class="token operator">|</span> max <span class="token operator">|</span> as <span class="token string">&quot;b_max&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>col b <span class="token operator">|</span> <span class="token function">sum</span> <span class="token operator">|</span> as <span class="token string">&quot;b_sum&quot;</span><span class="token punctuation">)</span>
     <span class="token punctuation">]</span>
</code></pre></div><p>Group by and perform an aggregation</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token operator">|</span> into lazy
    <span class="token operator">|</span> group-by a
    <span class="token operator">|</span> agg <span class="token punctuation">[</span>
        <span class="token punctuation">(</span>col b <span class="token operator">|</span> min <span class="token operator">|</span> as <span class="token string">&quot;b_min&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>col b <span class="token operator">|</span> max <span class="token operator">|</span> as <span class="token string">&quot;b_max&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span>col b <span class="token operator">|</span> <span class="token function">sum</span> <span class="token operator">|</span> as <span class="token string">&quot;b_sum&quot;</span><span class="token punctuation">)</span>
     <span class="token punctuation">]</span>
    <span class="token operator">|</span> collect
</code></pre></div>`,9);function E(s,G){return p(),c("div",null,[a("h1",l,[u,i,a("code",null,n(s.$frontmatter.title),1),d]),a("div",k,n(s.$frontmatter.database),1),h,a("h1",b,[m,g,a("code",null,n(s.$frontmatter.title),1),f]),a("div",_,n(s.$frontmatter.default),1),x,a("h1",y,[v,q,a("code",null,n(s.$frontmatter.title),1),z]),a("div",S,n(s.$frontmatter.lazyframe),1),$])}const w=o(r,[["render",E],["__file","group-by.html.vue"]]);export{w as default};
