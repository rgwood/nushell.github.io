import{_ as t,u as n,o as r,c,a as e,t as s,d as o,e as d}from"./app.43db386a.js";const i={computed:{frontmatter(){return n().value}}},l={id:"frontmatter-title",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),h=o(),u={style:{"white-space":"pre-wrap"}},b=d(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; hash base64 ...rest --character-set --encode --decode</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: optionally base64 encode / decode data by column paths</li><li><code>--character-set {string}</code>: specify the character rules for encoding the input. Valid values are &#39;standard&#39;, &#39;standard-no-padding&#39;, &#39;url-safe&#39;, &#39;url-safe-no-padding&#39;,&#39;binhex&#39;, &#39;bcrypt&#39;, &#39;crypt&#39;</li><li><code>--encode</code>: encode the input as base64. This is the default behavior if not specified.</li><li><code>--decode</code>: decode the input from base64</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Base64 encode a string with default settings</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;username:password&#39;</span> <span class="token operator">|</span> <span class="token builtin class-name">hash</span> base64
</code></pre></div><p>Base64 encode a string with the binhex character set</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;username:password&#39;</span> <span class="token operator">|</span> <span class="token builtin class-name">hash</span> base64 --character-set binhex --encode
</code></pre></div><p>Base64 decode a value</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;dXNlcm5hbWU6cGFzc3dvcmQ=&#39;</span> <span class="token operator">|</span> <span class="token builtin class-name">hash</span> base64 --decode
</code></pre></div>`,11);function g(m,f,_,k,x,a){return r(),c("div",null,[e("h1",l,[p,h,e("code",null,s(a.frontmatter.title),1)]),e("div",u,s(a.frontmatter.usage),1),b])}var y=t(i,[["render",g],["__file","hash_base64.html.vue"]]);export{y as default};
