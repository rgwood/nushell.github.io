import{_ as t,p as o,q as r,Q as a,t as s,v as n,a1 as p}from"./framework-344bb0e4.js";const c={},l={id:"frontmatter-title-for-default",tabindex:"-1"},u=a("a",{class:"header-anchor",href:"#frontmatter-title-for-default","aria-hidden":"true"},"#",-1),i={class:"command-title"},m=p(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; histogram (column-name) (frequency-column-name) --percentage-type</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>column-name</code>: column name to calc frequency, no need to provide if input is just a list</li><li><code>frequency-column-name</code>: histogram&#39;s frequency column, default to be frequency column output</li><li><code>--percentage-type {string}</code>: percentage calculate method, can be &#39;normalize&#39; or &#39;relative&#39;, in &#39;normalize&#39;, defaults to be &#39;normalize&#39;</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Compute a histogram of file types</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> histogram <span class="token builtin class-name">type</span>

</code></pre></div><p>Compute a histogram for the types of files, with frequency column named freq</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> histogram <span class="token builtin class-name">type</span> freq

</code></pre></div><p>Compute a histogram for a list of numbers</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">|</span> histogram
╭───┬───────┬───────┬──────────┬────────────┬────────────────────────────────────────────────────────────────────╮
│ <span class="token comment"># │ value │ count │ quantile │ percentage │                             frequency                              │</span>
├───┼───────┼───────┼──────────┼────────────┼────────────────────────────────────────────────────────────────────┤
│ <span class="token number">0</span> │     <span class="token number">1</span> │     <span class="token number">2</span> │   <span class="token number">0.6667</span> │ <span class="token number">66.67</span>%     │ ****************************************************************** │
│ <span class="token number">1</span> │     <span class="token number">2</span> │     <span class="token number">1</span> │   <span class="token number">0.3333</span> │ <span class="token number">33.33</span>%     │ *********************************                                  │
╰───┴───────┴───────┴──────────┴────────────┴────────────────────────────────────────────────────────────────────╯

</code></pre></div><p>Compute a histogram for a list of numbers, and percentage is based on the maximum value</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">|</span> histogram --percentage-type relative

</code></pre></div>`,13);function d(e,h){return o(),r("div",null,[a("h1",l,[u,s(),a("code",null,n(e.$frontmatter.title),1),s(" for default")]),a("div",i,n(e.$frontmatter.default),1),m])}const g=t(c,[["render",d],["__file","histogram.html.vue"]]);export{g as default};
