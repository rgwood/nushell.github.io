import{_ as t,p as o,q as p,Q as a,t as e,v as n,a1 as r}from"./framework-344bb0e4.js";const i={},c={id:"frontmatter-title-for-conversions",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-conversions","aria-hidden":"true"},"#",-1),d={class:"command-title"},m=r(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; into datetime ...rest --timezone --offset --format --list</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: for a data structure input, convert data at the given cell paths</li><li><code>--timezone {string}</code>: Specify timezone if the input is a Unix timestamp. Valid options: &#39;UTC&#39; (&#39;u&#39;) or &#39;LOCAL&#39; (&#39;l&#39;)</li><li><code>--offset {int}</code>: Specify timezone by offset from UTC if the input is a Unix timestamp, like &#39;+8&#39;, &#39;-4&#39;</li><li><code>--format {string}</code>: Specify expected format of string input to parse to datetime. Use --list to see options</li><li><code>--list</code> <code>(-l)</code>: Show all possible variables for use in --format flag</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Convert any standard timestamp string to datetime</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;27.02.2021 1:55 pm +0000&#39;</span> <span class="token operator">|</span> into datetime
Sat, <span class="token number">27</span> Feb <span class="token number">2021</span> <span class="token number">13</span>:55:00 +0000 <span class="token punctuation">(</span><span class="token number">2</span> years ago<span class="token punctuation">)</span>
</code></pre></div><p>Convert any standard timestamp string to datetime</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;2021-02-27T13:55:40.2246+00:00&#39;</span> <span class="token operator">|</span> into datetime
Sat, <span class="token number">27</span> Feb <span class="token number">2021</span> <span class="token number">13</span>:55:40 +0000 <span class="token punctuation">(</span><span class="token number">2</span> years ago<span class="token punctuation">)</span>
</code></pre></div><p>Convert non-standard timestamp string to datetime using a custom format</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;20210227_135540+0000&#39;</span> <span class="token operator">|</span> into datetime <span class="token parameter variable">-f</span> <span class="token string">&#39;%Y%m%d_%H%M%S%z&#39;</span>
Sat, <span class="token number">27</span> Feb <span class="token number">2021</span> <span class="token number">13</span>:55:40 +0000 <span class="token punctuation">(</span><span class="token number">2</span> years ago<span class="token punctuation">)</span>
</code></pre></div><p>Convert nanosecond-precision unix timestamp to a datetime with offset from UTC</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">1614434140123456789</span> <span class="token operator">|</span> into datetime <span class="token parameter variable">--offset</span> <span class="token parameter variable">-5</span>
Sat, <span class="token number">27</span> Feb <span class="token number">2021</span> <span class="token number">13</span>:55:40 +0000 <span class="token punctuation">(</span><span class="token number">2</span> years ago<span class="token punctuation">)</span>
</code></pre></div><p>Convert standard (seconds) unix timestamp to a UTC datetime</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">1614434140</span> * 1_000_000_000 <span class="token operator">|</span> into datetime
Sat, <span class="token number">27</span> Feb <span class="token number">2021</span> <span class="token number">13</span>:55:40 +0000 <span class="token punctuation">(</span><span class="token number">2</span> years ago<span class="token punctuation">)</span>
</code></pre></div>`,15);function u(s,k){return o(),p("div",null,[a("h1",c,[l,e(),a("code",null,n(s.$frontmatter.title),1),e(" for conversions")]),a("div",d,n(s.$frontmatter.conversions),1),m])}const g=t(i,[["render",u],["__file","into_datetime.html.vue"]]);export{g as default};
