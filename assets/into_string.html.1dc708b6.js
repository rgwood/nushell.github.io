import{_ as n,u as t,o,c as r,a,t as e,d as p,e as c}from"./app.43db386a.js";const i={computed:{frontmatter(){return t().value}}},l={id:"frontmatter-title",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),g=p(),h={style:{"white-space":"pre-wrap"}},u=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; into string ...rest --decimals</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: column paths to convert to string (for table input)</li><li><code>--decimals {int}</code>: decimal digits to which to round</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>convert decimal to string and round to nearest integer</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">1.7</span> <span class="token operator">|</span> into string -d <span class="token number">0</span>
</code></pre></div><p>convert decimal to string</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">1.7</span> <span class="token operator">|</span> into string -d <span class="token number">1</span>
</code></pre></div><p>convert decimal to string and limit to 2 decimals</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">1.734</span> <span class="token operator">|</span> into string -d <span class="token number">2</span>
</code></pre></div><p>try to convert decimal to string and provide negative decimal points</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">1.734</span> <span class="token operator">|</span> into string -d -2
</code></pre></div><p>convert decimal to string</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token number">4.3</span> <span class="token operator">|</span> into string
</code></pre></div><p>convert string to string</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;1234&#39;</span> <span class="token operator">|</span> into string
</code></pre></div><p>convert boolean to string</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token boolean">true</span> <span class="token operator">|</span> into string
</code></pre></div><p>convert date to string</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">date</span> now <span class="token operator">|</span> into string
</code></pre></div><p>convert filepath to string</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> Cargo.toml <span class="token operator">|</span> get name <span class="token operator">|</span> into string
</code></pre></div><p>convert filesize to string</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> Cargo.toml <span class="token operator">|</span> get size <span class="token operator">|</span> into string
</code></pre></div>`,25);function m(v,k,b,_,f,s){return o(),r("div",null,[a("h1",l,[d,g,a("code",null,e(s.frontmatter.title),1)]),a("div",h,e(s.frontmatter.usage),1),u])}var w=n(i,[["render",m],["__file","into_string.html.vue"]]);export{w as default};
