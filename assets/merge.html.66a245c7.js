import{_ as t,o,c as r,a,t as s,d as n,e as p}from"./app.b798d81c.js";const c={},l={id:"frontmatter-title-for-filters",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-filters","aria-hidden":"true"},"#",-1),u=n(),d=n(" for filters"),h={class:"command-title"},m=p(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; merge (block)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>block</code>: the new value to merge with, or a block that produces it</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><div class="language-text ext-text"><pre class="language-text"><code>You may provide a column structure to merge, or a block
that generates a column structure.

When merging tables, row 0 of the input table is overwritten
with values from row 0 of the provided table, then
repeating this process with row 1, and so on.
</code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Add an &#39;index&#39; column to the input table</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span>a b c<span class="token punctuation">]</span> <span class="token operator">|</span> wrap name <span class="token operator">|</span> merge <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">|</span> wrap index <span class="token punctuation">}</span>
</code></pre></div><p>Merge two records</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span>a: <span class="token number">1</span>, b: <span class="token number">2</span><span class="token punctuation">}</span> <span class="token operator">|</span> merge <span class="token punctuation">{</span>c: <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre></div><p>Merge records, overwriting overlapping values</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span>a: <span class="token number">1</span>, b: <span class="token number">3</span><span class="token punctuation">}</span> <span class="token operator">|</span> merge <span class="token punctuation">{</span> <span class="token punctuation">{</span> b: <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token operator">|</span> merge <span class="token punctuation">{</span> c: <span class="token number">4</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</code></pre></div>`,13);function k(e,g){return o(),r("div",null,[a("h1",l,[i,u,a("code",null,s(e.$frontmatter.title),1),d]),a("div",h,s(e.$frontmatter.filters),1),m])}const f=t(c,[["render",k],["__file","merge.html.vue"]]);export{f as default};
