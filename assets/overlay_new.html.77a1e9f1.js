import{_ as r,u as s,o as n,c as o,a as e,t,d,e as i}from"./app.43db386a.js";const l={computed:{frontmatter(){return s().value}}},c={id:"frontmatter-title",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),p=d(),m={style:{"white-space":"pre-wrap"}},u=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; overlay new (name)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>name</code>: Name of the overlay</li></ul><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><div class="language-text ext-text"><pre class="language-text"><code>The command will first create an empty module, then add it as an overlay.

This command is a parser keyword. For details, check:
  https://www.nushell.sh/book/thinking_in_nushell.html
</code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Create an empty overlay</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> overlay new spam
</code></pre></div>`,9);function _(f,g,x,v,y,a){return n(),o("div",null,[e("h1",c,[h,p,e("code",null,t(a.frontmatter.title),1)]),e("div",m,t(a.frontmatter.usage),1),u])}var b=r(l,[["render",_],["__file","overlay_new.html.vue"]]);export{b as default};
