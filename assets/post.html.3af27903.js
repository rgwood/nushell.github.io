import{_ as e,o as t,c as a,e as s}from"./app.43db386a.js";const n={},o=s(`<p>Post content to a url and retrieve data as a table if possible.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> post <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>body<span class="token operator">&gt;</span> <span class="token punctuation">{</span>flags<span class="token punctuation">}</span>
</code></pre></div><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>&lt;path&gt;</code> the URL to post to</li><li><code>&lt;body&gt;</code> the contents of the post body</li></ul><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li>-h, --help: Display this help message</li><li>-u, --user <code>&lt;any&gt;</code>: the username when authenticating</li><li>-p, --password <code>&lt;any&gt;</code>: the password when authenticating</li><li>-t, --content-type <code>&lt;any&gt;</code>: the MIME type of content to post</li><li>-l, --content-length <code>&lt;any&gt;</code>: the length of the content being posted</li><li>-r, --raw: return values as a string instead of a table</li></ul>`,7),l=[o];function r(c,i){return t(),a("div",null,l)}var d=e(n,[["render",r],["__file","post.html.vue"]]);export{d as default};
