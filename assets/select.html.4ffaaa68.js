import{_ as o,z as r,A as c,X as a,C as s,D as n,a6 as t}from"./framework.3d018c9f.js";const l={},p={id:"frontmatter-title-for-database",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-database","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=t(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; select ...select</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...select</code>: Select expression(s) on the table</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>selects a column from a database</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> db.sqlite <span class="token operator">|</span> into db <span class="token operator">|</span> <span class="token keyword">select</span> a <span class="token operator">|</span> describe
</code></pre></div><p>selects columns from a database using alias</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">open</span> db.sqlite
    <span class="token operator">|</span> into db
    <span class="token operator">|</span> <span class="token keyword">select</span> <span class="token punctuation">(</span>field a <span class="token operator">|</span> as new_a<span class="token punctuation">)</span> b c
    <span class="token operator">|</span> from table table_1
    <span class="token operator">|</span> describe
</code></pre></div>`,9),u={id:"frontmatter-title-for-filters",tabindex:"-1"},m=a("a",{class:"header-anchor",href:"#frontmatter-title-for-filters","aria-hidden":"true"},"#",-1),f={class:"command-title"},k=t(`<h2 id="signature-1" tabindex="-1"><a class="header-anchor" href="#signature-1" aria-hidden="true">#</a> Signature</h2><p><code>&gt; select ...rest --ignore-errors</code></p><h2 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: the columns to select from the table</li><li><code>--ignore-errors</code>: when a column has empty cells, instead of erroring out, replace them with nothing</li></ul><h2 id="examples-1" tabindex="-1"><a class="header-anchor" href="#examples-1" aria-hidden="true">#</a> Examples</h2><p>Select just the name column</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> <span class="token keyword">select</span> name
</code></pre></div><p>Select the name and size columns</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">ls</span> <span class="token operator">|</span> <span class="token keyword">select</span> name size
</code></pre></div>`,9),b={id:"frontmatter-title-for-lazyframe",tabindex:"-1"},g=a("a",{class:"header-anchor",href:"#frontmatter-title-for-lazyframe","aria-hidden":"true"},"#",-1),_={class:"command-title"},x=t(`<h2 id="signature-2" tabindex="-1"><a class="header-anchor" href="#signature-2" aria-hidden="true">#</a> Signature</h2><p><code>&gt; select ...select expressions</code></p><h2 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...select expressions</code>: Expression(s) that define the column selection</li></ul><h2 id="examples-2" tabindex="-1"><a class="header-anchor" href="#examples-2" aria-hidden="true">#</a> Examples</h2><p>Select a column from the dataframe</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>a b<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span> <span class="token operator">|</span> <span class="token keyword">select</span> a
</code></pre></div>`,7);function v(e,y){return r(),c("div",null,[a("h1",p,[i,s(),a("code",null,n(e.$frontmatter.title),1),s(" for database")]),a("div",d,n(e.$frontmatter.database),1),h,a("h1",u,[m,s(),a("code",null,n(e.$frontmatter.title),1),s(" for filters")]),a("div",f,n(e.$frontmatter.filters),1),k,a("h1",b,[g,s(),a("code",null,n(e.$frontmatter.title),1),s(" for lazyframe")]),a("div",_,n(e.$frontmatter.lazyframe),1),x])}const w=o(l,[["render",v],["__file","select.html.vue"]]);export{w as default};
