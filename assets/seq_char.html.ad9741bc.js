import{_ as s,z as n,A as o,X as e,C as t,D as r,a6 as c}from"./framework.3d018c9f.js";const i={},d={id:"frontmatter-title-for-generators",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#frontmatter-title-for-generators","aria-hidden":"true"},"#",-1),h={class:"command-title"},p=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; seq char ...rest --separator --terminator</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>...rest</code>: sequence chars</li><li><code>--separator {string}</code>: separator character (defaults to \\n)</li><li><code>--terminator {string}</code>: terminator character (defaults to \\n)</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>sequence a to e with newline separator</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">seq</span> char a e
</code></pre></div><p>sequence a to e with pipe separator separator</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">seq</span> char <span class="token parameter variable">-s</span> <span class="token string">&#39;|&#39;</span> a e
</code></pre></div>`,9);function u(a,f){return n(),o("div",null,[e("h1",d,[l,t(),e("code",null,r(a.$frontmatter.title),1),t(" for generators")]),e("div",h,r(a.$frontmatter.generators),1),p])}const m=s(i,[["render",u],["__file","seq_char.html.vue"]]);export{m as default};
