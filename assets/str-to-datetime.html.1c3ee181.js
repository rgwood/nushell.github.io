import{_ as a,o as e,c as s,e as t}from"./app.43db386a.js";const n={},o=t(`<h1 id="str-to-datetime" tabindex="-1"><a class="header-anchor" href="#str-to-datetime" aria-hidden="true">#</a> str to-datetime</h1><p>converts text into datetime</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> str to-datetime <span class="token punctuation">..</span>.args <span class="token punctuation">{</span>flags<span class="token punctuation">}</span>
</code></pre></div><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li>...args: optionally convert text into datetime by column paths</li></ul><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li>-h, --help: Display this help message</li><li>-z, --timezone <code>&lt;string&gt;</code>: Specify timezone if the input is timestamp, like &#39;UTC/u&#39; or &#39;LOCAL/l&#39;</li><li>-o, --offset <code>&lt;integer&gt;</code>: Specify timezone by offset if the input is timestamp, like &#39;+8&#39;, &#39;-4&#39;, prior than timezone</li><li>-f, --format <code>&lt;string&gt;</code>: Specify date and time formatting</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Convert to datetime</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;16.11.1984 8:00 am +0000&#39;</span> <span class="token operator">|</span> str to-datetime
</code></pre></div><p>Convert to datetime</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;2020-08-04T16:39:18+00:00&#39;</span> <span class="token operator">|</span> str to-datetime
</code></pre></div><p>Convert to datetime using a custom format</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;20200904_163918+0000&#39;</span> <span class="token operator">|</span> str to-datetime -f <span class="token string">&#39;%Y%m%d_%H%M%S%z&#39;</span>
</code></pre></div><p>Convert timestamp (no larger than 8e+12) to datetime using a specified timezone</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;1614434140&#39;</span> <span class="token operator">|</span> str to-datetime -z <span class="token string">&#39;UTC&#39;</span>
</code></pre></div><p>Convert timestamp (no larger than 8e+12) to datetime using a specified timezone offset (between -12 and 12)</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;1614434140&#39;</span> <span class="token operator">|</span> str to-datetime -o <span class="token string">&#39;+9&#39;</span>
</code></pre></div>`,19),i=[o];function r(p,l){return e(),s("div",null,i)}var d=a(n,[["render",r],["__file","str-to-datetime.html.vue"]]);export{d as default};
