import{_ as t,p as r,q as o,Q as s,t as e,v as n,a1 as c}from"./framework-344bb0e4.js";const i={},p={id:"frontmatter-title-for-strings",tabindex:"-1"},l=s("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str distance (compare-string) ...rest</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>compare-string</code>: the first string to compare</li><li><code>...rest</code>: For a data structure input, check strings at the given cell paths, and replace with result</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>get the edit distance between two strings</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;nushell&#39;</span> <span class="token operator">|</span> str distance <span class="token string">&#39;nutshell&#39;</span>
<span class="token number">1</span>
</code></pre></div><p>Compute edit distance between strings in record and another string, using cell paths</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>a: <span class="token string">&#39;nutshell&#39;</span> b: <span class="token string">&#39;numetal&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">|</span> str distance <span class="token string">&#39;nushell&#39;</span> <span class="token string">&#39;a&#39;</span> <span class="token string">&#39;b&#39;</span>
╭───┬───┬───╮
│ <span class="token comment"># │ a │ b │</span>
├───┼───┼───┤
│ <span class="token number">0</span> │ <span class="token number">1</span> │ <span class="token number">4</span> │
╰───┴───┴───╯

</code></pre></div>`,9);function u(a,g){return r(),o("div",null,[s("h1",p,[l,e(),s("code",null,n(a.$frontmatter.title),1),e(" for strings")]),s("div",d,n(a.$frontmatter.strings),1),h])}const k=t(i,[["render",u],["__file","str_distance.html.vue"]]);export{k as default};
