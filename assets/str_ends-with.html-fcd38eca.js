import{_ as n,p as r,q as i,Q as s,t as e,v as t,a1 as o}from"./framework-344bb0e4.js";const c={},l={id:"frontmatter-title-for-strings",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),p={class:"command-title"},h=o(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str ends-with (string) ...rest --ignore-case</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>string</code>: the string to match</li><li><code>...rest</code>: For a data structure input, check strings at the given cell paths, and replace with result</li><li><code>--ignore-case</code> <code>(-i)</code>: search is case insensitive</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Checks if string ends with &#39;.rb&#39;</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;my_library.rb&#39;</span> <span class="token operator">|</span> str ends-with <span class="token string">&#39;.rb&#39;</span>
<span class="token boolean">true</span>
</code></pre></div><p>Checks if string ends with &#39;.txt&#39;</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;my_library.rb&#39;</span> <span class="token operator">|</span> str ends-with <span class="token string">&#39;.txt&#39;</span>
<span class="token boolean">false</span>
</code></pre></div><p>Checks if string ends with &#39;.RB&#39;, case-insensitive</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token string">&#39;my_library.rb&#39;</span> <span class="token operator">|</span> str ends-with <span class="token parameter variable">-i</span> <span class="token string">&#39;.RB&#39;</span>
<span class="token boolean">true</span>
</code></pre></div>`,11);function g(a,u){return r(),i("div",null,[s("h1",l,[d,e(),s("code",null,t(a.$frontmatter.title),1),e(" for strings")]),s("div",p,t(a.$frontmatter.strings),1),h])}const _=n(c,[["render",g],["__file","str_ends-with.html.vue"]]);export{_ as default};
