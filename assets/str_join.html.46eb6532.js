import{_ as n,o as r,c as o,a,t as e,d as t,e as i}from"./app.ef551336.js";const c={},p={id:"frontmatter-title-for-strings",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-strings","aria-hidden":"true"},"#",-1),d=t(),h=t(" for strings"),u={class:"command-title"},g=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; str join (separator)</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>separator</code>: optional separator to use when creating string</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Create a string from input</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;nu&#39;</span>, <span class="token string">&#39;shell&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> str <span class="token function">join</span>
</code></pre></div><p>Create a string from input with a separator</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&#39;nu&#39;</span>, <span class="token string">&#39;shell&#39;</span><span class="token punctuation">]</span> <span class="token operator">|</span> str <span class="token function">join</span> <span class="token string">&#39;-&#39;</span>
</code></pre></div>`,9);function _(s,f){return r(),o("div",null,[a("h1",p,[l,d,a("code",null,e(s.$frontmatter.title),1),h]),a("div",u,e(s.$frontmatter.strings),1),g])}const k=n(c,[["render",_],["__file","str_join.html.vue"]]);export{k as default};
