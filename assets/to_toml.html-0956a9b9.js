import{_ as n,p as o,q as r,Q as a,t as e,v as s,a1 as c}from"./framework-344bb0e4.js";const p={},i={id:"frontmatter-title-for-formats",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#frontmatter-title-for-formats","aria-hidden":"true"},"#",-1),d={class:"command-title"},h=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; to toml </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Outputs an TOML string representing the contents of this record</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span>foo: <span class="token number">1</span> bar: <span class="token string">&#39;qwe&#39;</span><span class="token punctuation">}</span> <span class="token operator">|</span> to toml
bar <span class="token operator">=</span> <span class="token string">&quot;qwe&quot;</span>
foo <span class="token operator">=</span> <span class="token number">1</span>

</code></pre></div>`,5);function m(t,f){return o(),r("div",null,[a("h1",i,[l,e(),a("code",null,s(t.$frontmatter.title),1),e(" for formats")]),a("div",d,s(t.$frontmatter.formats),1),h])}const _=n(p,[["render",m],["__file","to_toml.html.vue"]]);export{_ as default};
