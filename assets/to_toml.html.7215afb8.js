import{_ as n,z as o,A as r,X as t,C as s,D as e,a6 as c}from"./framework.3d018c9f.js";const p={},i={id:"frontmatter-title-for-formats",tabindex:"-1"},l=t("a",{class:"header-anchor",href:"#frontmatter-title-for-formats","aria-hidden":"true"},"#",-1),d={class:"command-title"},u=c(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; to toml </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Outputs an TOML string representing the contents of this table</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>foo bar<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> to toml
</code></pre></div>`,5);function h(a,f){return o(),r("div",null,[t("h1",i,[l,s(),t("code",null,e(a.$frontmatter.title),1),s(" for formats")]),t("div",d,e(a.$frontmatter.formats),1),u])}const _=n(p,[["render",h],["__file","to_toml.html.vue"]]);export{_ as default};
