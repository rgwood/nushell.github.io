import{_ as n,o as r,c as o,a,t as s,d as t,e as i}from"./app.b798d81c.js";const l={},c={id:"frontmatter-title-for-dataframe-or-lazyframe",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#frontmatter-title-for-dataframe-or-lazyframe","aria-hidden":"true"},"#",-1),p=t(),u=t(" for dataframe or lazyframe"),h={class:"command-title"},m=i(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; unique --subset --last --maintain-order</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><ul><li><code>--subset {any}</code>: Subset of column(s) to use to maintain rows (lazy df)</li><li><code>--last</code>: Keeps last unique value. Default keeps first value (lazy df)</li><li><code>--maintain-order</code>: Keep the same order as the original DataFrame (lazy df)</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Returns unique values from a series</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">|</span> into <span class="token function">df</span> <span class="token operator">|</span> unique
</code></pre></div><p>Creates a is unique expression from a column</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> col a <span class="token operator">|</span> unique
</code></pre></div>`,9);function f(e,_){return r(),o("div",null,[a("h1",c,[d,p,a("code",null,s(e.$frontmatter.title),1),u]),a("div",h,s(e.$frontmatter.dataframe_or_lazyframe),1),m])}const g=n(l,[["render",f],["__file","unique.html.vue"]]);export{g as default};
