import{_ as t,p as o,q as p,Q as a,t as n,v as e,a1 as r}from"./framework-344bb0e4.js";const l={},c={id:"frontmatter-title-for-network",tabindex:"-1"},i=a("a",{class:"header-anchor",href:"#frontmatter-title-for-network","aria-hidden":"true"},"#",-1),u={class:"command-title"},d=r(`<h2 id="signature" tabindex="-1"><a class="header-anchor" href="#signature" aria-hidden="true">#</a> Signature</h2><p><code>&gt; url build-query </code></p><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Outputs a query string representing the contents of this record</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span> mode:normal userid:31415 <span class="token punctuation">}</span> <span class="token operator">|</span> url build-query
<span class="token assign-left variable">mode</span><span class="token operator">=</span>normal<span class="token operator">&amp;</span><span class="token assign-left variable">userid</span><span class="token operator">=</span><span class="token number">31415</span>
</code></pre></div><p>Outputs a query string representing the contents of this 1-row table</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>foo bar<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> url build-query
<span class="token assign-left variable">foo</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token assign-left variable">bar</span><span class="token operator">=</span><span class="token number">2</span>
</code></pre></div><p>Outputs a query string representing the contents of this record</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span>a:<span class="token string">&quot;AT&amp;T&quot;</span>, b: <span class="token string">&quot;AT T&quot;</span><span class="token punctuation">}</span> <span class="token operator">|</span> url build-query
<span class="token assign-left variable">a</span><span class="token operator">=</span>AT%26T<span class="token operator">&amp;</span><span class="token assign-left variable">b</span><span class="token operator">=</span>AT+T
</code></pre></div>`,9);function k(s,h){return o(),p("div",null,[a("h1",c,[i,n(),a("code",null,e(s.$frontmatter.title),1),n(" for network")]),a("div",u,e(s.$frontmatter.network),1),d])}const b=t(l,[["render",k],["__file","url_build-query.html.vue"]]);export{b as default};
